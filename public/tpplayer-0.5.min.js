var u=void 0,G=!0,J=null,K=!1;function da(){return function(){}}var TPVIEWER=TPVIEWER||{Va:"3D SYSTEMS",VERSION:"0.5b"};
function ha(){function d(h,k){h.children.forEach(function(h){h instanceof THREE.Mesh?k.push(h):h instanceof THREE.Object3D&&d(h,k)})}function h(h){if(h instanceof THREE.Object3D){var p,q,s,w=[];disp_model=new la;disp_model.geometries=[];d(h,w);if(0==w.length)return K;h=w[0].geometry.boundingBox.max.clone();p=w[0].geometry.boundingBox.min.clone();s=w.length;for(q=1;q<s;q+=1)h.x=h.x>w[q].geometry.boundingBox.max.x?h.x:w[q].geometry.boundingBox.max.x,h.y=h.y>w[q].geometry.boundingBox.max.y?h.y:w[q].geometry.boundingBox.max.y,
h.z=h.z>w[q].geometry.boundingBox.max.z?h.z:w[q].geometry.boundingBox.max.z,p.x=p.x<w[q].geometry.boundingBox.min.x?p.x:w[q].geometry.boundingBox.min.x,p.y=p.y<w[q].geometry.boundingBox.min.y?p.y:w[q].geometry.boundingBox.min.y,p.z=p.z<w[q].geometry.boundingBox.min.z?p.z:w[q].geometry.boundingBox.min.z;for(q=0;q<s;q+=1)w[q].geometry.j=w[q],disp_model.geometries.push(w[q].geometry);k(p,h);D=disp_model;return G}w=h.boundingBox.max.clone();p=h.boundingBox.min.clone();disp_model=new la;disp_model.geometries=
[];disp_model.geometries.push(h);k(p,w);D=disp_model;return G}function k(d,h){var k=disp_model,p,q,s,w,A=tpModelMaxLength;w=h.y-d.y;var B=h.z-d.z,D=h.x-d.x;q=k.geometries.length;k.area=0;k.volume=0;var F,I,H,M,U,V,ga,ca,ia,Ma,ja,La;for(p=0;p<q;p+=1){s=k.geometries[p];s.area=0;F=s.volume=0;for(I=s.faces.length;F<I;F++)H=s.faces[F],M=s.vertices[H.a],U=s.vertices[H.b],V=s.vertices[H.c],ga=M.x<U.x?M.x:U.x,ga=ga<V.x?ga:V.x,ca=M.y<U.y?M.y:U.y,ca=ca<V.y?ca:V.y,Ma=M.z<U.z?M.z:U.z,Ma=Ma<V.z?Ma:V.z,ja=M.x>
U.x?M.x:U.x,ja=ja>V.x?ja:V.x,ia=M.y>U.y?M.y:U.y,ia=ia>V.y?ia:V.y,La=M.z>U.z?M.z:U.z,La=La>V.z?La:V.z,H.bound_min={x:ga,y:ca,z:Ma},H.bound_max={x:ja,y:ia,z:La},ga=V.x-U.x,ca=V.y-U.y,ia=V.z-U.z,Ma=M.x-U.x,ja=M.y-U.y,La=M.z-U.z,H=ca*La-ia*ja,ia=ia*Ma-ga*La,ga=ga*ja-ca*Ma,H=Math.sqrt(H*H+ia*ia+ga*ga),s.area+=H/2,H=V.x*U.y*M.z,ga=U.x*V.y*M.z,ca=V.x*M.y*U.z,Ma=M.x*V.y*U.z,ja=U.x*M.y*V.z,M=M.x*U.y*V.z,s.volume+=1/6*(-H+ga+ca-Ma-ja+M);s.volume=Math.abs(s.volume);k.volume+=s.volume;k.area+=s.area}k.massComputed=
K;D=Math.max(D,w);D=Math.max(D,B);D=A/D;k.scaleFactor=D;A=new ma((d.x+h.x)/2,(d.y+h.y)/2,(d.z+h.z)/2,D);A.scale(h);A.scale(d);k.min=d.clone();k.max=h.clone();for(p=0;p<q;p+=1){s=k.geometries[p];s.boundingSphere===J&&(s.boundingSphere=new THREE.Sphere);s.boundingSphere.center=new THREE.Vector3(0,0,0);s.boundingSphere.radius=Math.sqrt(d.x*d.x+d.y*d.y+d.z*d.z);B=s.vertices.length;for(w=0;w<B;++w)if(s.vertices[w].W===u||!s.vertices[w].W)A.scale(s.vertices[w]),s.vertices[w].W=G;w=s.faces.length;for(B=
0;B<w;++B)A.scale(s.faces[B].bound_min),A.scale(s.faces[B].bound_max);A.scale(s.boundingBox.max);A.scale(s.boundingBox.min);s.parentPartNode=k}k.breps=k.geometries;k.children=[];k.unitToMM="1.0";k.isContainer=K;k.texture=C}var p,q,w,s,A,B,C=J,D=J,F=J,H=J,I,M;this.init=this.init=function(d){p=d.width===u?window.innerWidth:d.width;q=d.height===u?window.innerHeight:d.height;tpDOM=new pa;tpDebug=new TPVIEWER.ka;tpDebug.Qa();tpModelQuery=new TPVIEWER.T;tpUnitManager=new qa;tpModelMaxLength=100;w=tpDOM.createElement({className:"tp_viewer",
parent:d.containerID==u?document.body:document.getElementById(d.containerID),k:"width:"+p+"px;height:"+q+"px;"});w.width=p;w.height=q;H=new sa;H.init(w);M=H.ta()};this.resizeScene=this.resizeScene=function(d){if(F===u||F==J)return K;p=d.width===u?w.width:d.width;q=d.height===u?w.height:d.height;tpDOM.k(w,"width:"+p+"px;height:"+q+"px;");w.width=p;w.height=q;F.Ja(p,q);return G};this.load=this.load=function(d){s=d.URL===u?"":d.URL;A=d.textureURL===u?"":d.textureURL;B=d.mtlURL===u?"":d.mtlURL;given_format=
d.format===u?"":d.format;var k=[{m:".tptx",format:"TPTX"},{m:".tptx.lz",format:"TPTX"},{m:".stl",format:"STL"},{m:".obj",format:"OBJ"},{m:".ctm",format:"CTM"},{m:".mtl",format:"MTL"},{m:".tptx.m.lz",format:"CTM"}],p=0,q;if(""==given_format){for(p=0;p<k.length;++p)-1!==s.toLowerCase().indexOf(k[p].m,s.length-k[p].m.length)&&(given_format=k[p].format);if(""===given_format){if(d.onLoadFailed!==u)d.onLoadFailed("unsupported file format");return}}M.show();M.message("Downloading ...");"OBJ"===given_format&&
""!=B?(k=new THREE.OBJMTLLoader,d.imageURLlookup!==u&&(k.imageURLlookup=d.imageURLlookup),k.load(s,B,function(k){h(k);M.G();M.hide();if(D==J){if(d.onLoadFailed!==u)d.onLoadFailed("Failed to load OBJ and MTL")}else if(model_info=ta(D),d.onLoadFinished!==u)d.onLoadFinished(model_info)})):(k=new ua,k.init({url:s,responseType:"STL"==given_format||"CTM"==given_format||"TPTX"==given_format?"arraybuffer":"",ya:function(d){d.lengthComputable&&(d=100*(d.loaded/d.total),90>d?M.update("Load",d):(M.update("Load",
0),M.V(),M.message("Building 3D models ...")))},xa:function(k){function p(k){var w;if(w=k.getResponseHeader("Content-disposition"))I=w.split("=")[1].replace(/"/g,"");else{w=s.split("/");if(w==J||0==w.length)I="";I=w[w.length-1]}I=unescape(I);if("TPTX"===given_format&&(D=THREE.TPXLoader.prototype.createTPXModel(new Uint8Array(k.response)),D==J)){if(M.G(),M.hide(),d.onLoadFailed!==u)d.onLoadFailed("Failed to load: not supported old version")}else if("STL"===given_format&&(q=THREE.STLLoader.prototype.parse(k.response),
h(q)),"OBJ"===given_format&&(q=THREE.OBJLoader.prototype.parse(k.response),h(q)),"CTM"===given_format&&(k=new CTM.Stream(new Uint8Array(k.response)),k=new CTM.File(k),THREE.CTMLoader.prototype.createModelClassic(k,h)),M.G(),M.hide(),D==J){if(d.onLoadFailed!==u)d.onLoadFailed("Invalid TPTZ format")}else if(k=ta(D),d.onLoadFinished!==u)d.onLoadFinished(k)}tpDebug.timeEnd("loading");""!=A?THREE.ImageUtils.loadTexture(A,u,function(d){C=d;p(k)},function(){C=J;p(k)}):p(k)},onError:function(h){M.hide();
if(d.onLoadFailed!==u)d.onLoadFailed(h)}}),tpDebug.timeStart(),k.oa())};this.getFileName=this.getFileName=function(){return I};this.showProgressMessage=this.showProgressMessage=function(d,h){M.show();M.message(d);h&&M.V()};this.hideProgressMessage=this.hideProgressMessage=function(){M.G();M.hide()};this.render=this.render=function(){F.startScene()};this.startScene=this.startScene=function(d){D&&D.unitToMM!==u&&tpUnitManager.Oa(D.unitToMM);F=new va;F.init({dispModel:D,ab:H,width:p,height:q,B:w,eb:"WebGL",
hoverOnObjects:d.hoverOnObjects,hoverHighlightColor:d.hoverHighlightColor,onMouseMove:d.onMouseMove,onMouseDown:d.onMouseDown,onMouseUp:d.onMouseUp,onMouseWheel:d.onMouseWheel,postRenderCallback:d.postRenderCallback,R:d.boundingRadius});F.startScene()};this.explodeObjects=this.explodeObjects=function(d){return F.explodeObjects(d)};this.clipView=this.clipView=function(d){F.clipView(d)};this.setCamera=this.setCamera=function(d){F.setCamera(d)};this.getCameraInfo=this.getCameraInfo=function(){return F.getCameraInfo()};
this.setTrackballEvents=this.setTrackballOperations=function(d){return F.Pa(d)};this.startHover=this.startHover=function(d){return F.startHover(d)};this.stopHover=this.stopHover=function(){return F.stopHover()};this.getObjectsClipBound=function(d){return F.sa(d)};this.addObject=this.J=function(d){return F.J(d)};this.showObject=this.I=function(d){return F.I(d)};this.hideObject=this.hideObject=function(d){return F.hideObject(d)};this.hideOtherObjects=this.hideOtherObjects=function(d){return F.hideOtherObjects(d)};
this.showAllObject=this.showAllObject=function(){return F.showAllObject()};this.hideAllObject=this.hideAllObject=function(){return F.hideAllObject()};this.setObjectOpacity=this.setObjectOpacity=function(d,h){return F.setObjectOpacity(d,h)};this.resetObjectOpacity=this.resetObjectOpacity=function(d){return F.setObjectOpacity(d,"reset")};this.setObjectColor=this.setObjectColor=function(d,h){return F.setObjectColor(d,h)};this.resetObjectColor=this.M=function(d){return F.M(d)};this.setObjectEmissiveColor=
this.setObjectEmissiveColor=function(d,h){return F.setObjectEmissiveColor(d,h)};this.resetObjectEmissiveColor=this.resetObjectEmissiveColor=function(d){return F.resetObjectEmissiveColor(d)};this.setObjectHoverColor=this.setObjectHoverColor=function(d,h){return F.setObjectHoverColor(d,h)};this.resetObjectHoverColor=this.resetObjectHoverColor=function(d){return F.resetObjectHoverColor(d)};this.setObjectMaterial=this.setObjectMaterial=function(d,h){return F.setObjectMaterial(d,h)};this.resetObjectMaterial=
this.resetObjectMaterial=function(d){return F.resetObjectMaterial(d)};this.enableShadowCast=this.enableShadowCast=function(d){return F.enableShadowCast(d)};this.disableShadowCast=this.disableShadowCast=function(d){return F.disableShadowCast(d)};this.setRotationCenter=this.setRotationCenter=function(d){return F.setRotationCenter(d)};this.resetRotationCenter=this.resetRotationCenter=function(){return F.resetRotationCenter()};this.showAxis=this.showAxis=function(){return F.showAxis()};this.hideAxis=
this.hideAxis=function(){return F.hideAxis()};this.getModelInfo=this.qa=function(){return ta(D)};this.getObjectInfo=this.getObjectInfo=function(d){return tpModelQuery.getObjectInfo(d)};this.changeTextureSource=this.changeTextureSource=function(d,h){return F.changeTextureSource(d,h)};this.saveAsSTL=this.saveAsSTL=function(d,h){var k=h===u?I+".stl":h;".stl"==I&&(I="(no name).stl");return F.saveAsSTL({objectID:d,name:k})};this.captureScreen=this.captureScreen=function(d){var h="png";d!==u&&"png"===d&&
(h="png");return F.captureScreen(h)};this.showCustomObject=this.showCustomObject=function(d){return F.showCustomObject(d)};this.hideCustomObject=this.hideCustomObject=function(d){return F.hideCustomObject(d)};this.scaleCustomObject=this.N=function(d,h,k,p){return F.N(d,h,k,p)};this.moveCustomObject=this.moveCustomObject=function(d,h,k,p){return F.moveCustomObject(d,h,k,p)};this.addCustomImageObject=this.Z=function(d){return F.$(d)};this.addCustomShadowFloorObject=this.addCustomShadowFloorObject=function(d){return F.ba(d)};
this.addCustomAxisNormalPlaneObject=this.addCustomAxisNormalPlaneObject=function(d){return F.Y(d)};this.updateCustomAxisNormalPlaneObject=this.updateCustomAxisNormalPlaneObject=function(d,h){return F.Ra(d,h)};this.getCustomAxisNormalPlaneObjectInfo=this.getCustomAxisNormalPlaneObjectInfo=function(d){return F.pa(d)};this.addCustomLineObject=this.addCustomLineObject=function(d){return F.aa(d)};this.addCustomSphereObject=this.addCustomSphereObject=function(d){return F.ca(d)};this.updateCustomLineObject=
this.updateCustomLineObject=function(d,h){return F.Sa(d,h)};return this}ha.prototype.detectBrowserSupport=function(){var d={};d.canvas=!!window.CanvasRenderingContext2D;var h;try{h=!!window.WebGLRenderingContext}catch(k){h=K}d.webgl=h;var p;a:{var q=["webgl","experimental-webgl","moz-webgl","webkit-3d"];for(h=0;4>h;h++)try{if(document.createElement("canvas").getContext(q[h])){p=G;break a}}catch(w){}p=K}d.webglEnabled=p;return d};TPVIEWER.ERROR_CODE={};TPVIEWER.VIEW_DIR={};TPVIEWER.MATERIAL={};
TPVIEWER.MODEL_TYPE={};TPVIEWER.EVENT_TYPE={};TPVIEWER.SECTION_MODE={};TPVIEWER.SECTION_DIR={};window.TPVIEWER=TPVIEWER;window.TPVIEWER.ERROR_CODE=TPVIEWER.ERROR_CODE;window.TPVIEWER.VIEW_DIR=TPVIEWER.VIEW_DIR;window.TPVIEWER.MATERIAL=TPVIEWER.MATERIAL;window.TPVIEWER.MODEL_TYPE=TPVIEWER.MODEL_TYPE;window.TPVIEWER.SECTION_MODE=TPVIEWER.SECTION_MODE;window.TPVIEWER.SECTION_DIR=TPVIEWER.SECTION_DIR;window.TPVIEWER.player=ha;window.TPVIEWER.dispModel=la;window.TPVIEWER.scaler=ma;
TPVIEWER.ERROR_CODE.SUCCESS=1;TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID=2;TPVIEWER.ERROR_CODE.NO_DATA=3;TPVIEWER.ERROR_CODE.BROWSER_NOT_SUPPORTED=4;TPVIEWER.VIEW_DIR.ORTHO=0;TPVIEWER.VIEW_DIR.TOP=1;TPVIEWER.VIEW_DIR.BOTTOM=2;TPVIEWER.VIEW_DIR.LEFT=3;TPVIEWER.VIEW_DIR.RIGHT=4;TPVIEWER.VIEW_DIR.FRONT=5;TPVIEWER.VIEW_DIR.BACK=6;TPVIEWER.VIEW_DIR.CUSTOM=7;TPVIEWER.MATERIAL.CUSTOM=0;TPVIEWER.MATERIAL.PLASTIC=1;TPVIEWER.MATERIAL.CERAMICS=2;TPVIEWER.MATERIAL.BRONZE=3;TPVIEWER.MATERIAL.SILVER=4;
TPVIEWER.MATERIAL.GOLD=5;TPVIEWER.MODEL_TYPE.CAD_PART=1;TPVIEWER.MODEL_TYPE.CAD_ASSEMBLY=2;TPVIEWER.MODEL_TYPE.MESH=3;TPVIEWER.MODEL_TYPE.POINTCLOUD=4;TPVIEWER.EVENT_TYPE.MOUSE_MOVE=1;TPVIEWER.EVENT_TYPE.LEFT_UP=2;TPVIEWER.EVENT_TYPE.LEFT_DOWN=3;TPVIEWER.EVENT_TYPE.RIGHT_UP=4;TPVIEWER.EVENT_TYPE.RIGHT_DOWN=5;TPVIEWER.EVENT_TYPE.MOUSE_WHEEL=6;TPVIEWER.SECTION_MODE.DISABLED=0;TPVIEWER.SECTION_MODE.ENABLED=1;TPVIEWER.SECTION_DIR.POS_X=0;TPVIEWER.SECTION_DIR.POS_Y=1;TPVIEWER.SECTION_DIR.POS_Z=2;
TPVIEWER.SECTION_DIR.NEG_X=3;TPVIEWER.SECTION_DIR.NEG_Y=4;TPVIEWER.SECTION_DIR.NEG_Z=5;
function wa(d){function h(d){var h,k,p={},H={},M={},aa;if(d.offsetX&&d.offsetY)k=d.offsetX,aa=d.offsetY;else{k=d.target;for(aa=h=0;k;)aa+=k.offsetLeft?k.offsetLeft:0,h+=k.offsetTop?k.offsetTop:0,k=k.offsetParent?k.offsetParent:k.parentNode;k=d.pageX-aa;aa=d.pageY-h}h=k;k=aa;p.x=h;p.y=k;N.screenPoint=p;N.eventType=TPVIEWER.EVENT_TYPE.MOUSE_MOVE;N.objectID=J;N.objectPoint=J;N.objectNormal=J;N.nativeMouseEvent=d;q==J?d=J:(d=new THREE.Vector3(2*(h/w)-1,2*-(k/s)+1,1),B.unprojectVector(d,A),d=(new THREE.Raycaster(A.position,
d.sub(A.position).normalize())).intersectObjects(q),d=0<d.length?d[0]:J);if(d){L!=d.object&&-1!=I&&(L&&L.material.emissive!==u&&L.material.emissive.setHex(L.material.t),L=d.object,L.material.emissive!==u&&(L.material.t=L.material.emissive.getHex()),L.material.emissive!==u&&L.material.emissive.setHex(I),F());H.x=d.point.x*C+D.x;H.y=d.point.y*C+D.y;H.z=d.point.z*C+D.z;N.objectPoint=H;d.face!==u&&(M.x=d.face.normal.x,M.y=d.face.normal.y,M.z=d.face.normal.z,N.objectNormal=M);var O,H=d.object;try{if(H.geometry===
u||!H.geometry)O=J;else{var P=H.geometry;O=P.parentPartNode===u||!P.parentPartNode?J:P.parentPartNode.F}}catch(V){O=J}N.objectID=O}else L&&-1!=I&&(L.material.emissive!==u&&L.material.emissive.setHex(L.material.t),F()),L=J,N&&(N.objectPoint=J);Q!==u&&Q(N)}function k(d){d.preventDefault();N&&(N.eventType=TPVIEWER.EVENT_TYPE.MOUSE_WHEEL,N.nativeMouseEvent=d);R!==u&&R(N)}var p,q,w,s,A,B,C,D,F,H,I,M,N={},L,Q,P,O,R;p=d.B;q=d.Ma;D=d.translate;C=d.scale;A=d.camera;w=d.width;s=d.height;M=I=(H=d.hoverOnObjects===
u?K:d.hoverOnObjects)?d.hoverHighlightColor===u?-1:d.hoverHighlightColor:-1;F=d.Ha;Q=d.onMouseMove;P=d.onMouseDown;O=d.onMouseUp;R=d.onMouseWheel;B=new THREE.Projector;p.addEventListener("mousemove",function(d){d.preventDefault();if(H)return h(d)},K);p.addEventListener("mouseup",function(d){d.preventDefault();h(d);N&&(N.eventType=2==d.button?TPVIEWER.EVENT_TYPE.RIGHT_UP:TPVIEWER.EVENT_TYPE.LEFT_UP);O!==u&&O(N)},K);p.addEventListener("mousedown",function(d){d.preventDefault();h(d);N&&(N.eventType=
2==d.button?TPVIEWER.EVENT_TYPE.RIGHT_DOWN:TPVIEWER.EVENT_TYPE.LEFT_DOWN);P!==u&&P(N)},K);p.addEventListener("DOMMouseScroll",k,K);p.addEventListener("mousewheel",k,K);this.startHover=function(d){H=G;d===u?I=M:(d.hoverHighlightColor===u?I=M?M:-1:M=I=d.hoverHighlightColor,d.onMouseMove!==u&&(Q=d.onMouseMove))};this.stopHover=function(){H=K;I=-1};this.setSize=function(d,h){w=d;s=h}}
function xa(d){var h,k;h=d.va;k=d.wa;this.save=function(d,q){var w=d.name!==u?d.name:"savedFromTPPlayer.stl";try{var s=0,A,B,C,D,F,H,I,M,N,L,Q,P,O,R,$,T,S,Y,X,ea,aa,Z,U,V,ga,ca,ia;for(D=0;D<q.length;++D)s+=q[D].geometry.faces.length;A=new ArrayBuffer(84+50*s);B=new DataView(A);for(D=C=0;80>D;++D)B.setInt8(C++,0);B.setInt32(C,s,G);C+=4;for(F=0;F<q.length;++F){I=q[F].geometry;H=I.faces.length;for(D=0;D<H;++D)M=I.faces[D],N=I.vertices[M.a].x*h+k.x,L=I.vertices[M.a].y*h+k.y,Q=I.vertices[M.a].z*h+k.z,
P=I.vertices[M.b].x*h+k.x,O=I.vertices[M.b].y*h+k.y,R=I.vertices[M.b].z*h+k.z,$=I.vertices[M.c].x*h+k.x,T=I.vertices[M.c].y*h+k.y,S=I.vertices[M.c].z*h+k.z,Y=$-P,X=T-O,ea=S-R,aa=N-P,Z=L-O,U=Q-R,V=X*U-ea*Z,ga=ea*aa-Y*U,ca=Y*Z-X*aa,ia=Math.sqrt(V*V+ga*ga+ca*ca),1E-7<ia&&(V/=ia,ga/=ia,ca/=ia),B.setFloat32(C,V,G),C+=4,B.setFloat32(C,ga,G),C+=4,B.setFloat32(C,ca,G),C+=4,B.setFloat32(C,N,G),C+=4,B.setFloat32(C,L,G),C+=4,B.setFloat32(C,Q,G),C+=4,B.setFloat32(C,P,G),C+=4,B.setFloat32(C,O,G),C+=4,B.setFloat32(C,
R,G),C+=4,B.setFloat32(C,$,G),C+=4,B.setFloat32(C,T,G),C+=4,B.setFloat32(C,S,G),C+=4,B.setInt8(C++,0,G),B.setInt8(C++,0,G)}if(stlBuffer=A)try{var Ma=new Uint8Array(stlBuffer),ja,La;try{La=new Blob([Ma])}catch(Va){try{ja=new BlobBuilder,ja.append(ab),La=ja.getBlob()}catch(ba){try{ja=new WebKitBlobBuilder,ja.append(ab),La=ja.getBlob()}catch(ra){ja=new MozBlobBuilder,ja.append(ab),La=ja.getBlob()}}}saveAs(La,w)}catch(oa){return TPVIEWER.ERROR_CODE.BROWSER_NOT_SUPPORTED}else return TPVIEWER.ERROR_CODE.NO_DATA;
return TPVIEWER.ERROR_CODE.SUCCESS}catch(ka){return TPVIEWER.ERROR_CODE.BROWSER_NOT_SUPPORTED}}}function sa(){var d;this.init=function(h){d=new za(h)};this.gb=da();this.ta=function(){return d}}
function za(d){var h,k,p,q,w=d.width,s=d.height,A,B;A=0.3*w;B=0.06*s;25<B&&(B=25);h=tpDOM.createElement({id:"progress",parent:d,k:"width:"+A+"px;height:"+B+"px;left:"+(w-A)/2+"px;top:"+(s-B)/2+"px;"});q=tpDOM.createElement({id:"message",parent:h,k:"top:"+0.1*B+"px;left:"+0.3*A+"px;"});k=tpDOM.createElement({id:"indicator",parent:h});p=tpDOM.createElement({id:"spinner",parent:h,k:"top:"+(B-20)/2+"px;left:2px;"});tpDOM.hide(p);this.show=function(){tpDOM.show(h)};this.hide=function(){tpDOM.hide(h)};
this.message=function(d){tpDOM.html(q,d)};this.update=function(d,h){tpDOM.k(k,"width:"+h+"%")};this.V=function(){tpDOM.show(p)};this.G=function(){tpDOM.hide(p)}}function ma(d,h,k,p){this.scale=function(q){q.x-=d;q.x*=p;q.y-=h;q.y*=p;q.z-=k;q.z*=p}}
function qa(){var d=1,h=[{name:"mm",e:1},{name:"cm",e:10},{name:"meter",e:1E3},{name:"km",e:1E6},{name:"inch",e:25.4},{name:"feet",e:304.8},{name:"yard",e:914.4},{name:"mile",e:1609344},{name:"fathom",e:1828},{name:"micron",e:0.0010},{name:"thou",e:0.0254}];this.Oa=function(h){d=h};this.ra=function(){return d};this.fb=da();this.toString=function(d){var p,q;p=0;for(q=h.length;p<q;++p)if(1E-10>Math.abs(d-h[p].e))return h[p].name;return"unknown"};this.ib=function(d){i=0;for(len=h.length;i<len;++i)if(-1!=
d.indexOf(h[i].name))return h[i].e;return 1}}TPVIEWER.ka=function(){var d=K,h="";this.Qa=function(){d=G};this.Ya=function(){d=K};this.Xa=function(){if(d)debugger};this.isDebug=function(){return d};this.timeStart=function(){h="loading";d&&console.time(h)};this.timeEnd=function(){d&&console.timeEnd(h)};this.print=function(h){d&&console.log("TP: "+h)};this.printInt=function(h,p){d&&console.log("TP: "+h+"%d",p)}};
function ua(){var d,h="",k,p,q,w=K;this.init=function(s){s.url!=u&&(d=s.url,h=s.responseType,k=s.ya,p=s.xa,q=s.onError,w=G)};this.oa=function(){if(w){var s,A=0;s=new XMLHttpRequest;s.onreadystatechange=function(){4==s.readyState?200==s.status||0==s.status?p!=u&&p(s):q!=u&&q(s.responseText):3==s.readyState?0==A&&(A=s.getResponseHeader("Content-Length")):2==s.readyState&&(A=s.getResponseHeader("Content-Length"))};k!=u&&(s.onprogress=k);s.open("GET",d,G);""!=h&&(s.responseType=h);s.overrideMimeType&&
s.overrideMimeType("text/plain; charset=x-user-defined");s.setRequestHeader("Content-Type","text/plain");s.send(J)}}}
function pa(){this.createElement=function(d){var h=document.createElement("div");d.className!==u&&(h.className=d.className);d.id!==u&&(h.id=d.id);d.parent!==u&&d.parent.appendChild(h);d.k!==u&&(h.style.cssText=d.k);return h};this.k=function(d,h){d.style.cssText=h};this.show=function(d){d.style.visibility="visible"};this.hide=function(d){d.style.visibility="hidden"};this.html=function(d,h){d.innerHTML=h};this.Wa=function(d){var h=0,k=0;do h+=d.offsetTop||0,k+=d.offsetLeft||0,d=d.offsetParent;while(d);
return{top:h,left:k}}}function la(d){this.textureURL="";var h;this.F=h="tpObj"+la.prototype.count;la.prototype.count+=1;la.prototype.S[h]=this;this.D=d===u?J:d}la.prototype.count=0;la.prototype.S=[];TPVIEWER.T=da();function ta(d){if(d.part===u||!d.part)return{objectID:d.F,type:TPVIEWER.MODEL_TYPE.MESH};var h={},d=d.part.children[0];h.objectID=d.F;h.type=0<d.children.length?TPVIEWER.MODEL_TYPE.CAD_ASSEMBLY:TPVIEWER.MODEL_TYPE.CAD_PART;h.unit=tpUnitManager.toString(tpUnitManager.ra());return h}
function Aa(d){try{var h=la.prototype.S[d]}catch(k){return J}return h===u?J:h}function Ba(d){function h(d,k){var w,s;w=0;for(s=d.breps.length;w<s;++w)k.push(d.breps[w].j);w=0;for(s=d.children.length;w<s;++w)h(d.children[w],k)}var k=[],d=Aa(d);if(!d)return J;if(d.breps===u)return k.push(d.f[0]),k;h(d,k);return k}
TPVIEWER.T.prototype.getObjectInfo=function(d){var h=Aa(d);if(!h)return J;var k,p,q=0,w=Ba(d);if(w){k=0;for(p=w.length;k<p;k+=1)w[k]!==u&&(q+=w[k].geometry.faces.length)}k={};p={};w={};k.name=h.name;k.area=h.massComputed?h.area*this.scale*this.scale:h.area;k.volume=h.massComputed?h.volume*this.scale*this.scale*this.scale:h.volume;p.x=h.min.x*this.scale+this.v.x;p.y=h.min.y*this.scale+this.v.y;p.z=h.min.z*this.scale+this.v.z;w.x=h.max.x*this.scale+this.v.x;w.y=h.max.y*this.scale+this.v.y;w.z=h.max.z*
this.scale+this.v.z;k.min=p;k.max=w;k.numBreps=h.breps===u?0:h.breps.length;k.isContainer=h.isContainer;k.objectID=d;k.parentID=h.D===u||!h.D?J:h.D.F;w=[];if(h.children!==u){d=0;for(p=h.children.length;d<p;++d)w.push(h.children[d].F)}k.childrenIDs=w;k.facetCount=q;return k};
function va(){function d(d){d.x=(d.x-D.x)/B;d.y=(d.y-D.y)/B;d.z=(d.z-D.z)/B}function h(){R!==u&&R?R.render(0.5):(Q.da(I.C()),$.render(L,I.C()));T!==u&&T()}function k(){requestAnimationFrame(k);N.update()}function p(d,h){P[d]=h;++O;L.add(h)}function q(d,h,k,p){var q,s;q=0;for(s=d.length;q<s;q+=1)if(d[q]!==u)if(k&&d[q].material!==u)if("opacity"===h)"reset"===p?(d[q].material.opacity=d[q].material.U,d[q].material.transparent=1==d[q].material.opacity?K:G,d[q].i!==u&&(d[q].i.visible=0==d[q].material.opacity?
K:G)):(1<=p?(d[q].material.transparent=K,d[q].material.opacity=1):(d[q].material.transparent=G,d[q].material.opacity=p),0==p?d[q].i!==u&&(d[q].i.visible=K):d[q].i!==u&&(d[q].i.visible=G));else if("color"===h)"reset"===p?d[q].material.H!==u&&(d[q].material.color=d[q].material.H):d[q].material.color=new THREE.Color(p);else if("material"==h)if("reset"===p)M.Ia(d[q].material);else if(p.materialIndex===u)break;else p.materialIndex==TPVIEWER.MATERIAL.CUSTOM?M.ea(d[q].material,p.material):M.fa(d[q].material,
p.materialIndex);else"emcolor"==h?"reset"===p?(d[q].material.t=0,d[q].material.emissive.setHex(0)):(d[q].material.t=p,d[q].material.emissive.setHex(p)):"hvcolor"==h?"reset"===p?d[q].material.emissive.setHex(d[q].material.t):(d[q].material.t===u&&(d[q].material.t=d[q].material.emissive.getHex()),d[q].material.emissive.setHex(p)):d[q].material[h]=p;else d[q][h]=p,d[q].i!==u&&(d[q].i[h]=p)}function w(d,k,p,q){var s={},w;w=I.getCameraInfo();s.animate=d;s.viewDirection=TPVIEWER.VIEW_DIR.CUSTOM;w.lookAt.x=
k;w.lookAt.y=p;w.lookAt.z=q;s.camera=w;I.setCamera(s);h();return TPVIEWER.ERROR_CODE.SUCCESS}var s,A,B=1,C,D,F,H,I,M,N,L,Q,P=[],O=0,R=J,$,T,S,Y,X,ea=-1E3;this.init=function(d){function k(d,h){var p,q,s,w={};p=0;for(q=d.breps.length;p<q;p+=1)s=d.breps[p],s.j!==u&&(s.j.u={},s.j.u.x=(s.min.x+s.max.x)/2-h.x,s.j.u.y=(s.min.y+s.max.y)/2-h.y,s.j.u.z=(s.min.z+s.max.z)/2-h.z);w.x=(d.min.x+d.max.x)/2;w.y=(d.min.y+d.max.y)/2;w.z=(d.min.z+d.max.z)/2;p=0;for(q=d.children.length;p<q;p+=1)k(d.children[p],w)}s=d.dispModel;
A=d.B;F=d.width;H=d.height;T=d.postRenderCallback;M=new Ca;s?(B=s.scaleFactor!==u?1/s.scaleFactor:1,C=new THREE.Vector3((s.max.x-s.min.x)/2,(s.max.y-s.min.y)/2,(s.max.z-s.min.z)/2),D=C.clone().multiplyScalar(B),M.envMap=s.envMap):(B=1,C=new THREE.Vector3(0,0,0),D=new THREE.Vector3(0,0,0),M.envMap=J);tpModelQuery.scale=B;tpModelQuery.v={x:D.x,y:D.y,z:D.z};F*=1;H*=1;var p=new THREE.Scene;p.fog=new THREE.Fog(13426943,500,1E4);L=p;if(s){var p=L,q=s.geometries,w={},O,P,R=0,ja=0,La=0,Va=0,ba=0,ra,oa,ka,
Ua,rb=G;s.f=[];s.ua=[];s.cb=[];def_mat=Da(M);P=new THREE.MeshBasicMaterial({vertexColors:THREE.VertexColors,color:3355443,opacity:1,wireframe:G,wireframeLinewidth:1});M.A(P);s.ambients!=u&&s.ambients.length==q.length&&(rb=K);R=0;for(ja=q.length;R<ja;R+=1){q[R].j!==u&&q[R].j!=J?(Ua=q[R].j,O=Ua.material,O.side=THREE.DoubleSide,Ea(Ua.material)):(rb?O=def_mat:(w.ambient=s.ambients[R],w.diffuse=s.diffuses[R],w.shininess=s.shinesses[R],w.scene=p,O=M.createMaterial(w),M.A(O)),Ua=new THREE.Mesh(q[R],O));
q[R].j=Ua;if((q[R].K&&0<q[R].K[0].length||q[R].faceVertexUvs&&0<q[R].faceVertexUvs[0].length)&&s.texture!==u&&s.texture)O.map=s.texture;M.A(O);p.add(Ua);s.f.push(Ua);if(!(q[R].edges===u||0==q[R].edges.length)){O=new THREE.Geometry;La=Va=0;for(ba=q[R].edges.length;La<ba;++La){ra=0;for(oa=q[R].edges[La].length;ra<oa;++ra)ka=q[R].edges[La][ra],O.vertices.push(q[R].vertices[ka/3]);for(ra=0;ra<oa-1;++ra)q[R].edges[La][ra]!=q[R].edges[La][ra+1]&&O.faces.push(new THREE.Face3(ra+Va,ra+1+Va,ra+Va));Va+=oa}O=
new THREE.Mesh(O,P);Ua.i=O;s.ua.push(O);p.add(O)}}}new THREE.Projector;Q=new Fa(L);if(d.R!==u)p=d.R;else{p=s.geometries;i=q=0;for(n=p.length;i<n;i+=1)p[i].boundingSphere&&(q=p[i].boundingSphere.radius>q?p[i].boundingSphere.radius:q);p=q}ea=p;p=new Ga({B:A,rad:ea,Ua:F,Ta:H});p.C().X.addEventListener("change",h);I=p;N=I.C().X;renderer_local=new THREE.WebGLRenderer({antialias:G});renderer_local.sortObjects=K;renderer_local.setSize(F,H);renderer_local.setClearColor(16777215,1);renderer_local.autoClear=
G;A.appendChild(renderer_local.domElement);renderer_local.shadowMapEnabled=G;renderer_local.hb=G;$=renderer_local;Y=new xa({va:B,wa:D});p=L;q=0.52*tpModelMaxLength;w=new THREE.Object3D;object=new THREE.ArrowHelper(new THREE.Vector3(1,0,0),new THREE.Vector3(0,0,0),15,16711680);object.position.set(-q,-q,-q);w.add(object);object=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,0),15,65280);object.position.set(-q,-q,-q);w.add(object);object=new THREE.ArrowHelper(new THREE.Vector3(0,
0,1),new THREE.Vector3(0,0,0),15,255);object.position.set(-q,-q,-q);w.add(object);p.add(w);X=w;if(!(s==J||s.part===u)){p={};P=s.part.children[0];p.x=(P.min.x+P.max.x)/2;p.y=(P.min.y+P.max.y)/2;p.z=(P.min.z+P.max.z)/2;q=0;for(w=P.children.length;q<w;q+=1)k(P.children[q],p)}S=new wa({B:$.domElement,Ma:s==J?J:s.f,width:F,height:H,camera:I.C(),translate:D,scale:B,Ha:h,hoverOnObjects:d.hoverOnObjects,hoverHighlightColor:d.hoverHighlightColor,onMouseMove:d.onMouseMove,onMouseUp:d.onMouseUp,onMouseDown:d.onMouseDown,
onMouseWheel:d.onMouseWheel});return this};this.startScene=function(){h();k()};this.setObjectColor=function(d,k){var p=Ba(d);if(!p)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(p,"color",G,k);h();return TPVIEWER.ERROR_CODE.SUCCESS};this.M=function(d){d=Ba(d);if(!d)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(d,"color",G,"reset");h();return TPVIEWER.ERROR_CODE.SUCCESS};this.setObjectEmissiveColor=function(d,k){var p=Ba(d);if(!p)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(p,"emcolor",G,k);h();
return TPVIEWER.ERROR_CODE.SUCCESS};this.resetObjectEmissiveColor=function(d){d=Ba(d);if(!d)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(d,"emcolor",G,"reset");h();return TPVIEWER.ERROR_CODE.SUCCESS};this.setObjectHoverColor=function(d,k){var p=Ba(d);if(!p)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(p,"hvcolor",G,k);h();return TPVIEWER.ERROR_CODE.SUCCESS};this.resetObjectHoverColor=function(d){d=Ba(d);if(!d)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(d,"hvcolor",G,"reset");h();return TPVIEWER.ERROR_CODE.SUCCESS};
this.J=function(d){if(d.type!==u&&d.type==TPVIEWER.MODEL_TYPE.POINTCLOUD)return m=new THREE.ParticleSystem(d.geometry,new THREE.ParticleBasicMaterial({size:d.Da!==u?d.Da:2,vertexColors:G})),L.add(m),h(),TPVIEWER.ERROR_CODE.SUCCESS};this.I=function(d){d=Ba(d);if(!d)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(d,"visible",K,G);h();return TPVIEWER.ERROR_CODE.SUCCESS};this.hideObject=function(d){d=Ba(d);if(!d)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(d,"visible",K,K);h();return TPVIEWER.ERROR_CODE.SUCCESS};
this.hideOtherObjects=function(d){q(s.f,"visible",K,K);return this.I(d)};this.setObjectOpacity=function(d,k){var p=Ba(d);if(!p)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(p,"opacity",G,k);h();return TPVIEWER.ERROR_CODE.SUCCESS};this.showAllObject=function(){q(s.f,"visible",K,G);h();return TPVIEWER.ERROR_CODE.SUCCESS};this.hideAllObject=function(){q(s.f,"visible",K,K);h();return TPVIEWER.ERROR_CODE.SUCCESS};this.setObjectMaterial=function(d,k){var p=Ba(d);if(!p)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;
q(p,"material",G,k);h();return TPVIEWER.ERROR_CODE.SUCCESS};this.resetObjectMaterial=function(d){d=Ba(d);if(!d)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(d,"material",G,"reset");h();return TPVIEWER.ERROR_CODE.SUCCESS};this.enableShadowCast=function(d){d=Ba(d);if(!d)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(d,"castShadow",K,G);h();return TPVIEWER.ERROR_CODE.SUCCESS};this.disableShadowCast=function(d){d=Ba(d);if(!d)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;q(d,"castShadow",K,K);h();return TPVIEWER.ERROR_CODE.SUCCESS};
this.setRotationCenter=function(d,h){var k=Aa(d);if(!k)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;var p;p=k.min===u?k.D.min:k.min;if(p===u||!p)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;k=k.max===u?k.D.max:k.max;return w(h,(p.x+k.x)/2,(p.y+k.y)/2,(p.z+k.z)/2)};this.resetRotationCenter=function(d){return w(d,0,0,0)};this.hideAxis=function(){var d,k;if(X&&X.children){d=0;for(k=X.children.length;d<k;++d)X.children[d].cone.visible=K,X.children[d].line.visible=K,X.children[d].visible=K;X.visible=K;
h()}return TPVIEWER.ERROR_CODE.SUCCESS};this.showAxis=function(){var d,k;if(X&&X.children){d=0;for(k=X.children.length;d<k;++d)X.children[d].cone.visible=G,X.children[d].line.visible=G,X.children[d].visible=G;X.visible=G;h()}return TPVIEWER.ERROR_CODE.SUCCESS};this.explodeObjects=function(d){if(s!=J&&!(s.f===u||0>s.f.length)){var k,p,q,w,A,B;k=0;for(p=s.f.length;k<p;k+=1)q=s.f[k],q.u!==u&&(w=q.u.x*d,A=q.u.y*d,B=q.u.z*d,q.position.set(w,A,B),q.i!==u&&q.i.position.set(w,A,B));h()}};this.captureScreen=
function(d){h();return $.domElement.toDataURL("image/"+d)};this.clipView=function(d){d.mode!==u&&M.d("clipStatus",d.mode);if(d.direction!==u)switch(d.direction){case TPVIEWER.SECTION_DIR.POS_X:M.d("clipXDirection",0);M.d("clipYDirection",2);M.d("clipZDirection",2);break;case TPVIEWER.SECTION_DIR.NEG_X:M.d("clipXDirection",1);M.d("clipYDirection",2);M.d("clipZDirection",2);break;case TPVIEWER.SECTION_DIR.POS_Y:M.d("clipYDirection",0);M.d("clipXDirection",2);M.d("clipZDirection",2);break;case TPVIEWER.SECTION_DIR.NEG_Y:M.d("clipYDirection",
1);M.d("clipXDirection",2);M.d("clipZDirection",2);break;case TPVIEWER.SECTION_DIR.POS_Z:M.d("clipZDirection",0);M.d("clipYDirection",2);M.d("clipXDirection",2);break;case TPVIEWER.SECTION_DIR.NEG_Z:M.d("clipZDirection",1),M.d("clipYDirection",2),M.d("clipXDirection",2)}d.x!==u&&M.d("clipXPosition",(d.x-D.x)/B);d.y!==u&&M.d("clipYPosition",(d.y-D.y)/B);d.z!==u&&M.d("clipZPosition",(d.z-D.z)/B);h()};this.getCameraInfo=function(){return I.getCameraInfo()};this.setCamera=function(d){I.setCamera(d,h)};
this.startHover=function(d){S.startHover(d)};this.stopHover=function(){S.stopHover()};this.Pa=function(d){N.noZoom=d.zoomEnabled!==u?!d.zoomEnabled:K;N.noPan=d.panEnabled!==u?!d.panEnabled:K;N.noRotate=d.rotateEnabled!==u?!d.rotateEnabled:K};this.changeTextureSource=function(d,k){var p,q=G;targetMeshes=Ba(d);if(!targetMeshes)return TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID;s.textureURL=k;for(p=0;p<targetMeshes.length;p+=1)targetMeshes[p].geometry.K&&0<targetMeshes[p].geometry.K[0].length||targetMeshes[p].geometry.faceVertexUvs&&
0<targetMeshes[p].geometry.faceVertexUvs[0].length?(targetMeshes[p].material.map=THREE.ImageUtils.loadTexture(s.textureURL),targetMeshes[p].material.needsUpdate=G,targetMeshes[p].material.map.needsUpdate=G):q=K;h();return q?TPVIEWER.ERROR_CODE.SUCCESS:TPVIEWER.ERROR_CODE.NO_DATA};this.sa=function(d){var h=d.Ea!==u?d.Ea:0,k=d.Fa!==u?d.Fa:0,p=d.Ga!==u?d.Ga:0,q=d.la!==u?d.la:1,w=d.ma!==u?d.ma:0,d=d.na!==u?d.na:0,A,B,C,D,F=Infinityy,H=-Infinity,M;A=Math.sqrt(q*q+w*w+d*d);q/=A;w/=A;d/=A;M=s.min;B=s.max;
A=[];A.push({x:M.x,y:M.y,z:M.z});A.push({x:M.x,y:B.y,z:M.z});A.push({x:B.x,y:M.y,z:M.z});A.push({x:B.x,y:B.y,z:M.z});A.push({x:M.x,y:M.y,z:B.z});A.push({x:M.x,y:B.y,z:B.z});A.push({x:B.x,y:M.y,z:B.z});A.push({x:B.x,y:B.y,z:B.z});for(M=0;8>M;++M)B=A[M].x-h,C=A[M].y-k,D=A[M].z-p,B=Math.abs(B*q+C*w+D*d),B<F&&(F=B),B>H&&(H=B);return{near:F,far:H}};this.Ja=function(d,k){$&&($.setSize(d,k),I.Na(d,k),S.setSize(d,k),h())};this.saveAsSTL=function(d){var h=s.f;return d.objectID!==u&&(h=Ba(d.objectID),!h)?TPVIEWER.ERROR_CODE.INVALID_OBJECT_ID:
Y.save(d,h)};this.Y=function(k){var q=k.name!==u?k.name:"customObj"+O,s=k.width!==u?k.width/B:200,w=k.height!==u?k.height/B:200,A=k.color!==u?k.color:10066329,C=k.opacity!==u?k.opacity:0.5,D=k.axis!==u?k.axis:"y",F=k.clippable!==u?k.clippable:G,H=k.showWire!==u?k.showWire:K,I=k.doubleSide!==u?k.doubleSide:K,N=k.segW!==u?k.segW:10,L=k.segH!==u?k.segH:10;1>N&&(N=1);1>L&&(L=1);s=new THREE.PlaneGeometry(s,w,N,L);A=new THREE.MeshBasicMaterial({color:A,wireframe:H,transparent:G,opacity:C});I&&(A.side=THREE.DoubleSide);
F&&M.A(A);F=new THREE.Mesh(s,A);k.position!==u&&(F.position.x=k.position.x!==u?k.position.x:F.position.x,F.position.y=k.position.y!==u?k.position.y:F.position.y,F.position.z=k.position.z!==u?k.position.z:F.position.z);d(F.position);"x"==D?F.rotation.y=Math.PI/2:"z"!=D&&(F.rotation.x=-Math.PI/2);p(q,F);h();return q};this.Ra=function(d,k){var p;p=P[d];p!==u&&p&&(p.position.x=k.position.x!==u?(k.position.x-D.x)/B:p.position.x,p.position.y=k.position.y!==u?(k.position.y-D.y)/B:p.position.y,p.position.z=
k.position.z!==u?(k.position.z-D.z)/B:p.position.z,h())};this.pa=function(d){var h={},d=P[d];if(d===u||!d)return h;h.position={};h.position.x=d.position.x*B+D.x;h.position.y=d.position.y*B+D.y;h.position.z=d.position.z*B+D.z;h.rotation={};h.rotation.x=d.rotation.x;h.rotation.y=d.rotation.y;h.rotation.z=d.rotation.z;return h};this.ba=function(k){var q=k.name!==u?k.name:"customObj"+O,s=k.width!==u?k.width/B:200,w=k.height!==u?k.height/B:200,A=k.lightColor!==u?k.lightColor:16777215,C=k.axis!==u?k.axis:
"y",D=k.darkness!==u?k.darkness:0.3,F;F=k.ia!==u?k.ia:10;var H=k.ga!==u?k.ga:10,I=document.createElement("canvas");I.width=128;I.height=128;var N=I.getContext("2d"),L=N.createRadialGradient(I.width/2,I.height/2,0,I.width/2,I.height/2,I.width/2);L.addColorStop(0.1,"rgba(210,210,210,1)");L.addColorStop(1,"rgba(255,255,255,1)");N.fillStyle=L;N.fillRect(0,0,I.width,I.height);I=new THREE.Texture(I);I.needsUpdate=G;1>F&&(F=1);1>H&&(H=1);s=new THREE.PlaneGeometry(s,w,F,H);w=new THREE.MeshBasicMaterial({map:I});
M.A(w);s=new THREE.Mesh(s,w);k.position!==u&&(s.position.x=k.position.x!==u?k.position.x:s.position.x,s.position.y=k.position.y!==u?k.position.y:s.position.y,s.position.z=k.position.z!==u?k.position.z:s.position.z);d(s.position);k=s.position.x;w=s.position.y;F=s.position.z;"x"==C?(s.rotation.y=Math.PI/2,k+=200):"z"==C?F+=200:(s.rotation.x=-Math.PI/2,w+=200);p(q,s);s.receiveShadow=G;A=Q.ja(k,w,F,A,D);p(q+"light",A);h();return q};this.lb=da();this.kb=da();this.jb=da();this.ca=function(k){var q=k.name!==
u?k.name:"customObj"+O,s,w,A,C,D;s=k.cx!==u?k.cx:0;w=k.cy!==u?k.cy:0;A=k.cz!==u?k.cz:0;D=k.opacity!==u?k.opacity:1;C=k.rad!==u?k.rad/B:5;s={x:s,y:w,z:A};d(s);w=k.color!==u?k.color:16777215;k=k.numSegments!==u?k.numSegments:6;C=new THREE.SphereGeometry(C,k,k);D=new THREE.Mesh(C,Da(M,w,D));D.position.set(s.x,s.y,s.z);p(q,D);h();return q};this.aa=function(k){var q=k.name!==u?k.name:"customObj"+O,s,w,A,B,C,D;s=k.sx!==u?k.sx:0;w=k.sy!==u?k.sy:0;A=k.sz!==u?k.sz:0;B=k.ex!==u?k.ex:0;C=k.ey!==u?k.ey:0;D=k.ez!==
u?k.ez:0;s={x:s,y:w,z:A};B={x:B,y:C,z:D};d(s);d(B);k=new THREE.LineBasicMaterial({color:k.color!==u?k.color:16777215,opacity:k.opacity!==u?k.opacity:1,linewidth:k.width!==u?k.width:2});C=new THREE.Geometry;C.vertices.push(new THREE.Vector3(s.x,s.y,s.z));C.vertices.push(new THREE.Vector3(B.x,B.y,B.z));k=new THREE.Line(C,k);p(q,k);h();return q};this.Sa=function(k,p){var q,s,w,A,B,C,D,F;D=P[k];D!==u&&D&&(F=D.geometry,D=D.material,q=p.sx!==u?p.sx:F.vertices[0].x,s=p.sy!==u?p.sy:F.vertices[0].y,w=p.sz!==
u?p.sz:F.vertices[0].z,A=p.ex!==u?p.ex:F.vertices[1].x,B=p.ey!==u?p.ey:F.vertices[1].y,C=p.ez!==u?p.ez:F.vertices[1].z,model_start={x:q,y:s,z:w},model_end={x:A,y:B,z:C},p.sx!==u&&d(model_start),p.ex!==u&&d(model_end),s=p.color!==u?p.color:D.color,q=p.width!==u?p.width:D.width,w=p.L!==u?p.L:D.opacity,F.vertices[0].set(model_start.x,model_start.y,model_start.z),F.vertices[1].set(model_end.x,model_end.y,model_end.z),F.verticesNeedUpdate=G,D.color=s,D.width=q,D.opacity=w,h())};this.$=function(k){var q=
k.name!==u?k.name:"customObj"+O,s,w;s={x:k.x!==u?k.x:0,y:k.x!==u?k.y:0,z:k.x!==u?k.z:0};d(s);scaleX=k.Ka!==u?k.Ka:1;scaleY=k.La!==u?k.La:1;scaleX/=B;scaleY/=B;w=k.bb;var A=k.color!==u?k.color:16777215,k=k.L!==u?k.L:1;w===u?w=J:(A=A!==u?A:16777215,k=k!==u?k:1,w=THREE.ImageUtils.loadTexture(w),w=new THREE.SpriteMaterial({map:w,mb:K,color:A}),w.uvScale.set(2,2),w.uvOffset.set(-0.5,-0.5),w.opacity=k);w=new THREE.Sprite(w);w.position.set(s.x,s.y,s.z);w.scale.set(scaleX,scaleY,1);p(q,w);h();return q};this.moveCustomObject=
function(k,p,q,s){try{var w=P[k];if(w===u||!w)return;k={x:p,y:q,z:s};d(k);w.position.set(k.x,k.y,k.z)}catch(A){}h()};this.showCustomObject=function(d){try{var k=P[d];if(k===u||!k)return;k.visible=G}catch(p){}h()};this.hideCustomObject=function(d){try{var k=P[d];if(k===u||!k)return;k.visible=K}catch(p){}h()};this.N=function(d,k,p,q){try{var s=P[d];if(s===u||!s)return;var w=s.scale;P[d].scale.set(w.x*(k/B),w.y*(p/B),w.z*(q/B))}catch(A){}h()}}
function Fa(d){var h=J,k=J,p=J,q=J,w=new THREE.Matrix4,h=new THREE.DirectionalLight(16777215);h.position.set(1,1,1);h.position.normalize();d.add(h);k=new THREE.SpotLight(16777215,0.6,500);k.color.r=k.color.g=k.color.b=0.9;k.position.set(0,500,0);d.add(k);this.da=function(d){var A;A=d.position;q||(q=new THREE.Vector3(0,0,0));d=d.up;p||(p=new THREE.Vector3);p.subVectors(A,q).normalize();0===p.length()&&(p.z=1);w.lookAt(A,q,d);A=p;h.position.set(A.x,A.y,A.z);k.position.set(500*A.x,500*A.y,500*A.z)};
this.ja=function(d,h,k,p,q){p=new THREE.DirectionalLight(p,1.35);p.position.set(d,h,k);p.castShadow=G;p.shadowCameraLeft=-100;p.shadowCameraRight=100;p.shadowCameraTop=100;p.shadowCameraBottom=-100;p.shadowCameraNear=1;p.shadowCameraFar=220;p.shadowMapWidth=1024;p.shadowMapHeight=1024;p.shadowBias=-0.0050;p.shadowDarkness=q;return p}}
function Ga(d){var h,k=0,p=[],q,w;h=d.B;k=d.rad;q=new THREE.PerspectiveCamera(30,d.Ua/d.Ta,1,1E3);w=new THREE.TrackballControls(q,h);w.rotateSpeed=1.5;w.zoomSpeed=2;w.panSpeed=0.8;w.noZoom=K;w.noPan=K;w.staticMoving=G;w.dynamicDampingFactor=0.3;w.keys=[65,83,68];w.target.set(0,0,0);h=2*(k/Math.sin(30*(Math.PI/180)))/1.5;q.position.set(h,h,h);for(d=0;d<TPVIEWER.VIEW_DIR.CUSTOM;d+=1)switch(p[d]={},p[d].fov=0==d?q.fov:1.5*q.fov,p[d].position=0==d?q.position.clone():new THREE.Vector3(0,0,0),p[d].up=0==
d?q.up.clone():new THREE.Vector3(0,0,0),p[d].lookAt=w.target.clone(),d){case TPVIEWER.VIEW_DIR.TOP:p[d].position.y=h;p[d].up.z=-1;break;case TPVIEWER.VIEW_DIR.BOTTOM:p[d].position.y=-h;p[d].up.z=1;break;case TPVIEWER.VIEW_DIR.LEFT:p[d].position.x=-h;p[d].up.y=1;break;case TPVIEWER.VIEW_DIR.RIGHT:p[d].position.x=h;p[d].up.y=1;break;case TPVIEWER.VIEW_DIR.FRONT:p[d].position.z=h;p[d].up.y=1;break;case TPVIEWER.VIEW_DIR.BACK:p[d].position.z=-h,p[d].up.y=1}q.X=w;w.update();this.C=function(){return q};
this.getCameraInfo=function(){return{fov:q.fov,position:{x:q.position.x,y:q.position.y,z:q.position.z},lookAt:{x:w.target.x,y:w.target.y,z:w.target.z},up:{x:q.up.x,y:q.up.y,z:q.up.z},near:q.near,far:q.far}};this.setCamera=function(d){var h,k,C,D,F,H=q.near,I=q.far,M=d.numFrames!==u?d.numFrames:10,N=0;if(d.viewDirection!==u&&0<=d.viewDirection&&d.viewDirection<TPVIEWER.VIEW_DIR.CUSTOM)h=p[d.viewDirection],k=h.fov,C=h.position,D=h.up,F=h.lookAt;else if(d.camera!==u)k=d.camera.fov,C=d.camera.position,
D=d.camera.up,F=d.camera.lookAt,H=d.camera.near!==u?d.camera.near:q.near,I=d.camera.far!==u?d.camera.far:q.far;else return;if(d.animate!==u&&d.animate)start_fov=q.fov,start_position=q.position,start_up=q.up,start_lookAt=w.target,window.setTimeout(function P(){if(!(N+1>M)){window.setTimeout(P,1E3/30);var d=C,h=D,p=F,s=(N+1)/M,A=start_fov,H=start_position,I=start_up,L=start_lookAt;q.fov=A+(k-A)*s;q.position.set(H.x+(d.x-H.x)*s,H.y+(d.y-H.y)*s,H.z+(d.z-H.z)*s);q.up.set(I.x+(h.x-I.x)*s,I.y+(h.y-I.y)*
s,I.z+(h.z-I.z)*s);w.target.set(L.x+(p.x-L.x)*s,L.y+(p.y-L.y)*s,L.z+(p.z-L.z)*s);q.updateProjectionMatrix();w.update();N++}},1E3/30);else{d=C;h=D;var L=F;q.fov=k;q.position.set(d.x,d.y,d.z);q.up.set(h.x,h.y,h.z);q.near=H;q.far=I;w.target.set(L.x,L.y,L.z);q.updateProjectionMatrix();w.update()}};this.Na=function(d,h){q.aspect=d/h;q.updateProjectionMatrix()};return this}
function Ca(){var d=[],h=[{ambient:new THREE.Color(W([0,0,0])),specular:new THREE.Color(W([0,0,0])),shininess:0,n:K},{ambient:new THREE.Color(W([0.05,0.05,0])),specular:new THREE.Color(W([0.7,0.7,0.7])),shininess:78,n:K},{ambient:new THREE.Color(W([0.2125,0.1275,0.054])),specular:new THREE.Color(W([0.393548,0.271906,0.166721])),diffuse:new THREE.Color(W([0.714,0.4284,0.18144])),shininess:20,n:G},{ambient:new THREE.Color(W([0.19225,0.19225,0.19225])),specular:new THREE.Color(W([0.508273,0.508273,0.508273])),
diffuse:new THREE.Color(W([0.50754,0.50754,0.50754])),shininess:40,n:G},{ambient:new THREE.Color(W([0.24725,0.1995,0.0745])),specular:new THREE.Color(W([0.628281,0.555802,0.366065])),diffuse:new THREE.Color(W([0.75164,0.60648,0.22648])),shininess:40,n:G},{ambient:new THREE.Color(W([0.05,0.05,0])),specular:new THREE.Color(W([0.7,0.7,0.7])),shininess:78,n:K},{ambient:new THREE.Color(W([0.25,0.25,0.25])),specular:new THREE.Color(W([0.774597,0.774597,0.774597])),diffuse:new THREE.Color(W([0.4,0.4,0.4])),
shininess:60,n:G},{ambient:new THREE.Color(W([0.329412,0.223529,0.027451])),specular:new THREE.Color(W([0.992157,0.941176,0.807843])),diffuse:new THREE.Color(W([0.780392,0.568627,0.113725])),shininess:22,n:G},{ambient:new THREE.Color(W([0.25,0.25,0.25])),specular:new THREE.Color(W([0.774597,0.774597,0.774597])),diffuse:new THREE.Color(W([0.4,0.4,0.4])),shininess:60,n:G}];this.Q=G;this.Za=function(){return 1};this.$a=function(){return 1};this.ea=function(d,h){h.diffuse!==u&&h.diffuse!=J&&(d.color=
new THREE.Color(h.diffuse));h.ambient!==u&&h.ambient!=J&&(d.ambient=new THREE.Color(h.ambient));h.specular!==u&&h.specular!=J&&(d.specular=new THREE.Color(h.specular));h.shininess!==u&&h.shininess!=J&&(d.shininess=h.shininess);h.reflectivity!==u&&h.reflectivity!=J&&(d.reflectivity=h.reflectivity)};this.fa=function(d,p){p!==u&&(p-=1,p>=h.length||0>p||(d.color=h[p].diffuse!=u?h[p].diffuse:d.H,d.ambient=h[p].ambient,d.specular=h[p].specular,d.shininess=h[p].shininess))};this.Ia=function(d){d.opacity=
d.U;d.transparent=1<=d.opacity?K:G;d.color=d.H;d.ambient=d.za;d.specular=d.Ca;d.shininess=d.Ba;d.reflectivity=d.Aa};this.A=function(h){d.push(h)};this.d=function(h,p){for(var q,w=0;w<d.length;w++)q=d[w],q.uniforms===u||q.uniforms==J||q.uniforms[h]===u||q.uniforms[h]==J||(q.uniforms[h].value=p)}}function W(d){return(255*d[0]<<16)+(255*d[1]<<8)+255*d[2]}
function Ea(d){d.U=d.opacity===u?1:d.opacity;d.H=d.color.clone();d.za=d.ambient===u?new THREE.Color(0):d.ambient.clone();d.Ba=d.shininess===u?0:d.shininess;d.Ca=d.specular===u?new THREE.Color(0):d.specular.clone();d.Aa=d.reflectivity===u?0:d.reflectivity}
function Da(d,h,k){offset_units=offset_factor=1;h=new THREE.MeshLambertMaterial({vertexColors:THREE.VertexColors,color:h!==u?h:14737632,polygonOffset:G,polygonOffsetFactor:offset_factor,polygonOffsetUnits:offset_units,blending:THREE.NormalBlending,opacity:k!==u?k:1,specular:0,shininess:0,shading:THREE.SmoothShading});d.Q&&(h.side=THREE.DoubleSide);Ea(h);return h}
Ca.prototype.createMaterial=function(d){var h,k,p,q,w=d.reflectivity===u?0.5:d.reflectivity,s=K;h=d.ambient;k=d.diffuse;p=d.shininess==u?10:100*d.shininess;d=d.specular==u?5592405:d.specular;q=k[3];1>q&&(s=G,0.6>q&&(q=0.6));h=new THREE.MeshLambertMaterial({ambient:W(h),polygonOffset:G,polygonOffsetFactor:1,polygonOffsetUnits:1,color:W(k),opacity:q,specular:d,blending:THREE.NormalBlending,shininess:p,transparent:s,shading:THREE.SmoothShading,reflectivity:w});Ea(h);this.Q&&(h.side=THREE.DoubleSide);
return h};function Ha(d,h,k,p,q,w){p===u&&Ia("Missing required offset argument");q===u&&Ia("Missing required value argument");(0>p||p+k>d.byteLength)&&Ia("Invalid index: "+p);if(1===k||!!w===Ja)if(0===(d.byteOffset+p)%k)(new h(d.buffer,d.byteOffset+p,1))[0]=q;else{(new h(Ka.buffer))[0]=q;for(h=0;h<k;h++)d.P[h+p]=Ka[h]}else{(new h(Ka.buffer))[0]=q;for(h=0;h<k;h++)d.P[p+h]=Ka[k-1-h]}}function Ia(d){throw Error(d);}
if(!this.O){this.ArrayBuffer||Ia("ArrayBuffer not supported");Object.defineProperties||Ia("This module requires ECMAScript 5");var Ja=1===(new Int8Array((new Int32Array([1])).buffer))[0],Ka=new Uint8Array(8);this.O=function(d,h,k){d instanceof ArrayBuffer||Ia("Bad ArrayBuffer");h=h||0;k=k||d.byteLength-h;(0>h||0>k||h+k>d.byteLength)&&Ia("Illegal offset and/or length");Object.defineProperties(this,{buffer:{value:d,enumerable:K,writable:K,configurable:K},byteOffset:{value:h,enumerable:K,writable:K,
configurable:K},byteLength:{value:k,enumerable:K,writable:K,configurable:K},P:{value:new Uint8Array(d,h,k),enumerable:K,writable:K,configurable:K}})};this.O.prototype={setInt8:function(d,h){Ha(this,Int8Array,1,d,h)},setInt32:function(d,h,k){Ha(this,Int32Array,4,d,h,k)},setFloat32:function(d,h,k){Ha(this,Float32Array,4,d,h,k)}}};var THREE={REVISION:"63"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(d,h){if(Object.keys)for(var k=Object.keys(h),p=0,q=k.length;p<q;p++){var w=k[p];Object.defineProperty(d,w,Object.getOwnPropertyDescriptor(h,w))}else for(w in k={}.hasOwnProperty,h)k.call(h,w)&&(d[w]=h[w]);return d};
(function(){for(var d=0,h=["ms","moz","webkit","o"],k=0;k<h.length&&!self.requestAnimationFrame;++k)self.requestAnimationFrame=self[h[k]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[h[k]+"CancelAnimationFrame"]||self[h[k]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(h){var k=Date.now(),w=Math.max(0,16-(k-d)),s=self.setTimeout(function(){h(k+w)},w);d=k+w;return s});void 0===self.cancelAnimationFrame&&void 0!==
self.clearTimeout&&(self.cancelAnimationFrame=function(d){self.clearTimeout(d)})})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;
THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;
THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;
THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;
THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(d){void 0!==d&&this.set(d);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(d){d instanceof THREE.Color?this.copy(d):"number"===typeof d?this.setHex(d):"string"===typeof d&&this.setStyle(d);return this},setHex:function(d){d=Math.floor(d);this.r=(d>>16&255)/255;this.g=(d>>8&255)/255;this.b=(d&255)/255;return this},setRGB:function(d,h,k){this.r=d;this.g=h;this.b=k;return this},setHSL:function(d,h,k){if(0===h)this.r=this.g=this.b=k;else{var p=function(d,h,k){0>k&&(k+=1);1<k&&(k-=1);return k<1/6?d+6*(h-d)*
k:0.5>k?h:k<2/3?d+6*(h-d)*(2/3-k):d},h=0.5>=k?k*(1+h):k+h-k*h,k=2*k-h;this.r=p(k,h,d+1/3);this.g=p(k,h,d);this.b=p(k,h,d-1/3)}return this},setStyle:function(d){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(d))return d=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(d),this.r=Math.min(255,parseInt(d[1],10))/255,this.g=Math.min(255,parseInt(d[2],10))/255,this.b=Math.min(255,parseInt(d[3],10))/255,this;if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(d))return d=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(d),this.r=
Math.min(100,parseInt(d[1],10))/100,this.g=Math.min(100,parseInt(d[2],10))/100,this.b=Math.min(100,parseInt(d[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(d))return d=/^\#([0-9a-f]{6})$/i.exec(d),this.setHex(parseInt(d[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(d))return d=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(d),this.setHex(parseInt(d[1]+d[1]+d[2]+d[2]+d[3]+d[3],16)),this;if(/^(\w+)$/i.test(d))return this.setHex(THREE.ColorKeywords[d]),this},copy:function(d){this.r=d.r;this.g=
d.g;this.b=d.b;return this},copyGammaToLinear:function(d){this.r=d.r*d.r;this.g=d.g*d.g;this.b=d.b*d.b;return this},copyLinearToGamma:function(d){this.r=Math.sqrt(d.r);this.g=Math.sqrt(d.g);this.b=Math.sqrt(d.b);return this},convertGammaToLinear:function(){var d=this.r,h=this.g,k=this.b;this.r=d*d;this.g=h*h;this.b=k*k;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<
8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var d={h:0,s:0,l:0};return function(){var h=this.r,k=this.g,p=this.b,q=Math.max(h,k,p),w=Math.min(h,k,p),s,A=(w+q)/2;if(w===q)w=s=0;else{var B=q-w,w=0.5>=A?B/(q+w):B/(2-q-w);switch(q){case h:s=(k-p)/B+(k<p?6:0);break;case k:s=(p-h)/B+2;break;case p:s=(h-k)/B+4}s/=6}d.h=s;d.s=w;d.l=A;return d}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},
offsetHSL:function(d,h,k){var p=this.getHSL();p.h+=d;p.s+=h;p.l+=k;this.setHSL(p.h,p.s,p.l);return this},add:function(d){this.r+=d.r;this.g+=d.g;this.b+=d.b;return this},addColors:function(d,h){this.r=d.r+h.r;this.g=d.g+h.g;this.b=d.b+h.b;return this},addScalar:function(d){this.r+=d;this.g+=d;this.b+=d;return this},multiply:function(d){this.r*=d.r;this.g*=d.g;this.b*=d.b;return this},multiplyScalar:function(d){this.r*=d;this.g*=d;this.b*=d;return this},lerp:function(d,h){this.r+=(d.r-this.r)*h;this.g+=
(d.g-this.g)*h;this.b+=(d.b-this.b)*h;return this},equals:function(d){return d.r===this.r&&d.g===this.g&&d.b===this.b},fromArray:function(d){this.r=d[0];this.g=d[1];this.b=d[2];return this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(d,h,k,p){this._x=d||0;this._y=h||0;this._z=k||0;this._w=void 0!==p?p:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,_euler:void 0,_updateEuler:function(){void 0!==this._euler&&this._euler.setFromQuaternion(this,void 0,!1)},get x(){return this._x},set x(d){this._x=d;this._updateEuler()},get y(){return this._y},set y(d){this._y=d;this._updateEuler()},get z(){return this._z},set z(d){this._z=d;this._updateEuler()},get w(){return this._w},set w(d){this._w=d;this._updateEuler()},set:function(d,h,k,p){this._x=d;this._y=h;this._z=k;this._w=p;
this._updateEuler();return this},copy:function(d){this._x=d._x;this._y=d._y;this._z=d._z;this._w=d._w;this._updateEuler();return this},setFromEuler:function(d,h){if(!1===d instanceof THREE.Euler)throw Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var k=Math.cos(d._x/2),p=Math.cos(d._y/2),q=Math.cos(d._z/2),w=Math.sin(d._x/2),s=Math.sin(d._y/2),A=Math.sin(d._z/2);"XYZ"===d.order?(this._x=w*p*q+k*s*A,this._y=k*s*
q-w*p*A,this._z=k*p*A+w*s*q,this._w=k*p*q-w*s*A):"YXZ"===d.order?(this._x=w*p*q+k*s*A,this._y=k*s*q-w*p*A,this._z=k*p*A-w*s*q,this._w=k*p*q+w*s*A):"ZXY"===d.order?(this._x=w*p*q-k*s*A,this._y=k*s*q+w*p*A,this._z=k*p*A+w*s*q,this._w=k*p*q-w*s*A):"ZYX"===d.order?(this._x=w*p*q-k*s*A,this._y=k*s*q+w*p*A,this._z=k*p*A-w*s*q,this._w=k*p*q+w*s*A):"YZX"===d.order?(this._x=w*p*q+k*s*A,this._y=k*s*q+w*p*A,this._z=k*p*A-w*s*q,this._w=k*p*q-w*s*A):"XZY"===d.order&&(this._x=w*p*q-k*s*A,this._y=k*s*q-w*p*A,this._z=
k*p*A+w*s*q,this._w=k*p*q+w*s*A);!1!==h&&this._updateEuler();return this},setFromAxisAngle:function(d,h){var k=h/2,p=Math.sin(k);this._x=d.x*p;this._y=d.y*p;this._z=d.z*p;this._w=Math.cos(k);this._updateEuler();return this},setFromRotationMatrix:function(d){var h=d.elements,k=h[0],d=h[4],p=h[8],q=h[1],w=h[5],s=h[9],A=h[2],B=h[6],h=h[10],C=k+w+h;0<C?(k=0.5/Math.sqrt(C+1),this._w=0.25/k,this._x=(B-s)*k,this._y=(p-A)*k,this._z=(q-d)*k):k>w&&k>h?(k=2*Math.sqrt(1+k-w-h),this._w=(B-s)/k,this._x=0.25*k,
this._y=(d+q)/k,this._z=(p+A)/k):w>h?(k=2*Math.sqrt(1+w-k-h),this._w=(p-A)/k,this._x=(d+q)/k,this._y=0.25*k,this._z=(s+B)/k):(k=2*Math.sqrt(1+h-k-w),this._w=(q-d)/k,this._x=(p+A)/k,this._y=(s+B)/k,this._z=0.25*k);this._updateEuler();return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this._updateEuler();return this},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*
this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var d=this.length();0===d?(this._z=this._y=this._x=0,this._w=1):(d=1/d,this._x*=d,this._y*=d,this._z*=d,this._w*=d);return this},multiply:function(d,h){return void 0!==h?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(d,h)):this.multiplyQuaternions(this,d)},multiplyQuaternions:function(d,h){var k=d._x,p=d._y,q=d._z,w=
d._w,s=h._x,A=h._y,B=h._z,C=h._w;this._x=k*C+w*s+p*B-q*A;this._y=p*C+w*A+q*s-k*B;this._z=q*C+w*B+k*A-p*s;this._w=w*C-k*s-p*A-q*B;this._updateEuler();return this},multiplyVector3:function(d){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return d.applyQuaternion(this)},slerp:function(d,h){var k=this._x,p=this._y,q=this._z,w=this._w,s=w*d._w+k*d._x+p*d._y+q*d._z;0>s?(this._w=-d._w,this._x=-d._x,this._y=-d._y,this._z=
-d._z,s=-s):this.copy(d);if(1<=s)return this._w=w,this._x=k,this._y=p,this._z=q,this;var A=Math.acos(s),B=Math.sqrt(1-s*s);if(0.0010>Math.abs(B))return this._w=0.5*(w+this._w),this._x=0.5*(k+this._x),this._y=0.5*(p+this._y),this._z=0.5*(q+this._z),this;s=Math.sin((1-h)*A)/B;A=Math.sin(h*A)/B;this._w=w*s+this._w*A;this._x=k*s+this._x*A;this._y=p*s+this._y*A;this._z=q*s+this._z*A;this._updateEuler();return this},equals:function(d){return d._x===this._x&&d._y===this._y&&d._z===this._z&&d._w===this._w},
fromArray:function(d){this._x=d[0];this._y=d[1];this._z=d[2];this._w=d[3];this._updateEuler();return this},toArray:function(){return[this._x,this._y,this._z,this._w]},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}};THREE.Quaternion.slerp=function(d,h,k,p){return k.copy(d).slerp(h,p)};THREE.Vector2=function(d,h){this.x=d||0;this.y=h||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(d,h){this.x=d;this.y=h;return this},setX:function(d){this.x=d;return this},setY:function(d){this.y=d;return this},setComponent:function(d,h){switch(d){case 0:this.x=h;break;case 1:this.y=h;break;default:throw Error("index is out of range: "+d);}},getComponent:function(d){switch(d){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+d);}},copy:function(d){this.x=d.x;this.y=d.y;return this},add:function(d,
h){if(void 0!==h)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,h);this.x+=d.x;this.y+=d.y;return this},addVectors:function(d,h){this.x=d.x+h.x;this.y=d.y+h.y;return this},addScalar:function(d){this.x+=d;this.y+=d;return this},sub:function(d,h){if(void 0!==h)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,h);this.x-=d.x;this.y-=
d.y;return this},subVectors:function(d,h){this.x=d.x-h.x;this.y=d.y-h.y;return this},multiplyScalar:function(d){this.x*=d;this.y*=d;return this},divideScalar:function(d){0!==d?(d=1/d,this.x*=d,this.y*=d):this.y=this.x=0;return this},min:function(d){this.x>d.x&&(this.x=d.x);this.y>d.y&&(this.y=d.y);return this},max:function(d){this.x<d.x&&(this.x=d.x);this.y<d.y&&(this.y=d.y);return this},clamp:function(d,h){this.x<d.x?this.x=d.x:this.x>h.x&&(this.x=h.x);this.y<d.y?this.y=d.y:this.y>h.y&&(this.y=h.y);
return this},negate:function(){return this.multiplyScalar(-1)},dot:function(d){return this.x*d.x+this.y*d.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(d){return Math.sqrt(this.distanceToSquared(d))},distanceToSquared:function(d){var h=this.x-d.x,d=this.y-d.y;return h*h+d*d},setLength:function(d){var h=this.length();0!==h&&d!==h&&this.multiplyScalar(d/
h);return this},lerp:function(d,h){this.x+=(d.x-this.x)*h;this.y+=(d.y-this.y)*h;return this},equals:function(d){return d.x===this.x&&d.y===this.y},fromArray:function(d){this.x=d[0];this.y=d[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(d,h,k){this.x=d||0;this.y=h||0;this.z=k||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(d,h,k){this.x=d;this.y=h;this.z=k;return this},setX:function(d){this.x=d;return this},setY:function(d){this.y=d;return this},setZ:function(d){this.z=d;return this},setComponent:function(d,h){switch(d){case 0:this.x=h;break;case 1:this.y=h;break;case 2:this.z=h;break;default:throw Error("index is out of range: "+d);}},getComponent:function(d){switch(d){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
d);}},copy:function(d){this.x=d.x;this.y=d.y;this.z=d.z;return this},add:function(d,h){if(void 0!==h)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,h);this.x+=d.x;this.y+=d.y;this.z+=d.z;return this},addScalar:function(d){this.x+=d;this.y+=d;this.z+=d;return this},addVectors:function(d,h){this.x=d.x+h.x;this.y=d.y+h.y;this.z=d.z+h.z;return this},sub:function(d,h){if(void 0!==h)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(d,h);this.x-=d.x;this.y-=d.y;this.z-=d.z;return this},subVectors:function(d,h){this.x=d.x-h.x;this.y=d.y-h.y;this.z=d.z-h.z;return this},multiply:function(d,h){if(void 0!==h)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(d,h);this.x*=d.x;this.y*=d.y;this.z*=d.z;return this},multiplyScalar:function(d){this.x*=d;this.y*=d;this.z*=d;return this},multiplyVectors:function(d,h){this.x=d.x*
h.x;this.y=d.y*h.y;this.z=d.z*h.z;return this},applyMatrix3:function(d){var h=this.x,k=this.y,p=this.z,d=d.elements;this.x=d[0]*h+d[3]*k+d[6]*p;this.y=d[1]*h+d[4]*k+d[7]*p;this.z=d[2]*h+d[5]*k+d[8]*p;return this},applyMatrix4:function(d){var h=this.x,k=this.y,p=this.z,d=d.elements;this.x=d[0]*h+d[4]*k+d[8]*p+d[12];this.y=d[1]*h+d[5]*k+d[9]*p+d[13];this.z=d[2]*h+d[6]*k+d[10]*p+d[14];return this},applyProjection:function(d){var h=this.x,k=this.y,p=this.z,d=d.elements,q=1/(d[3]*h+d[7]*k+d[11]*p+d[15]);
this.x=(d[0]*h+d[4]*k+d[8]*p+d[12])*q;this.y=(d[1]*h+d[5]*k+d[9]*p+d[13])*q;this.z=(d[2]*h+d[6]*k+d[10]*p+d[14])*q;return this},applyQuaternion:function(d){var h=this.x,k=this.y,p=this.z,q=d.x,w=d.y,s=d.z,d=d.w,A=d*h+w*p-s*k,B=d*k+s*h-q*p,C=d*p+q*k-w*h,h=-q*h-w*k-s*p;this.x=A*d+h*-q+B*-s-C*-w;this.y=B*d+h*-w+C*-q-A*-s;this.z=C*d+h*-s+A*-w-B*-q;return this},transformDirection:function(d){var h=this.x,k=this.y,p=this.z,d=d.elements;this.x=d[0]*h+d[4]*k+d[8]*p;this.y=d[1]*h+d[5]*k+d[9]*p;this.z=d[2]*
h+d[6]*k+d[10]*p;this.normalize();return this},divide:function(d){this.x/=d.x;this.y/=d.y;this.z/=d.z;return this},divideScalar:function(d){0!==d?(d=1/d,this.x*=d,this.y*=d,this.z*=d):this.z=this.y=this.x=0;return this},min:function(d){this.x>d.x&&(this.x=d.x);this.y>d.y&&(this.y=d.y);this.z>d.z&&(this.z=d.z);return this},max:function(d){this.x<d.x&&(this.x=d.x);this.y<d.y&&(this.y=d.y);this.z<d.z&&(this.z=d.z);return this},clamp:function(d,h){this.x<d.x?this.x=d.x:this.x>h.x&&(this.x=h.x);this.y<
d.y?this.y=d.y:this.y>h.y&&(this.y=h.y);this.z<d.z?this.z=d.z:this.z>h.z&&(this.z=h.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(d){return this.x*d.x+this.y*d.y+this.z*d.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(d){var h=this.length();0!==h&&d!==h&&this.multiplyScalar(d/h);return this},lerp:function(d,h){this.x+=(d.x-this.x)*h;this.y+=(d.y-this.y)*h;this.z+=(d.z-this.z)*h;return this},cross:function(d,h){if(void 0!==h)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(d,h);var k=this.x,p=this.y,q=this.z;this.x=p*d.z-q*d.y;this.y=q*d.x-k*d.z;this.z=k*d.y-p*d.x;return this},crossVectors:function(d,h){var k=
d.x,p=d.y,q=d.z,w=h.x,s=h.y,A=h.z;this.x=p*A-q*s;this.y=q*w-k*A;this.z=k*s-p*w;return this},angleTo:function(d){d=this.dot(d)/(this.length()*d.length());return Math.acos(THREE.Math.clamp(d,-1,1))},distanceTo:function(d){return Math.sqrt(this.distanceToSquared(d))},distanceToSquared:function(d){var h=this.x-d.x,k=this.y-d.y,d=this.z-d.z;return h*h+k*k+d*d},setEulerFromRotationMatrix:function(){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},
setEulerFromQuaternion:function(){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(d){this.x=d.elements[12];this.y=d.elements[13];this.z=d.elements[14];return this},getScaleFromMatrix:function(d){var h=this.set(d.elements[0],d.elements[1],d.elements[2]).length(),k=this.set(d.elements[4],d.elements[5],d.elements[6]).length(),d=this.set(d.elements[8],d.elements[9],d.elements[10]).length();
this.x=h;this.y=k;this.z=d;return this},getColumnFromMatrix:function(d,h){var k=4*d,p=h.elements;this.x=p[k];this.y=p[k+1];this.z=p[k+2];return this},equals:function(d){return d.x===this.x&&d.y===this.y&&d.z===this.z},fromArray:function(d){this.x=d[0];this.y=d[1];this.z=d[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};
THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var d=new THREE.Quaternion;return function(h){!1===h instanceof THREE.Euler&&console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");this.applyQuaternion(d.setFromEuler(h));return this}}(),applyAxisAngle:function(){var d=new THREE.Quaternion;return function(h,k){this.applyQuaternion(d.setFromAxisAngle(h,k));return this}}(),projectOnVector:function(){var d=new THREE.Vector3;
return function(h){d.copy(h).normalize();h=this.dot(d);return this.copy(d).multiplyScalar(h)}}(),projectOnPlane:function(){var d=new THREE.Vector3;return function(h){d.copy(this).projectOnVector(h);return this.sub(d)}}(),reflect:function(){var d=new THREE.Vector3;return function(h){d.copy(this).projectOnVector(h).multiplyScalar(2);return this.subVectors(d,this)}}()});THREE.Vector4=function(d,h,k,p){this.x=d||0;this.y=h||0;this.z=k||0;this.w=void 0!==p?p:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(d,h,k,p){this.x=d;this.y=h;this.z=k;this.w=p;return this},setX:function(d){this.x=d;return this},setY:function(d){this.y=d;return this},setZ:function(d){this.z=d;return this},setW:function(d){this.w=d;return this},setComponent:function(d,h){switch(d){case 0:this.x=h;break;case 1:this.y=h;break;case 2:this.z=h;break;case 3:this.w=h;break;default:throw Error("index is out of range: "+d);}},getComponent:function(d){switch(d){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+d);}},copy:function(d){this.x=d.x;this.y=d.y;this.z=d.z;this.w=void 0!==d.w?d.w:1;return this},add:function(d,h){if(void 0!==h)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,h);this.x+=d.x;this.y+=d.y;this.z+=d.z;this.w+=d.w;return this},addScalar:function(d){this.x+=d;this.y+=d;this.z+=d;this.w+=d;return this},
addVectors:function(d,h){this.x=d.x+h.x;this.y=d.y+h.y;this.z=d.z+h.z;this.w=d.w+h.w;return this},sub:function(d,h){if(void 0!==h)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,h);this.x-=d.x;this.y-=d.y;this.z-=d.z;this.w-=d.w;return this},subVectors:function(d,h){this.x=d.x-h.x;this.y=d.y-h.y;this.z=d.z-h.z;this.w=d.w-h.w;return this},multiplyScalar:function(d){this.x*=d;this.y*=d;this.z*=d;this.w*=d;return this},
applyMatrix4:function(d){var h=this.x,k=this.y,p=this.z,q=this.w,d=d.elements;this.x=d[0]*h+d[4]*k+d[8]*p+d[12]*q;this.y=d[1]*h+d[5]*k+d[9]*p+d[13]*q;this.z=d[2]*h+d[6]*k+d[10]*p+d[14]*q;this.w=d[3]*h+d[7]*k+d[11]*p+d[15]*q;return this},divideScalar:function(d){0!==d?(d=1/d,this.x*=d,this.y*=d,this.z*=d,this.w*=d):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(d){this.w=2*Math.acos(d.w);var h=Math.sqrt(1-d.w*d.w);1E-4>h?(this.x=1,this.z=this.y=0):(this.x=d.x/h,
this.y=d.y/h,this.z=d.z/h);return this},setAxisAngleFromRotationMatrix:function(d){var h,k,p,d=d.elements,q=d[0];p=d[4];var w=d[8],s=d[1],A=d[5],B=d[9];k=d[2];h=d[6];var C=d[10];if(0.01>Math.abs(p-s)&&0.01>Math.abs(w-k)&&0.01>Math.abs(B-h)){if(0.1>Math.abs(p+s)&&0.1>Math.abs(w+k)&&0.1>Math.abs(B+h)&&0.1>Math.abs(q+A+C-3))return this.set(1,0,0,0),this;d=Math.PI;q=(q+1)/2;A=(A+1)/2;C=(C+1)/2;p=(p+s)/4;w=(w+k)/4;B=(B+h)/4;q>A&&q>C?0.01>q?(h=0,p=k=0.707106781):(h=Math.sqrt(q),k=p/h,p=w/h):A>C?0.01>A?
(h=0.707106781,k=0,p=0.707106781):(k=Math.sqrt(A),h=p/k,p=B/k):0.01>C?(k=h=0.707106781,p=0):(p=Math.sqrt(C),h=w/p,k=B/p);this.set(h,k,p,d);return this}d=Math.sqrt((h-B)*(h-B)+(w-k)*(w-k)+(s-p)*(s-p));0.0010>Math.abs(d)&&(d=1);this.x=(h-B)/d;this.y=(w-k)/d;this.z=(s-p)/d;this.w=Math.acos((q+A+C-1)/2);return this},min:function(d){this.x>d.x&&(this.x=d.x);this.y>d.y&&(this.y=d.y);this.z>d.z&&(this.z=d.z);this.w>d.w&&(this.w=d.w);return this},max:function(d){this.x<d.x&&(this.x=d.x);this.y<d.y&&(this.y=
d.y);this.z<d.z&&(this.z=d.z);this.w<d.w&&(this.w=d.w);return this},clamp:function(d,h){this.x<d.x?this.x=d.x:this.x>h.x&&(this.x=h.x);this.y<d.y?this.y=d.y:this.y>h.y&&(this.y=h.y);this.z<d.z?this.z=d.z:this.z>h.z&&(this.z=h.z);this.w<d.w?this.w=d.w:this.w>h.w&&(this.w=h.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(d){return this.x*d.x+this.y*d.y+this.z*d.z+this.w*d.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var h=this.length();0!==h&&d!==h&&this.multiplyScalar(d/h);return this},lerp:function(d,h){this.x+=(d.x-this.x)*h;this.y+=(d.y-this.y)*h;this.z+=(d.z-this.z)*h;this.w+=(d.w-this.w)*h;return this},equals:function(d){return d.x===this.x&&d.y===this.y&&d.z===this.z&&
d.w===this.w},fromArray:function(d){this.x=d[0];this.y=d[1];this.z=d[2];this.w=d[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Euler=function(d,h,k,p){this._x=d||0;this._y=h||0;this._z=k||0;this._order=p||THREE.Euler.DefaultOrder};THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" ");THREE.Euler.DefaultOrder="XYZ";
THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,_quaternion:void 0,_updateQuaternion:function(){void 0!==this._quaternion&&this._quaternion.setFromEuler(this,!1)},get x(){return this._x},set x(d){this._x=d;this._updateQuaternion()},get y(){return this._y},set y(d){this._y=d;this._updateQuaternion()},get z(){return this._z},set z(d){this._z=d;this._updateQuaternion()},get order(){return this._order},set order(d){this._order=d;this._updateQuaternion()},
set:function(d,h,k,p){this._x=d;this._y=h;this._z=k;this._order=p||this._order;this._updateQuaternion();return this},copy:function(d){this._x=d._x;this._y=d._y;this._z=d._z;this._order=d._order;this._updateQuaternion();return this},setFromRotationMatrix:function(d,h){function k(d){return Math.min(Math.max(d,-1),1)}var p=d.elements,q=p[0],w=p[4],s=p[8],A=p[1],B=p[5],C=p[9],D=p[2],F=p[6],p=p[10],h=h||this._order;"XYZ"===h?(this._y=Math.asin(k(s)),0.99999>Math.abs(s)?(this._x=Math.atan2(-C,p),this._z=
Math.atan2(-w,q)):(this._x=Math.atan2(F,B),this._z=0)):"YXZ"===h?(this._x=Math.asin(-k(C)),0.99999>Math.abs(C)?(this._y=Math.atan2(s,p),this._z=Math.atan2(A,B)):(this._y=Math.atan2(-D,q),this._z=0)):"ZXY"===h?(this._x=Math.asin(k(F)),0.99999>Math.abs(F)?(this._y=Math.atan2(-D,p),this._z=Math.atan2(-w,B)):(this._y=0,this._z=Math.atan2(A,q))):"ZYX"===h?(this._y=Math.asin(-k(D)),0.99999>Math.abs(D)?(this._x=Math.atan2(F,p),this._z=Math.atan2(A,q)):(this._x=0,this._z=Math.atan2(-w,B))):"YZX"===h?(this._z=
Math.asin(k(A)),0.99999>Math.abs(A)?(this._x=Math.atan2(-C,B),this._y=Math.atan2(-D,q)):(this._x=0,this._y=Math.atan2(s,p))):"XZY"===h?(this._z=Math.asin(-k(w)),0.99999>Math.abs(w)?(this._x=Math.atan2(F,B),this._y=Math.atan2(s,q)):(this._x=Math.atan2(-C,p),this._y=0)):console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: "+h);this._order=h;this._updateQuaternion();return this},setFromQuaternion:function(d,h,k){function p(d){return Math.min(Math.max(d,-1),1)}var q=d.x*d.x,w=
d.y*d.y,s=d.z*d.z,A=d.w*d.w,h=h||this._order;"XYZ"===h?(this._x=Math.atan2(2*(d.x*d.w-d.y*d.z),A-q-w+s),this._y=Math.asin(p(2*(d.x*d.z+d.y*d.w))),this._z=Math.atan2(2*(d.z*d.w-d.x*d.y),A+q-w-s)):"YXZ"===h?(this._x=Math.asin(p(2*(d.x*d.w-d.y*d.z))),this._y=Math.atan2(2*(d.x*d.z+d.y*d.w),A-q-w+s),this._z=Math.atan2(2*(d.x*d.y+d.z*d.w),A-q+w-s)):"ZXY"===h?(this._x=Math.asin(p(2*(d.x*d.w+d.y*d.z))),this._y=Math.atan2(2*(d.y*d.w-d.z*d.x),A-q-w+s),this._z=Math.atan2(2*(d.z*d.w-d.x*d.y),A-q+w-s)):"ZYX"===
h?(this._x=Math.atan2(2*(d.x*d.w+d.z*d.y),A-q-w+s),this._y=Math.asin(p(2*(d.y*d.w-d.x*d.z))),this._z=Math.atan2(2*(d.x*d.y+d.z*d.w),A+q-w-s)):"YZX"===h?(this._x=Math.atan2(2*(d.x*d.w-d.z*d.y),A-q+w-s),this._y=Math.atan2(2*(d.y*d.w-d.x*d.z),A+q-w-s),this._z=Math.asin(p(2*(d.x*d.y+d.z*d.w)))):"XZY"===h?(this._x=Math.atan2(2*(d.x*d.w+d.y*d.z),A-q+w-s),this._y=Math.atan2(2*(d.x*d.z+d.y*d.w),A+q-w-s),this._z=Math.asin(p(2*(d.z*d.w-d.x*d.y)))):console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: "+
h);this._order=h;!1!==k&&this._updateQuaternion();return this},reorder:function(){var d=new THREE.Quaternion;return function(h){d.setFromEuler(this);this.setFromQuaternion(d,h)}}(),fromArray:function(d){this._x=d[0];this._y=d[1];this._z=d[2];void 0!==d[3]&&(this._order=d[3]);this._updateQuaternion();return this},toArray:function(){return[this._x,this._y,this._z,this._order]},equals:function(d){return d._x===this._x&&d._y===this._y&&d._z===this._z&&d._order===this._order},clone:function(){return new THREE.Euler(this._x,
this._y,this._z,this._order)}};THREE.Line3=function(d,h){this.start=void 0!==d?d:new THREE.Vector3;this.end=void 0!==h?h:new THREE.Vector3};
THREE.Line3.prototype={constructor:THREE.Line3,set:function(d,h){this.start.copy(d);this.end.copy(h);return this},copy:function(d){this.start.copy(d.start);this.end.copy(d.end);return this},center:function(d){return(d||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(d){return(d||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(d,
h){var k=h||new THREE.Vector3;return this.delta(k).multiplyScalar(d).add(this.start)},closestPointToPointParameter:function(){var d=new THREE.Vector3,h=new THREE.Vector3;return function(k,p){d.subVectors(k,this.start);h.subVectors(this.end,this.start);var q=h.dot(h),q=h.dot(d)/q;p&&(q=THREE.Math.clamp(q,0,1));return q}}(),closestPointToPoint:function(d,h,k){d=this.closestPointToPointParameter(d,h);k=k||new THREE.Vector3;return this.delta(k).multiplyScalar(d).add(this.start)},applyMatrix4:function(d){this.start.applyMatrix4(d);
this.end.applyMatrix4(d);return this},equals:function(d){return d.start.equals(this.start)&&d.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(d,h){this.min=void 0!==d?d:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==h?h:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(d,h){this.min.copy(d);this.max.copy(h);return this},setFromPoints:function(d){if(0<d.length){var h=d[0];this.min.copy(h);this.max.copy(h);for(var k=1,p=d.length;k<p;k++)h=d[k],h.x<this.min.x?this.min.x=h.x:h.x>this.max.x&&(this.max.x=h.x),h.y<this.min.y?this.min.y=h.y:h.y>this.max.y&&(this.max.y=h.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var d=new THREE.Vector2;return function(h,k){var p=d.copy(k).multiplyScalar(0.5);
this.min.copy(h).sub(p);this.max.copy(h).add(p);return this}}(),copy:function(d){this.min.copy(d.min);this.max.copy(d.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(d){return(d||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(d){return(d||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(d){this.min.min(d);
this.max.max(d);return this},expandByVector:function(d){this.min.sub(d);this.max.add(d);return this},expandByScalar:function(d){this.min.addScalar(-d);this.max.addScalar(d);return this},containsPoint:function(d){return d.x<this.min.x||d.x>this.max.x||d.y<this.min.y||d.y>this.max.y?!1:!0},containsBox:function(d){return this.min.x<=d.min.x&&d.max.x<=this.max.x&&this.min.y<=d.min.y&&d.max.y<=this.max.y?!0:!1},getParameter:function(d){return new THREE.Vector2((d.x-this.min.x)/(this.max.x-this.min.x),
(d.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(d){return d.max.x<this.min.x||d.min.x>this.max.x||d.max.y<this.min.y||d.min.y>this.max.y?!1:!0},clampPoint:function(d,h){return(h||new THREE.Vector2).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var d=new THREE.Vector2;return function(h){return d.copy(h).clamp(this.min,this.max).sub(h).length()}}(),intersect:function(d){this.min.max(d.min);this.max.min(d.max);return this},union:function(d){this.min.min(d.min);this.max.max(d.max);
return this},translate:function(d){this.min.add(d);this.max.add(d);return this},equals:function(d){return d.min.equals(this.min)&&d.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(d,h){this.min=void 0!==d?d:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==h?h:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(d,h){this.min.copy(d);this.max.copy(h);return this},addPoint:function(d){d.x<this.min.x?this.min.x=d.x:d.x>this.max.x&&(this.max.x=d.x);d.y<this.min.y?this.min.y=d.y:d.y>this.max.y&&(this.max.y=d.y);d.z<this.min.z?this.min.z=d.z:d.z>this.max.z&&(this.max.z=d.z)},setFromPoints:function(d){if(0<d.length){var h=d[0];this.min.copy(h);this.max.copy(h);for(var h=1,k=d.length;h<k;h++)this.addPoint(d[h])}else this.makeEmpty();return this},setFromCenterAndSize:function(){var d=
new THREE.Vector3;return function(h,k){var p=d.copy(k).multiplyScalar(0.5);this.min.copy(h).sub(p);this.max.copy(h).add(p);return this}}(),setFromObject:function(){var d=new THREE.Vector3;return function(h){var k=this;h.updateMatrixWorld(!0);this.makeEmpty();h.traverse(function(h){if(void 0!==h.geometry&&void 0!==h.geometry.vertices)for(var q=h.geometry.vertices,w=0,s=q.length;w<s;w++)d.copy(q[w]),d.applyMatrix4(h.matrixWorld),k.expandByPoint(d)});return this}}(),copy:function(d){this.min.copy(d.min);
this.max.copy(d.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(d){return(d||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(d){return(d||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(d){this.min.min(d);this.max.max(d);return this},expandByVector:function(d){this.min.sub(d);
this.max.add(d);return this},expandByScalar:function(d){this.min.addScalar(-d);this.max.addScalar(d);return this},containsPoint:function(d){return d.x<this.min.x||d.x>this.max.x||d.y<this.min.y||d.y>this.max.y||d.z<this.min.z||d.z>this.max.z?!1:!0},containsBox:function(d){return this.min.x<=d.min.x&&d.max.x<=this.max.x&&this.min.y<=d.min.y&&d.max.y<=this.max.y&&this.min.z<=d.min.z&&d.max.z<=this.max.z?!0:!1},getParameter:function(d){return new THREE.Vector3((d.x-this.min.x)/(this.max.x-this.min.x),
(d.y-this.min.y)/(this.max.y-this.min.y),(d.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(d){return d.max.x<this.min.x||d.min.x>this.max.x||d.max.y<this.min.y||d.min.y>this.max.y||d.max.z<this.min.z||d.min.z>this.max.z?!1:!0},clampPoint:function(d,h){return(h||new THREE.Vector3).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var d=new THREE.Vector3;return function(h){return d.copy(h).clamp(this.min,this.max).sub(h).length()}}(),getBoundingSphere:function(){var d=
new THREE.Vector3;return function(h){h=h||new THREE.Sphere;h.center=this.center();h.radius=0.5*this.size(d).length();return h}}(),intersect:function(d){this.min.max(d.min);this.max.min(d.max);return this},union:function(d){this.min.min(d.min);this.max.max(d.max);return this},applyMatrix4:function(){var d=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(h){d[0].set(this.min.x,this.min.y,
this.min.z).applyMatrix4(h);d[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(h);d[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(h);d[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(h);d[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(h);d[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(h);d[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(h);d[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(h);this.makeEmpty();this.setFromPoints(d);return this}}(),translate:function(d){this.min.add(d);
this.max.add(d);return this},equals:function(d){return d.min.equals(this.min)&&d.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(d,h,k,p,q,w,s,A,B){this.elements=new Float32Array(9);this.set(void 0!==d?d:1,h||0,k||0,p||0,void 0!==q?q:1,w||0,s||0,A||0,void 0!==B?B:1)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(d,h,k,p,q,w,s,A,B){var C=this.elements;C[0]=d;C[3]=h;C[6]=k;C[1]=p;C[4]=q;C[7]=w;C[2]=s;C[5]=A;C[8]=B;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(d){d=d.elements;this.set(d[0],d[3],d[6],d[1],d[4],d[7],d[2],d[5],d[8]);return this},multiplyVector3:function(d){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return d.applyMatrix3(this)},
multiplyVector3Array:function(){var d=new THREE.Vector3;return function(h){for(var k=0,p=h.length;k<p;k+=3)d.x=h[k],d.y=h[k+1],d.z=h[k+2],d.applyMatrix3(this),h[k]=d.x,h[k+1]=d.y,h[k+2]=d.z;return h}}(),multiplyScalar:function(d){var h=this.elements;h[0]*=d;h[3]*=d;h[6]*=d;h[1]*=d;h[4]*=d;h[7]*=d;h[2]*=d;h[5]*=d;h[8]*=d;return this},determinant:function(){var d=this.elements,h=d[0],k=d[1],p=d[2],q=d[3],w=d[4],s=d[5],A=d[6],B=d[7],d=d[8];return h*w*d-h*s*B-k*q*d+k*s*A+p*q*B-p*w*A},getInverse:function(d,
h){var k=d.elements,p=this.elements;p[0]=k[10]*k[5]-k[6]*k[9];p[1]=-k[10]*k[1]+k[2]*k[9];p[2]=k[6]*k[1]-k[2]*k[5];p[3]=-k[10]*k[4]+k[6]*k[8];p[4]=k[10]*k[0]-k[2]*k[8];p[5]=-k[6]*k[0]+k[2]*k[4];p[6]=k[9]*k[4]-k[5]*k[8];p[7]=-k[9]*k[0]+k[1]*k[8];p[8]=k[5]*k[0]-k[1]*k[4];k=k[0]*p[0]+k[1]*p[3]+k[2]*p[6];if(0===k){if(h)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/
k);return this},transpose:function(){var d,h=this.elements;d=h[1];h[1]=h[3];h[3]=d;d=h[2];h[2]=h[6];h[6]=d;d=h[5];h[5]=h[7];h[7]=d;return this},getNormalMatrix:function(d){this.getInverse(d).transpose();return this},transposeIntoArray:function(d){var h=this.elements;d[0]=h[0];d[1]=h[3];d[2]=h[6];d[3]=h[1];d[4]=h[4];d[5]=h[7];d[6]=h[2];d[7]=h[5];d[8]=h[8];return this},clone:function(){var d=this.elements;return new THREE.Matrix3(d[0],d[3],d[6],d[1],d[4],d[7],d[2],d[5],d[8])}};
THREE.Matrix4=function(d,h,k,p,q,w,s,A,B,C,D,F,H,I,M,N){var L=this.elements=new Float32Array(16);L[0]=void 0!==d?d:1;L[4]=h||0;L[8]=k||0;L[12]=p||0;L[1]=q||0;L[5]=void 0!==w?w:1;L[9]=s||0;L[13]=A||0;L[2]=B||0;L[6]=C||0;L[10]=void 0!==D?D:1;L[14]=F||0;L[3]=H||0;L[7]=I||0;L[11]=M||0;L[15]=void 0!==N?N:1};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(d,h,k,p,q,w,s,A,B,C,D,F,H,I,M,N){var L=this.elements;L[0]=d;L[4]=h;L[8]=k;L[12]=p;L[1]=q;L[5]=w;L[9]=s;L[13]=A;L[2]=B;L[6]=C;L[10]=D;L[14]=F;L[3]=H;L[7]=I;L[11]=M;L[15]=N;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(d){this.elements.set(d.elements);return this},extractPosition:function(d){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");
return this.copyPosition(d)},copyPosition:function(d){var h=this.elements,d=d.elements;h[12]=d[12];h[13]=d[13];h[14]=d[14];return this},extractRotation:function(){var d=new THREE.Vector3;return function(h){var k=this.elements,h=h.elements,p=1/d.set(h[0],h[1],h[2]).length(),q=1/d.set(h[4],h[5],h[6]).length(),w=1/d.set(h[8],h[9],h[10]).length();k[0]=h[0]*p;k[1]=h[1]*p;k[2]=h[2]*p;k[4]=h[4]*q;k[5]=h[5]*q;k[6]=h[6]*q;k[8]=h[8]*w;k[9]=h[9]*w;k[10]=h[10]*w;return this}}(),makeRotationFromEuler:function(d){!1===
d instanceof THREE.Euler&&console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");var h=this.elements,k=d.x,p=d.y,q=d.z,w=Math.cos(k),k=Math.sin(k),s=Math.cos(p),p=Math.sin(p),A=Math.cos(q),q=Math.sin(q);if("XYZ"===d.order){var d=w*A,B=w*q,C=k*A,D=k*q;h[0]=s*A;h[4]=-s*q;h[8]=p;h[1]=B+C*p;h[5]=d-D*p;h[9]=-k*s;h[2]=D-d*p;h[6]=C+B*p;h[10]=w*s}else"YXZ"===d.order?(d=s*A,B=s*q,C=p*A,D=p*q,h[0]=d+D*k,h[4]=C*k-B,h[8]=
w*p,h[1]=w*q,h[5]=w*A,h[9]=-k,h[2]=B*k-C,h[6]=D+d*k,h[10]=w*s):"ZXY"===d.order?(d=s*A,B=s*q,C=p*A,D=p*q,h[0]=d-D*k,h[4]=-w*q,h[8]=C+B*k,h[1]=B+C*k,h[5]=w*A,h[9]=D-d*k,h[2]=-w*p,h[6]=k,h[10]=w*s):"ZYX"===d.order?(d=w*A,B=w*q,C=k*A,D=k*q,h[0]=s*A,h[4]=C*p-B,h[8]=d*p+D,h[1]=s*q,h[5]=D*p+d,h[9]=B*p-C,h[2]=-p,h[6]=k*s,h[10]=w*s):"YZX"===d.order?(d=w*s,B=w*p,C=k*s,D=k*p,h[0]=s*A,h[4]=D-d*q,h[8]=C*q+B,h[1]=q,h[5]=w*A,h[9]=-k*A,h[2]=-p*A,h[6]=B*q+C,h[10]=d-D*q):"XZY"===d.order&&(d=w*s,B=w*p,C=k*s,D=k*p,h[0]=
s*A,h[4]=-q,h[8]=p*A,h[1]=d*q+D,h[5]=w*A,h[9]=B*q-C,h[2]=C*q-B,h[6]=k*A,h[10]=D*q+d);h[3]=0;h[7]=0;h[11]=0;h[12]=0;h[13]=0;h[14]=0;h[15]=1;return this},setRotationFromQuaternion:function(d){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(d)},makeRotationFromQuaternion:function(d){var h=this.elements,k=d.x,p=d.y,q=d.z,w=d.w,s=k+k,A=p+p,B=q+q,d=k*s,C=k*A,k=
k*B,D=p*A,p=p*B,q=q*B,s=w*s,A=w*A,w=w*B;h[0]=1-(D+q);h[4]=C-w;h[8]=k+A;h[1]=C+w;h[5]=1-(d+q);h[9]=p-s;h[2]=k-A;h[6]=p+s;h[10]=1-(d+D);h[3]=0;h[7]=0;h[11]=0;h[12]=0;h[13]=0;h[14]=0;h[15]=1;return this},lookAt:function(){var d=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3;return function(p,q,w){var s=this.elements;k.subVectors(p,q).normalize();0===k.length()&&(k.z=1);d.crossVectors(w,k).normalize();0===d.length()&&(k.x+=1E-4,d.crossVectors(w,k).normalize());h.crossVectors(k,d);s[0]=d.x;
s[4]=h.x;s[8]=k.x;s[1]=d.y;s[5]=h.y;s[9]=k.y;s[2]=d.z;s[6]=h.z;s[10]=k.z;return this}}(),multiply:function(d,h){return void 0!==h?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(d,h)):this.multiplyMatrices(this,d)},multiplyMatrices:function(d,h){var k=d.elements,p=h.elements,q=this.elements,w=k[0],s=k[4],A=k[8],B=k[12],C=k[1],D=k[5],F=k[9],H=k[13],I=k[2],M=k[6],N=k[10],L=k[14],Q=k[3],P=k[7],O=k[11],k=k[15],
R=p[0],$=p[4],T=p[8],S=p[12],Y=p[1],X=p[5],ea=p[9],aa=p[13],Z=p[2],U=p[6],V=p[10],ga=p[14],ca=p[3],ia=p[7],Ma=p[11],p=p[15];q[0]=w*R+s*Y+A*Z+B*ca;q[4]=w*$+s*X+A*U+B*ia;q[8]=w*T+s*ea+A*V+B*Ma;q[12]=w*S+s*aa+A*ga+B*p;q[1]=C*R+D*Y+F*Z+H*ca;q[5]=C*$+D*X+F*U+H*ia;q[9]=C*T+D*ea+F*V+H*Ma;q[13]=C*S+D*aa+F*ga+H*p;q[2]=I*R+M*Y+N*Z+L*ca;q[6]=I*$+M*X+N*U+L*ia;q[10]=I*T+M*ea+N*V+L*Ma;q[14]=I*S+M*aa+N*ga+L*p;q[3]=Q*R+P*Y+O*Z+k*ca;q[7]=Q*$+P*X+O*U+k*ia;q[11]=Q*T+P*ea+O*V+k*Ma;q[15]=Q*S+P*aa+O*ga+k*p;return this},
multiplyToArray:function(d,h,k){var p=this.elements;this.multiplyMatrices(d,h);k[0]=p[0];k[1]=p[1];k[2]=p[2];k[3]=p[3];k[4]=p[4];k[5]=p[5];k[6]=p[6];k[7]=p[7];k[8]=p[8];k[9]=p[9];k[10]=p[10];k[11]=p[11];k[12]=p[12];k[13]=p[13];k[14]=p[14];k[15]=p[15];return this},multiplyScalar:function(d){var h=this.elements;h[0]*=d;h[4]*=d;h[8]*=d;h[12]*=d;h[1]*=d;h[5]*=d;h[9]*=d;h[13]*=d;h[2]*=d;h[6]*=d;h[10]*=d;h[14]*=d;h[3]*=d;h[7]*=d;h[11]*=d;h[15]*=d;return this},multiplyVector3:function(d){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return d.applyProjection(this)},multiplyVector4:function(d){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return d.applyMatrix4(this)},multiplyVector3Array:function(){var d=new THREE.Vector3;return function(h){for(var k=0,p=h.length;k<p;k+=3)d.x=h[k],d.y=h[k+1],d.z=h[k+2],d.applyProjection(this),h[k]=d.x,h[k+1]=d.y,h[k+2]=d.z;return h}}(),rotateAxis:function(d){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");
d.transformDirection(this)},crossVector:function(d){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return d.applyMatrix4(this)},determinant:function(){var d=this.elements,h=d[0],k=d[4],p=d[8],q=d[12],w=d[1],s=d[5],A=d[9],B=d[13],C=d[2],D=d[6],F=d[10],H=d[14];return d[3]*(+q*A*D-p*B*D-q*s*F+k*B*F+p*s*H-k*A*H)+d[7]*(+h*A*H-h*B*F+q*w*F-p*w*H+p*B*C-q*A*C)+d[11]*(+h*B*D-h*s*H-q*w*D+k*w*H+q*s*C-k*B*C)+d[15]*(-p*s*C-h*A*D+h*s*F+p*w*D-k*w*
F+k*A*C)},transpose:function(){var d=this.elements,h;h=d[1];d[1]=d[4];d[4]=h;h=d[2];d[2]=d[8];d[8]=h;h=d[6];d[6]=d[9];d[9]=h;h=d[3];d[3]=d[12];d[12]=h;h=d[7];d[7]=d[13];d[13]=h;h=d[11];d[11]=d[14];d[14]=h;return this},flattenToArray:function(d){var h=this.elements;d[0]=h[0];d[1]=h[1];d[2]=h[2];d[3]=h[3];d[4]=h[4];d[5]=h[5];d[6]=h[6];d[7]=h[7];d[8]=h[8];d[9]=h[9];d[10]=h[10];d[11]=h[11];d[12]=h[12];d[13]=h[13];d[14]=h[14];d[15]=h[15];return d},flattenToArrayOffset:function(d,h){var k=this.elements;
d[h]=k[0];d[h+1]=k[1];d[h+2]=k[2];d[h+3]=k[3];d[h+4]=k[4];d[h+5]=k[5];d[h+6]=k[6];d[h+7]=k[7];d[h+8]=k[8];d[h+9]=k[9];d[h+10]=k[10];d[h+11]=k[11];d[h+12]=k[12];d[h+13]=k[13];d[h+14]=k[14];d[h+15]=k[15];return d},getPosition:function(){var d=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var h=this.elements;return d.set(h[12],h[13],h[14])}}(),setPosition:function(d){var h=this.elements;
h[12]=d.x;h[13]=d.y;h[14]=d.z;return this},getInverse:function(d,h){var k=this.elements,p=d.elements,q=p[0],w=p[4],s=p[8],A=p[12],B=p[1],C=p[5],D=p[9],F=p[13],H=p[2],I=p[6],M=p[10],N=p[14],L=p[3],Q=p[7],P=p[11],p=p[15];k[0]=D*N*Q-F*M*Q+F*I*P-C*N*P-D*I*p+C*M*p;k[4]=A*M*Q-s*N*Q-A*I*P+w*N*P+s*I*p-w*M*p;k[8]=s*F*Q-A*D*Q+A*C*P-w*F*P-s*C*p+w*D*p;k[12]=A*D*I-s*F*I-A*C*M+w*F*M+s*C*N-w*D*N;k[1]=F*M*L-D*N*L-F*H*P+B*N*P+D*H*p-B*M*p;k[5]=s*N*L-A*M*L+A*H*P-q*N*P-s*H*p+q*M*p;k[9]=A*D*L-s*F*L-A*B*P+q*F*P+s*B*p-
q*D*p;k[13]=s*F*H-A*D*H+A*B*M-q*F*M-s*B*N+q*D*N;k[2]=C*N*L-F*I*L+F*H*Q-B*N*Q-C*H*p+B*I*p;k[6]=A*I*L-w*N*L-A*H*Q+q*N*Q+w*H*p-q*I*p;k[10]=w*F*L-A*C*L+A*B*Q-q*F*Q-w*B*p+q*C*p;k[14]=A*C*H-w*F*H-A*B*I+q*F*I+w*B*N-q*C*N;k[3]=D*I*L-C*M*L-D*H*Q+B*M*Q+C*H*P-B*I*P;k[7]=w*M*L-s*I*L+s*H*Q-q*M*Q-w*H*P+q*I*P;k[11]=s*C*L-w*D*L-s*B*Q+q*D*Q+w*B*P-q*C*P;k[15]=w*D*H-s*C*H+s*B*I-q*D*I-w*B*M+q*C*M;k=q*k[0]+B*k[4]+H*k[8]+L*k[12];if(0==k){if(h)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");
this.identity();return this}this.multiplyScalar(1/k);return this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},
scale:function(d){var h=this.elements,k=d.x,p=d.y,d=d.z;h[0]*=k;h[4]*=p;h[8]*=d;h[1]*=k;h[5]*=p;h[9]*=d;h[2]*=k;h[6]*=p;h[10]*=d;h[3]*=k;h[7]*=p;h[11]*=d;return this},getMaxScaleOnAxis:function(){var d=this.elements;return Math.sqrt(Math.max(d[0]*d[0]+d[1]*d[1]+d[2]*d[2],Math.max(d[4]*d[4]+d[5]*d[5]+d[6]*d[6],d[8]*d[8]+d[9]*d[9]+d[10]*d[10])))},makeTranslation:function(d,h,k){this.set(1,0,0,d,0,1,0,h,0,0,1,k,0,0,0,1);return this},makeRotationX:function(d){var h=Math.cos(d),d=Math.sin(d);this.set(1,
0,0,0,0,h,-d,0,0,d,h,0,0,0,0,1);return this},makeRotationY:function(d){var h=Math.cos(d),d=Math.sin(d);this.set(h,0,d,0,0,1,0,0,-d,0,h,0,0,0,0,1);return this},makeRotationZ:function(d){var h=Math.cos(d),d=Math.sin(d);this.set(h,-d,0,0,d,h,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(d,h){var k=Math.cos(h),p=Math.sin(h),q=1-k,w=d.x,s=d.y,A=d.z,B=q*w,C=q*s;this.set(B*w+k,B*s-p*A,B*A+p*s,0,B*s+p*A,C*s+k,C*A-p*w,0,B*A-p*s,C*A+p*w,q*A*A+k,0,0,0,0,1);return this},makeScale:function(d,h,k){this.set(d,
0,0,0,0,h,0,0,0,0,k,0,0,0,0,1);return this},compose:function(d,h,k){this.makeRotationFromQuaternion(h);this.scale(k);this.setPosition(d);return this},decompose:function(){var d=new THREE.Vector3,h=new THREE.Matrix4;return function(k,p,q){var w=this.elements,s=d.set(w[0],w[1],w[2]).length(),A=d.set(w[4],w[5],w[6]).length(),B=d.set(w[8],w[9],w[10]).length();k.x=w[12];k.y=w[13];k.z=w[14];h.elements.set(this.elements);var k=1/s,w=1/A,C=1/B;h.elements[0]*=k;h.elements[1]*=k;h.elements[2]*=k;h.elements[4]*=
w;h.elements[5]*=w;h.elements[6]*=w;h.elements[8]*=C;h.elements[9]*=C;h.elements[10]*=C;p.setFromRotationMatrix(h);q.x=s;q.y=A;q.z=B;return this}}(),makeFrustum:function(d,h,k,p,q,w){var s=this.elements;s[0]=2*q/(h-d);s[4]=0;s[8]=(h+d)/(h-d);s[12]=0;s[1]=0;s[5]=2*q/(p-k);s[9]=(p+k)/(p-k);s[13]=0;s[2]=0;s[6]=0;s[10]=-(w+q)/(w-q);s[14]=-2*w*q/(w-q);s[3]=0;s[7]=0;s[11]=-1;s[15]=0;return this},makePerspective:function(d,h,k,p){var d=k*Math.tan(THREE.Math.degToRad(0.5*d)),q=-d;return this.makeFrustum(q*
h,d*h,q,d,k,p)},makeOrthographic:function(d,h,k,p,q,w){var s=this.elements,A=h-d,B=k-p,C=w-q;s[0]=2/A;s[4]=0;s[8]=0;s[12]=-((h+d)/A);s[1]=0;s[5]=2/B;s[9]=0;s[13]=-((k+p)/B);s[2]=0;s[6]=0;s[10]=-2/C;s[14]=-((w+q)/C);s[3]=0;s[7]=0;s[11]=0;s[15]=1;return this},fromArray:function(d){this.elements.set(d);return this},toArray:function(){var d=this.elements;return[d[0],d[1],d[2],d[3],d[4],d[5],d[6],d[7],d[8],d[9],d[10],d[11],d[12],d[13],d[14],d[15]]},clone:function(){var d=this.elements;return new THREE.Matrix4(d[0],
d[4],d[8],d[12],d[1],d[5],d[9],d[13],d[2],d[6],d[10],d[14],d[3],d[7],d[11],d[15])}};THREE.Ray=function(d,h){this.origin=void 0!==d?d:new THREE.Vector3;this.direction=void 0!==h?h:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(d,h){this.origin.copy(d);this.direction.copy(h);return this},copy:function(d){this.origin.copy(d.origin);this.direction.copy(d.direction);return this},at:function(d,h){return(h||new THREE.Vector3).copy(this.direction).multiplyScalar(d).add(this.origin)},recast:function(){var d=new THREE.Vector3;return function(h){this.origin.copy(this.at(h,d));return this}}(),closestPointToPoint:function(d,h){var k=h||new THREE.Vector3;k.subVectors(d,this.origin);
var p=k.dot(this.direction);return 0>p?k.copy(this.origin):k.copy(this.direction).multiplyScalar(p).add(this.origin)},distanceToPoint:function(){var d=new THREE.Vector3;return function(h){var k=d.subVectors(h,this.origin).dot(this.direction);if(0>k)return this.origin.distanceTo(h);d.copy(this.direction).multiplyScalar(k).add(this.origin);return d.distanceTo(h)}}(),distanceSqToSegment:function(d,h,k,p){var q=d.clone().add(h).multiplyScalar(0.5),w=h.clone().sub(d).normalize(),s=0.5*d.distanceTo(h),
A=this.origin.clone().sub(q),d=-this.direction.dot(w),h=A.dot(this.direction),B=-A.dot(w),C=A.lengthSq(),D=Math.abs(1-d*d),F,H;0<=D?(A=d*B-h,F=d*h-B,H=s*D,0<=A?F>=-H?F<=H?(s=1/D,A*=s,F*=s,d=A*(A+d*F+2*h)+F*(d*A+F+2*B)+C):(F=s,A=Math.max(0,-(d*F+h)),d=-A*A+F*(F+2*B)+C):(F=-s,A=Math.max(0,-(d*F+h)),d=-A*A+F*(F+2*B)+C):F<=-H?(A=Math.max(0,-(-d*s+h)),F=0<A?-s:Math.min(Math.max(-s,-B),s),d=-A*A+F*(F+2*B)+C):F<=H?(A=0,F=Math.min(Math.max(-s,-B),s),d=F*(F+2*B)+C):(A=Math.max(0,-(d*s+h)),F=0<A?s:Math.min(Math.max(-s,
-B),s),d=-A*A+F*(F+2*B)+C)):(F=0<d?-s:s,A=Math.max(0,-(d*F+h)),d=-A*A+F*(F+2*B)+C);k&&k.copy(this.direction.clone().multiplyScalar(A).add(this.origin));p&&p.copy(w.clone().multiplyScalar(F).add(q));return d},isIntersectionSphere:function(d){return this.distanceToPoint(d.center)<=d.radius},isIntersectionPlane:function(d){var h=d.distanceToPoint(this.origin);return 0===h||0>d.normal.dot(this.direction)*h?!0:!1},distanceToPlane:function(d){var h=d.normal.dot(this.direction);if(0==h)return 0==d.distanceToPoint(this.origin)?
0:null;d=-(this.origin.dot(d.normal)+d.constant)/h;return 0<=d?d:null},intersectPlane:function(d,h){var k=this.distanceToPlane(d);return null===k?null:this.at(k,h)},isIntersectionBox:function(){var d=new THREE.Vector3;return function(h){return null!==this.intersectBox(h,d)}}(),intersectBox:function(d,h){var k,p,q,w,s;p=1/this.direction.x;w=1/this.direction.y;s=1/this.direction.z;var A=this.origin;0<=p?(k=(d.min.x-A.x)*p,p*=d.max.x-A.x):(k=(d.max.x-A.x)*p,p*=d.min.x-A.x);0<=w?(q=(d.min.y-A.y)*w,w*=
d.max.y-A.y):(q=(d.max.y-A.y)*w,w*=d.min.y-A.y);if(k>w||q>p)return null;if(q>k||k!==k)k=q;if(w<p||p!==p)p=w;0<=s?(q=(d.min.z-A.z)*s,s*=d.max.z-A.z):(q=(d.max.z-A.z)*s,s*=d.min.z-A.z);if(k>s||q>p)return null;if(q>k||k!==k)k=q;if(s<p||p!==p)p=s;return 0>p?null:this.at(0<=k?k:p,h)},intersectTriangle:function(){var d=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,p=new THREE.Vector3;return function(q,w,s,A,B){h.subVectors(w,q);k.subVectors(s,q);p.crossVectors(h,k);w=this.direction.dot(p);if(0<
w){if(A)return null;A=1}else if(0>w)A=-1,w=-w;else return null;d.subVectors(this.origin,q);q=A*this.direction.dot(k.crossVectors(d,k));if(0>q)return null;s=A*this.direction.dot(h.cross(d));if(0>s||q+s>w)return null;q=-A*d.dot(p);return 0>q?null:this.at(q/w,B)}}(),applyMatrix4:function(d){this.direction.add(this.origin).applyMatrix4(d);this.origin.applyMatrix4(d);this.direction.sub(this.origin);this.direction.normalize();return this},equals:function(d){return d.origin.equals(this.origin)&&d.direction.equals(this.direction)},
clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(d,h){this.center=void 0!==d?d:new THREE.Vector3;this.radius=void 0!==h?h:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(d,h){this.center.copy(d);this.radius=h;return this},setFromPoints:function(){var d=new THREE.Box3;return function(h,k){var p=this.center;void 0!==k?p.copy(k):d.setFromPoints(h).center(p);for(var q=0,w=0,s=h.length;w<s;w++)q=Math.max(q,p.distanceToSquared(h[w]));this.radius=Math.sqrt(q);return this}}(),copy:function(d){this.center.copy(d.center);this.radius=d.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(d){return d.distanceToSquared(this.center)<=
this.radius*this.radius},distanceToPoint:function(d){return d.distanceTo(this.center)-this.radius},intersectsSphere:function(d){var h=this.radius+d.radius;return d.center.distanceToSquared(this.center)<=h*h},clampPoint:function(d,h){var k=this.center.distanceToSquared(d),p=h||new THREE.Vector3;p.copy(d);k>this.radius*this.radius&&(p.sub(this.center).normalize(),p.multiplyScalar(this.radius).add(this.center));return p},getBoundingBox:function(d){d=d||new THREE.Box3;d.set(this.center,this.center);d.expandByScalar(this.radius);
return d},applyMatrix4:function(d){this.center.applyMatrix4(d);this.radius*=d.getMaxScaleOnAxis();return this},translate:function(d){this.center.add(d);return this},equals:function(d){return d.center.equals(this.center)&&d.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};
THREE.Frustum=function(d,h,k,p,q,w){this.planes=[void 0!==d?d:new THREE.Plane,void 0!==h?h:new THREE.Plane,void 0!==k?k:new THREE.Plane,void 0!==p?p:new THREE.Plane,void 0!==q?q:new THREE.Plane,void 0!==w?w:new THREE.Plane]};
THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(d,h,k,p,q,w){var s=this.planes;s[0].copy(d);s[1].copy(h);s[2].copy(k);s[3].copy(p);s[4].copy(q);s[5].copy(w);return this},copy:function(d){for(var h=this.planes,k=0;6>k;k++)h[k].copy(d.planes[k]);return this},setFromMatrix:function(d){var h=this.planes,k=d.elements,d=k[0],p=k[1],q=k[2],w=k[3],s=k[4],A=k[5],B=k[6],C=k[7],D=k[8],F=k[9],H=k[10],I=k[11],M=k[12],N=k[13],L=k[14],k=k[15];h[0].setComponents(w-d,C-s,I-D,k-M).normalize();h[1].setComponents(w+
d,C+s,I+D,k+M).normalize();h[2].setComponents(w+p,C+A,I+F,k+N).normalize();h[3].setComponents(w-p,C-A,I-F,k-N).normalize();h[4].setComponents(w-q,C-B,I-H,k-L).normalize();h[5].setComponents(w+q,C+B,I+H,k+L).normalize();return this},intersectsObject:function(){var d=new THREE.Sphere;return function(h){var k=h.geometry;null===k.boundingSphere&&k.computeBoundingSphere();d.copy(k.boundingSphere);d.applyMatrix4(h.matrixWorld);return this.intersectsSphere(d)}}(),intersectsSphere:function(d){for(var h=this.planes,
k=d.center,d=-d.radius,p=0;6>p;p++)if(h[p].distanceToPoint(k)<d)return!1;return!0},intersectsBox:function(){var d=new THREE.Vector3,h=new THREE.Vector3;return function(k){for(var p=this.planes,q=0;6>q;q++){var w=p[q];d.x=0<w.normal.x?k.min.x:k.max.x;h.x=0<w.normal.x?k.max.x:k.min.x;d.y=0<w.normal.y?k.min.y:k.max.y;h.y=0<w.normal.y?k.max.y:k.min.y;d.z=0<w.normal.z?k.min.z:k.max.z;h.z=0<w.normal.z?k.max.z:k.min.z;var s=w.distanceToPoint(d),w=w.distanceToPoint(h);if(0>s&&0>w)return!1}return!0}}(),containsPoint:function(d){for(var h=
this.planes,k=0;6>k;k++)if(0>h[k].distanceToPoint(d))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(d,h){this.normal=void 0!==d?d:new THREE.Vector3(1,0,0);this.constant=void 0!==h?h:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(d,h){this.normal.copy(d);this.constant=h;return this},setComponents:function(d,h,k,p){this.normal.set(d,h,k);this.constant=p;return this},setFromNormalAndCoplanarPoint:function(d,h){this.normal.copy(d);this.constant=-h.dot(this.normal);return this},setFromCoplanarPoints:function(){var d=new THREE.Vector3,h=new THREE.Vector3;return function(k,p,q){p=d.subVectors(q,p).cross(h.subVectors(k,p)).normalize();this.setFromNormalAndCoplanarPoint(p,
k);return this}}(),copy:function(d){this.normal.copy(d.normal);this.constant=d.constant;return this},normalize:function(){var d=1/this.normal.length();this.normal.multiplyScalar(d);this.constant*=d;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(d){return this.normal.dot(d)+this.constant},distanceToSphere:function(d){return this.distanceToPoint(d.center)-d.radius},projectPoint:function(d,h){return this.orthoPoint(d,h).sub(d).negate()},orthoPoint:function(d,
h){var k=this.distanceToPoint(d);return(h||new THREE.Vector3).copy(this.normal).multiplyScalar(k)},isIntersectionLine:function(d){var h=this.distanceToPoint(d.start),d=this.distanceToPoint(d.end);return 0>h&&0<d||0>d&&0<h},intersectLine:function(){var d=new THREE.Vector3;return function(h,k){var p=k||new THREE.Vector3,q=h.delta(d),w=this.normal.dot(q);if(0==w){if(0==this.distanceToPoint(h.start))return p.copy(h.start)}else return w=-(h.start.dot(this.normal)+this.constant)/w,0>w||1<w?void 0:p.copy(q).multiplyScalar(w).add(h.start)}}(),
coplanarPoint:function(d){return(d||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var d=new THREE.Vector3,h=new THREE.Vector3;return function(k,p){var p=p||(new THREE.Matrix3).getNormalMatrix(k),q=d.copy(this.normal).applyMatrix3(p),w=this.coplanarPoint(h);w.applyMatrix4(k);this.setFromNormalAndCoplanarPoint(q,w);return this}}(),translate:function(d){this.constant-=d.dot(this.normal);return this},equals:function(d){return d.normal.equals(this.normal)&&
d.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};
THREE.Math={PI2:2*Math.PI,generateUUID:function(){var d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),h=Array(36),k=0,p;return function(){for(var q=0;36>q;q++)8==q||13==q||18==q||23==q?h[q]="-":14==q?h[q]="4":(2>=k&&(k=33554432+16777216*Math.random()|0),p=k&15,k>>=4,h[q]=d[19==q?p&3|8:p]);return h.join("")}}(),clamp:function(d,h,k){return d<h?h:d>k?k:d},clampBottom:function(d,h){return d<h?h:d},mapLinear:function(d,h,k,p,q){return p+(d-h)*(q-p)/(k-h)},smoothstep:function(d,
h,k){if(d<=h)return 0;if(d>=k)return 1;d=(d-h)/(k-h);return d*d*(3-2*d)},smootherstep:function(d,h,k){if(d<=h)return 0;if(d>=k)return 1;d=(d-h)/(k-h);return d*d*d*(d*(6*d-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(d,h){return d+Math.floor(Math.random()*(h-d+1))},randFloat:function(d,h){return d+Math.random()*(h-d)},randFloatSpread:function(d){return d*(0.5-Math.random())},sign:function(d){return 0>d?-1:0<d?1:0},degToRad:function(){var d=Math.PI/
180;return function(h){return h*d}}(),radToDeg:function(){var d=180/Math.PI;return function(h){return h*d}}()};
THREE.Spline=function(d){function h(d,h,k,p,q,s,w){d=0.5*(k-d);p=0.5*(p-h);return(2*(h-k)+d+p)*w+(-3*(h-k)-2*d-p)*s+d*q+h}this.points=d;var k=[],p={x:0,y:0,z:0},q,w,s,A,B,C,D,F,H;this.initFromArray=function(d){this.points=[];for(var h=0;h<d.length;h++)this.points[h]={x:d[h][0],y:d[h][1],z:d[h][2]}};this.getPoint=function(d){q=(this.points.length-1)*d;w=Math.floor(q);s=q-w;k[0]=0===w?w:w-1;k[1]=w;k[2]=w>this.points.length-2?this.points.length-1:w+1;k[3]=w>this.points.length-3?this.points.length-1:
w+2;C=this.points[k[0]];D=this.points[k[1]];F=this.points[k[2]];H=this.points[k[3]];A=s*s;B=s*A;p.x=h(C.x,D.x,F.x,H.x,s,A,B);p.y=h(C.y,D.y,F.y,H.y,s,A,B);p.z=h(C.z,D.z,F.z,H.z,s,A,B);return p};this.getControlPointsArray=function(){var d,h,k=this.points.length,p=[];for(d=0;d<k;d++)h=this.points[d],p[d]=[h.x,h.y,h.z];return p};this.getLength=function(d){var h,k,p,q=h=h=0,s=new THREE.Vector3,w=new THREE.Vector3,A=[],B=0;A[0]=0;d||(d=100);k=this.points.length*d;s.copy(this.points[0]);for(d=1;d<k;d++)h=
d/k,p=this.getPoint(h),w.copy(p),B+=w.distanceTo(s),s.copy(p),h*=this.points.length-1,h=Math.floor(h),h!=q&&(A[h]=B,q=h);A[A.length]=B;return{chunks:A,total:B}};this.reparametrizeByArcLength=function(d){var h,k,p,q,s,w,A=[],B=new THREE.Vector3,C=this.getLength();A.push(B.copy(this.points[0]).clone());for(h=1;h<this.points.length;h++){k=C.chunks[h]-C.chunks[h-1];w=Math.ceil(d*k/C.total);q=(h-1)/(this.points.length-1);s=h/(this.points.length-1);for(k=1;k<w-1;k++)p=q+k*(1/w)*(s-q),p=this.getPoint(p),
A.push(B.copy(p).clone());A.push(B.copy(this.points[h]).clone())}this.points=A}};THREE.Triangle=function(d,h,k){this.a=void 0!==d?d:new THREE.Vector3;this.b=void 0!==h?h:new THREE.Vector3;this.c=void 0!==k?k:new THREE.Vector3};THREE.Triangle.normal=function(){var d=new THREE.Vector3;return function(h,k,p,q){q=q||new THREE.Vector3;q.subVectors(p,k);d.subVectors(h,k);q.cross(d);h=q.lengthSq();return 0<h?q.multiplyScalar(1/Math.sqrt(h)):q.set(0,0,0)}}();
THREE.Triangle.barycoordFromPoint=function(){var d=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3;return function(p,q,w,s,A){d.subVectors(s,q);h.subVectors(w,q);k.subVectors(p,q);var p=d.dot(d),q=d.dot(h),w=d.dot(k),B=h.dot(h),s=h.dot(k),C=p*B-q*q,A=A||new THREE.Vector3;if(0==C)return A.set(-2,-1,-1);C=1/C;B=(B*w-q*s)*C;p=(p*s-q*w)*C;return A.set(1-B-p,p,B)}}();
THREE.Triangle.containsPoint=function(){var d=new THREE.Vector3;return function(h,k,p,q){h=THREE.Triangle.barycoordFromPoint(h,k,p,q,d);return 0<=h.x&&0<=h.y&&1>=h.x+h.y}}();
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(d,h,k){this.a.copy(d);this.b.copy(h);this.c.copy(k);return this},setFromPointsAndIndices:function(d,h,k,p){this.a.copy(d[h]);this.b.copy(d[k]);this.c.copy(d[p]);return this},copy:function(d){this.a.copy(d.a);this.b.copy(d.b);this.c.copy(d.c);return this},area:function(){var d=new THREE.Vector3,h=new THREE.Vector3;return function(){d.subVectors(this.c,this.b);h.subVectors(this.a,this.b);return 0.5*d.cross(h).length()}}(),midpoint:function(d){return(d||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(d){return THREE.Triangle.normal(this.a,this.b,this.c,d)},plane:function(d){return(d||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(d,h){return THREE.Triangle.barycoordFromPoint(d,this.a,this.b,this.c,h)},containsPoint:function(d){return THREE.Triangle.containsPoint(d,this.a,this.b,this.c)},equals:function(d){return d.a.equals(this.a)&&d.b.equals(this.b)&&d.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(d){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return d};THREE.UV=function(d,h){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(d,h)};THREE.Clock=function(d){this.autoStart=void 0!==d?d:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var d=0;this.autoStart&&!this.running&&this.start();if(this.running){var h=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),
d=0.0010*(h-this.oldTime);this.oldTime=h;this.elapsedTime+=d}return d}};THREE.EventDispatcher=function(){};
THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(d){d.addEventListener=THREE.EventDispatcher.prototype.addEventListener;d.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener;d.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener;d.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(d,h){void 0===this._listeners&&(this._listeners={});var k=this._listeners;void 0===k[d]&&(k[d]=[]);-1===k[d].indexOf(h)&&
k[d].push(h)},hasEventListener:function(d,h){if(void 0===this._listeners)return!1;var k=this._listeners;return void 0!==k[d]&&-1!==k[d].indexOf(h)?!0:!1},removeEventListener:function(d,h){if(void 0!==this._listeners){var k=this._listeners,p=k[d].indexOf(h);-1!==p&&k[d].splice(p,1)}},dispatchEvent:function(){var d=[];return function(h){if(void 0!==this._listeners){var k=this._listeners[h.type];if(void 0!==k){h.target=this;for(var p=k.length,q=0;q<p;q++)d[q]=k[q];for(q=0;q<p;q++)d[q].call(this,h)}}}}()};
(function(d){d.Raycaster=function(h,k,p,q){this.ray=new d.Ray(h,k);this.near=p||0;this.far=q||Infinity};var h=new d.Sphere,k=new d.Ray;new d.Plane;new d.Vector3;var p=new d.Vector3,q=new d.Matrix4,w=function(d,h){return d.distance-h.distance},s=new d.Vector3,A=new d.Vector3,B=new d.Vector3,C=function(w,D,I){if(w instanceof d.Sprite){p.getPositionFromMatrix(w.matrixWorld);var M=D.ray.distanceToPoint(p);if(M>w.scale.x)return I;I.push({distance:M,point:w.position,face:null,object:w})}else if(w instanceof
d.LOD)p.getPositionFromMatrix(w.matrixWorld),M=D.ray.origin.distanceTo(p),C(w.getObjectForDistance(M),D,I);else if(w instanceof d.Mesh){var N=w.geometry;null===N.boundingSphere&&N.computeBoundingSphere();h.copy(N.boundingSphere);h.applyMatrix4(w.matrixWorld);if(!1===D.ray.isIntersectionSphere(h))return I;q.getInverse(w.matrixWorld);k.copy(D.ray).applyMatrix4(q);if(null!==N.boundingBox&&!1===k.isIntersectionBox(N.boundingBox))return I;if(N instanceof d.BufferGeometry){var L=w.material;if(void 0===
L||!1===N.dynamic)return I;var Q,P,O=D.precision;if(void 0!==N.attributes.index)for(var R=N.offsets,$=N.attributes.index.array,T=N.attributes.position.array,S=N.offsets.length,Y=N.attributes.index.array.length/3,Y=0;Y<S;++Y)for(var M=R[Y].start,X=R[Y].index,N=M,ea=M+R[Y].count;N<ea;N+=3)M=X+$[N],Q=X+$[N+1],P=X+$[N+2],s.set(T[3*M],T[3*M+1],T[3*M+2]),A.set(T[3*Q],T[3*Q+1],T[3*Q+2]),B.set(T[3*P],T[3*P+1],T[3*P+2]),Q=L.side===d.BackSide?k.intersectTriangle(B,A,s,!0):k.intersectTriangle(s,A,B,L.side!==
d.DoubleSide),null!==Q&&(Q.applyMatrix4(w.matrixWorld),M=D.ray.origin.distanceTo(Q),M<O||(M<D.near||M>D.far)||I.push({distance:M,point:Q,face:null,faceIndex:null,object:w}));else{T=N.attributes.position.array;Y=N.attributes.position.array.length;for(N=0;N<Y;N+=3)M=N,Q=N+1,P=N+2,s.set(T[3*M],T[3*M+1],T[3*M+2]),A.set(T[3*Q],T[3*Q+1],T[3*Q+2]),B.set(T[3*P],T[3*P+1],T[3*P+2]),Q=L.side===d.BackSide?k.intersectTriangle(B,A,s,!0):k.intersectTriangle(s,A,B,L.side!==d.DoubleSide),null!==Q&&(Q.applyMatrix4(w.matrixWorld),
M=D.ray.origin.distanceTo(Q),M<O||(M<D.near||M>D.far)||I.push({distance:M,point:Q,face:null,faceIndex:null,object:w}))}}else if(N instanceof d.Geometry){$=w.material instanceof d.MeshFaceMaterial;T=!0===$?w.material.materials:null;O=D.precision;R=N.vertices;S=0;for(Y=N.faces.length;S<Y;S++)X=N.faces[S],L=!0===$?T[X.materialIndex]:w.material,void 0!==L&&(M=R[X.a],Q=R[X.b],P=R[X.c],Q=L.side===d.BackSide?k.intersectTriangle(P,Q,M,!0):k.intersectTriangle(M,Q,P,L.side!==d.DoubleSide),null!==Q&&(Q.applyMatrix4(w.matrixWorld),
M=D.ray.origin.distanceTo(Q),M<O||(M<D.near||M>D.far)||I.push({distance:M,point:Q,face:X,faceIndex:S,object:w})))}}else if(w instanceof d.Line){O=D.linePrecision;L=O*O;N=w.geometry;null===N.boundingSphere&&N.computeBoundingSphere();h.copy(N.boundingSphere);h.applyMatrix4(w.matrixWorld);if(!1===D.ray.isIntersectionSphere(h))return I;q.getInverse(w.matrixWorld);k.copy(D.ray).applyMatrix4(q);if(N instanceof d.Geometry){R=N.vertices;O=R.length;Q=new d.Vector3;P=new d.Vector3;Y=w.type===d.LineStrip?1:
2;for(N=0;N<O-1;N+=Y)k.distanceSqToSegment(R[N],R[N+1],P,Q)>L||(M=k.origin.distanceTo(P),M<D.near||M>D.far||I.push({distance:M,point:Q.clone().applyMatrix4(w.matrixWorld),face:null,faceIndex:null,object:w}))}}},D=function(d,h,k){for(var d=d.getDescendants(),p=0,q=d.length;p<q;p++)C(d[p],h,k)};d.Raycaster.prototype.precision=1E-4;d.Raycaster.prototype.linePrecision=1;d.Raycaster.prototype.set=function(d,h){this.ray.set(d,h)};d.Raycaster.prototype.intersectObject=function(d,h){var k=[];!0===h&&D(d,
this,k);C(d,this,k);k.sort(w);return k};d.Raycaster.prototype.intersectObjects=function(d,h){for(var k=[],p=0,q=d.length;p<q;p++)C(d[p],this,k),!0===h&&D(d[p],this,k);k.sort(w);return k}})(THREE);
THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this._rotation=new THREE.Euler;this._quaternion=new THREE.Quaternion;this.scale=new THREE.Vector3(1,1,1);this._rotation._quaternion=this.quaternion;this._quaternion._euler=this.rotation;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;
this.visible=this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};
THREE.Object3D.prototype={constructor:THREE.Object3D,get rotation(){return this._rotation},set rotation(d){this._rotation=d;this._rotation._quaternion=this._quaternion;this._quaternion._euler=this._rotation;this._rotation._updateQuaternion()},get quaternion(){return this._quaternion},set quaternion(d){this._quaternion=d;this._quaternion._euler=this._rotation;this._rotation._quaternion=this._quaternion;this._quaternion._updateEuler()},get eulerOrder(){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");
return this.rotation.order},set eulerOrder(d){console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order.");this.rotation.order=d},get useQuaternion(){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(d){console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(){var d=new THREE.Matrix4;return function(h){this.matrix.multiplyMatrices(h,
this.matrix);this.position.getPositionFromMatrix(this.matrix);this.scale.getScaleFromMatrix(this.matrix);d.extractRotation(this.matrix);this.quaternion.setFromRotationMatrix(d)}}(),setRotationFromAxisAngle:function(d,h){this.quaternion.setFromAxisAngle(d,h)},setRotationFromEuler:function(d){this.quaternion.setFromEuler(d,!0)},setRotationFromMatrix:function(d){this.quaternion.setFromRotationMatrix(d)},setRotationFromQuaternion:function(d){this.quaternion.copy(d)},rotateOnAxis:function(){var d=new THREE.Quaternion;
return function(h,k){d.setFromAxisAngle(h,k);this.quaternion.multiply(d);return this}}(),rotateX:function(){var d=new THREE.Vector3(1,0,0);return function(h){return this.rotateOnAxis(d,h)}}(),rotateY:function(){var d=new THREE.Vector3(0,1,0);return function(h){return this.rotateOnAxis(d,h)}}(),rotateZ:function(){var d=new THREE.Vector3(0,0,1);return function(h){return this.rotateOnAxis(d,h)}}(),translateOnAxis:function(){var d=new THREE.Vector3;return function(h,k){d.copy(h);d.applyQuaternion(this.quaternion);
this.position.add(d.multiplyScalar(k));return this}}(),translate:function(d,h){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(h,d)},translateX:function(){var d=new THREE.Vector3(1,0,0);return function(h){return this.translateOnAxis(d,h)}}(),translateY:function(){var d=new THREE.Vector3(0,1,0);return function(h){return this.translateOnAxis(d,h)}}(),translateZ:function(){var d=
new THREE.Vector3(0,0,1);return function(h){return this.translateOnAxis(d,h)}}(),localToWorld:function(d){return d.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var d=new THREE.Matrix4;return function(h){return h.applyMatrix4(d.getInverse(this.matrixWorld))}}(),lookAt:function(){var d=new THREE.Matrix4;return function(h){d.lookAt(h,this.position,this.up);this.quaternion.setFromRotationMatrix(d)}}(),add:function(d){if(d===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(d instanceof THREE.Object3D){void 0!==d.parent&&d.parent.remove(d);d.parent=this;d.dispatchEvent({type:"added"});this.children.push(d);for(var h=this;void 0!==h.parent;)h=h.parent;void 0!==h&&h instanceof THREE.Scene&&h.__addObject(d)}},remove:function(d){var h=this.children.indexOf(d);if(-1!==h){d.parent=void 0;d.dispatchEvent({type:"removed"});this.children.splice(h,1);for(h=this;void 0!==h.parent;)h=h.parent;void 0!==h&&h instanceof THREE.Scene&&h.__removeObject(d)}},traverse:function(d){d(this);
for(var h=0,k=this.children.length;h<k;h++)this.children[h].traverse(d)},getObjectById:function(d,h){for(var k=0,p=this.children.length;k<p;k++){var q=this.children[k];if(q.id===d||!0===h&&(q=q.getObjectById(d,h),void 0!==q))return q}},getObjectByName:function(d,h){for(var k=0,p=this.children.length;k<p;k++){var q=this.children[k];if(q.name===d||!0===h&&(q=q.getObjectByName(d,h),void 0!==q))return q}},getChildByName:function(d,h){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");
return this.getObjectByName(d,h)},getDescendants:function(d){void 0===d&&(d=[]);Array.prototype.push.apply(d,this.children);for(var h=0,k=this.children.length;h<k;h++)this.children[h].getDescendants(d);return d},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(d){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===d)void 0===this.parent?this.matrixWorld.copy(this.matrix):
this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,d=!0;for(var h=0,k=this.children.length;h<k;h++)this.children[h].updateMatrixWorld(d)},clone:function(d,h){void 0===d&&(d=new THREE.Object3D);void 0===h&&(h=!0);d.name=this.name;d.up.copy(this.up);d.position.copy(this.position);d.quaternion.copy(this.quaternion);d.scale.copy(this.scale);d.renderDepth=this.renderDepth;d.rotationAutoUpdate=this.rotationAutoUpdate;d.matrix.copy(this.matrix);d.matrixWorld.copy(this.matrixWorld);
d.matrixAutoUpdate=this.matrixAutoUpdate;d.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;d.visible=this.visible;d.castShadow=this.castShadow;d.receiveShadow=this.receiveShadow;d.frustumCulled=this.frustumCulled;d.userData=JSON.parse(JSON.stringify(this.userData));if(!0===h)for(var k=0;k<this.children.length;k++)d.add(this.children[k].clone());return d}};THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype);THREE.Object3DIdCount=0;
THREE.Projector=function(){function d(){if(B===D){var d=new THREE.RenderableVertex;C.push(d);D++;B++;return d}return C[B++]}function h(d,h){return d.z!==h.z?h.z-d.z:d.id!==h.id?d.id-h.id:0}function k(d,h){var k=0,p=1,q=d.z+d.w,s=h.z+h.w,w=-d.z+d.w,A=-h.z+h.w;if(0<=q&&0<=s&&0<=w&&0<=A)return!0;if(0>q&&0>s||0>w&&0>A)return!1;0>q?k=Math.max(k,q/(q-s)):0>s&&(p=Math.min(p,q/(q-s)));0>w?k=Math.max(k,w/(w-A)):0>A&&(p=Math.min(p,w/(w-A)));if(p<k)return!1;d.lerp(h,k);h.lerp(d,1-p);return!0}var p,q,w=[],s=
0,A,B,C=[],D=0,F,H,I=[],M=0,N,L,Q=[],P=0,O,R,$=[],T=0,S={objects:[],sprites:[],lights:[],elements:[]},Y=new THREE.Vector3,X=new THREE.Vector4,ea=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),aa=new THREE.Box3,Z=Array(3),U=new THREE.Matrix4,V=new THREE.Matrix4,ga,ca=new THREE.Matrix4,ia=new THREE.Matrix3,Ma=new THREE.Matrix3,ja=new THREE.Vector3,La=new THREE.Frustum,Va=new THREE.Vector4,ba=new THREE.Vector4;this.projectVector=function(d,h){h.matrixWorldInverse.getInverse(h.matrixWorld);
V.multiplyMatrices(h.projectionMatrix,h.matrixWorldInverse);return d.applyProjection(V)};this.unprojectVector=function(d,h){h.projectionMatrixInverse.getInverse(h.projectionMatrix);V.multiplyMatrices(h.matrixWorld,h.projectionMatrixInverse);return d.applyProjection(V)};this.pickingRay=function(d,h){d.z=-1;var k=new THREE.Vector3(d.x,d.y,1);this.unprojectVector(d,h);this.unprojectVector(k,h);k.sub(d).normalize();return new THREE.Raycaster(d,k)};var ra=function(d){if(q===s){var h=new THREE.RenderableObject;
w.push(h);s++;q++;p=h}else p=w[q++];p.id=d.id;p.object=d;null!==d.renderDepth?p.z=d.renderDepth:(Y.getPositionFromMatrix(d.matrixWorld),Y.applyProjection(V),p.z=Y.z);return p},oa=function(d){if(!1!==d.visible){d instanceof THREE.Light?S.lights.push(d):d instanceof THREE.Mesh||d instanceof THREE.Line?(!1===d.frustumCulled||!0===La.intersectsObject(d))&&S.objects.push(ra(d)):d instanceof THREE.Sprite&&S.sprites.push(ra(d));for(var h=0,k=d.children.length;h<k;h++)oa(d.children[h])}};this.projectScene=
function(p,s,w,D){var Y=!1,ra,Sa,Ya,Ra,Na,ya,Qa,db,kb,bb,xb,ub;R=L=H=0;S.elements.length=0;!0===p.autoUpdate&&p.updateMatrixWorld();void 0===s.parent&&s.updateMatrixWorld();U.copy(s.matrixWorldInverse.getInverse(s.matrixWorld));V.multiplyMatrices(s.projectionMatrix,U);Ma.getNormalMatrix(U);La.setFromMatrix(V);q=0;S.objects.length=0;S.sprites.length=0;S.lights.length=0;oa(p);!0===w&&S.objects.sort(h);p=0;for(w=S.objects.length;p<w;p++)if(Qa=S.objects[p].object,ga=Qa.matrixWorld,B=0,Qa instanceof THREE.Mesh){db=
Qa.geometry;Ya=db.vertices;kb=db.faces;db=db.faceVertexUvs;ia.getNormalMatrix(ga);xb=Qa.material instanceof THREE.MeshFaceMaterial;ub=!0===xb?Qa.material:null;ra=0;for(Sa=Ya.length;ra<Sa;ra++){A=d();A.positionWorld.copy(Ya[ra]).applyMatrix4(ga);A.positionScreen.copy(A.positionWorld).applyMatrix4(V);var eb=1/A.positionScreen.w;A.positionScreen.x*=eb;A.positionScreen.y*=eb;A.positionScreen.z*=eb;A.visible=!(-1>A.positionScreen.x||1<A.positionScreen.x||-1>A.positionScreen.y||1<A.positionScreen.y||-1>
A.positionScreen.z||1<A.positionScreen.z)}Ya=0;for(ra=kb.length;Ya<ra;Ya++)if(Sa=kb[Ya],eb=!0===xb?ub.materials[Sa.materialIndex]:Qa.material,void 0!==eb&&(ya=eb.side,Ra=C[Sa.a],Na=C[Sa.b],bb=C[Sa.c],Z[0]=Ra.positionScreen,Z[1]=Na.positionScreen,Z[2]=bb.positionScreen,!0===Ra.visible||!0===Na.visible||!0===bb.visible||ea.isIntersectionBox(aa.setFromPoints(Z))))if(Y=0>(bb.positionScreen.x-Ra.positionScreen.x)*(Na.positionScreen.y-Ra.positionScreen.y)-(bb.positionScreen.y-Ra.positionScreen.y)*(Na.positionScreen.x-
Ra.positionScreen.x),ya===THREE.DoubleSide||Y===(ya===THREE.FrontSide)){if(H===M){var nb=new THREE.RenderableFace3;I.push(nb);M++;H++;F=nb}else F=I[H++];F.id=Qa.id;F.v1.copy(Ra);F.v2.copy(Na);F.v3.copy(bb);F.normalModel.copy(Sa.normal);!1===Y&&(ya===THREE.BackSide||ya===THREE.DoubleSide)&&F.normalModel.negate();F.normalModel.applyMatrix3(ia).normalize();F.normalModelView.copy(F.normalModel).applyMatrix3(Ma);F.centroidModel.copy(Sa.centroid).applyMatrix4(ga);bb=Sa.vertexNormals;Ra=0;for(Na=Math.min(bb.length,
3);Ra<Na;Ra++)nb=F.vertexNormalsModel[Ra],nb.copy(bb[Ra]),!1===Y&&(ya===THREE.BackSide||ya===THREE.DoubleSide)&&nb.negate(),nb.applyMatrix3(ia).normalize(),F.vertexNormalsModelView[Ra].copy(nb).applyMatrix3(Ma);F.vertexNormalsLength=bb.length;Y=0;for(Ra=Math.min(db.length,3);Y<Ra;Y++)if(bb=db[Y][Ya],void 0!==bb){Na=0;for(ya=bb.length;Na<ya;Na++)F.uvs[Y][Na]=bb[Na]}F.color=Sa.color;F.material=eb;ja.copy(F.centroidModel).applyProjection(V);F.z=ja.z;S.elements.push(F)}}else if(Qa instanceof THREE.Line){ca.multiplyMatrices(V,
ga);Ya=Qa.geometry.vertices;Ra=d();Ra.positionScreen.copy(Ya[0]).applyMatrix4(ca);kb=Qa.type===THREE.LinePieces?2:1;ra=1;for(Sa=Ya.length;ra<Sa;ra++)Ra=d(),Ra.positionScreen.copy(Ya[ra]).applyMatrix4(ca),0<(ra+1)%kb||(Na=C[B-2],Va.copy(Ra.positionScreen),ba.copy(Na.positionScreen),!0===k(Va,ba)&&(Va.multiplyScalar(1/Va.w),ba.multiplyScalar(1/ba.w),L===P?(db=new THREE.RenderableLine,Q.push(db),P++,L++,N=db):N=Q[L++],N.id=Qa.id,N.v1.positionScreen.copy(Va),N.v2.positionScreen.copy(ba),N.z=Math.max(Va.z,
ba.z),N.material=Qa.material,Qa.material.vertexColors===THREE.VertexColors&&(N.vertexColors[0].copy(Qa.geometry.colors[ra]),N.vertexColors[1].copy(Qa.geometry.colors[ra-1])),S.elements.push(N)))}p=0;for(w=S.sprites.length;p<w;p++)Qa=S.sprites[p].object,ga=Qa.matrixWorld,Qa instanceof THREE.Sprite&&(X.set(ga.elements[12],ga.elements[13],ga.elements[14],1),X.applyMatrix4(V),eb=1/X.w,X.z*=eb,-1<X.z&&1>X.z&&(R===T?(kb=new THREE.RenderableSprite,$.push(kb),T++,R++,O=kb):O=$[R++],O.id=Qa.id,O.x=X.x*eb,
O.y=X.y*eb,O.z=X.z,O.object=Qa,O.rotation=Qa.rotation,O.scale.x=Qa.scale.x*Math.abs(O.x-(X.x+s.projectionMatrix.elements[0])/(X.w+s.projectionMatrix.elements[12])),O.scale.y=Qa.scale.y*Math.abs(O.y-(X.y+s.projectionMatrix.elements[5])/(X.w+s.projectionMatrix.elements[13])),O.material=Qa.material,S.elements.push(O)));!0===D&&S.elements.sort(h);return S}};
THREE.Face3=function(d,h,k,p,q,w){this.a=d;this.b=h;this.c=k;this.normal=p instanceof THREE.Vector3?p:new THREE.Vector3;this.vertexNormals=p instanceof Array?p:[];this.color=q instanceof THREE.Color?q:new THREE.Color;this.vertexColors=q instanceof Array?q:[];this.vertexTangents=[];this.materialIndex=void 0!==w?w:0;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var d=new THREE.Face3(this.a,this.b,this.c);d.normal.copy(this.normal);d.color.copy(this.color);d.centroid.copy(this.centroid);d.materialIndex=this.materialIndex;var h,k;h=0;for(k=this.vertexNormals.length;h<k;h++)d.vertexNormals[h]=this.vertexNormals[h].clone();h=0;for(k=this.vertexColors.length;h<k;h++)d.vertexColors[h]=this.vertexColors[h].clone();h=0;for(k=this.vertexTangents.length;h<k;h++)d.vertexTangents[h]=this.vertexTangents[h].clone();
return d}};THREE.Face4=function(d,h,k,p,q,w,s){console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead.");return new THREE.Face3(d,h,k,q,w,s)};
THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=
this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(d){for(var h=(new THREE.Matrix3).getNormalMatrix(d),k=0,p=this.vertices.length;k<p;k++)this.vertices[k].applyMatrix4(d);k=0;for(p=this.faces.length;k<p;k++){var q=this.faces[k];q.normal.applyMatrix3(h).normalize();for(var w=0,s=q.vertexNormals.length;w<s;w++)q.vertexNormals[w].applyMatrix3(h).normalize();q.centroid.applyMatrix4(d)}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox();this.boundingSphere instanceof
THREE.Sphere&&this.computeBoundingSphere()},computeCentroids:function(){var d,h,k;d=0;for(h=this.faces.length;d<h;d++)k=this.faces[d],k.centroid.set(0,0,0),k.centroid.add(this.vertices[k.a]),k.centroid.add(this.vertices[k.b]),k.centroid.add(this.vertices[k.c]),k.centroid.divideScalar(3)},computeFaceNormals:function(){for(var d=new THREE.Vector3,h=new THREE.Vector3,k=0,p=this.faces.length;k<p;k++){var q=this.faces[k],w=this.vertices[q.a],s=this.vertices[q.b];d.subVectors(this.vertices[q.c],s);h.subVectors(w,
s);d.cross(h);d.normalize();q.normal.copy(d)}},computeVertexNormals:function(d){var h,k,p,q;if(void 0===this.__tmpVertices){q=this.__tmpVertices=Array(this.vertices.length);h=0;for(k=this.vertices.length;h<k;h++)q[h]=new THREE.Vector3;h=0;for(k=this.faces.length;h<k;h++)p=this.faces[h],p.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{q=this.__tmpVertices;h=0;for(k=this.vertices.length;h<k;h++)q[h].set(0,0,0)}if(d){var w,s,A=new THREE.Vector3,B=new THREE.Vector3;new THREE.Vector3;
new THREE.Vector3;new THREE.Vector3;h=0;for(k=this.faces.length;h<k;h++)p=this.faces[h],d=this.vertices[p.a],w=this.vertices[p.b],s=this.vertices[p.c],A.subVectors(s,w),B.subVectors(d,w),A.cross(B),q[p.a].add(A),q[p.b].add(A),q[p.c].add(A)}else{h=0;for(k=this.faces.length;h<k;h++)p=this.faces[h],q[p.a].add(p.normal),q[p.b].add(p.normal),q[p.c].add(p.normal)}h=0;for(k=this.vertices.length;h<k;h++)q[h].normalize();h=0;for(k=this.faces.length;h<k;h++)p=this.faces[h],p.vertexNormals[0].copy(q[p.a]),p.vertexNormals[1].copy(q[p.b]),
p.vertexNormals[2].copy(q[p.c])},computeMorphNormals:function(){var d,h,k,p,q;k=0;for(p=this.faces.length;k<p;k++){q=this.faces[k];q.__originalFaceNormal?q.__originalFaceNormal.copy(q.normal):q.__originalFaceNormal=q.normal.clone();q.__originalVertexNormals||(q.__originalVertexNormals=[]);d=0;for(h=q.vertexNormals.length;d<h;d++)q.__originalVertexNormals[d]?q.__originalVertexNormals[d].copy(q.vertexNormals[d]):q.__originalVertexNormals[d]=q.vertexNormals[d].clone()}var w=new THREE.Geometry;w.faces=
this.faces;d=0;for(h=this.morphTargets.length;d<h;d++){if(!this.morphNormals[d]){this.morphNormals[d]={};this.morphNormals[d].faceNormals=[];this.morphNormals[d].vertexNormals=[];q=this.morphNormals[d].faceNormals;var s=this.morphNormals[d].vertexNormals,A,B;k=0;for(p=this.faces.length;k<p;k++)A=new THREE.Vector3,B={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},q.push(A),s.push(B)}s=this.morphNormals[d];w.vertices=this.morphTargets[d].vertices;w.computeFaceNormals();w.computeVertexNormals();
k=0;for(p=this.faces.length;k<p;k++)q=this.faces[k],A=s.faceNormals[k],B=s.vertexNormals[k],A.copy(q.normal),B.a.copy(q.vertexNormals[0]),B.b.copy(q.vertexNormals[1]),B.c.copy(q.vertexNormals[2])}k=0;for(p=this.faces.length;k<p;k++)q=this.faces[k],q.normal=q.__originalFaceNormal,q.vertexNormals=q.__originalVertexNormals},computeTangents:function(){var d,h,k,p,q,w,s,A,B,C,D,F,H,I,M,N,L,Q=[],P=[];k=new THREE.Vector3;var O=new THREE.Vector3,R=new THREE.Vector3,$=new THREE.Vector3,T=new THREE.Vector3;
d=0;for(h=this.vertices.length;d<h;d++)Q[d]=new THREE.Vector3,P[d]=new THREE.Vector3;d=0;for(h=this.faces.length;d<h;d++)q=this.faces[d],w=this.faceVertexUvs[0][d],p=q.a,L=q.b,q=q.c,s=this.vertices[p],A=this.vertices[L],B=this.vertices[q],C=w[0],D=w[1],F=w[2],w=A.x-s.x,H=B.x-s.x,I=A.y-s.y,M=B.y-s.y,A=A.z-s.z,s=B.z-s.z,B=D.x-C.x,N=F.x-C.x,D=D.y-C.y,C=F.y-C.y,F=1/(B*C-N*D),k.set((C*w-D*H)*F,(C*I-D*M)*F,(C*A-D*s)*F),O.set((B*H-N*w)*F,(B*M-N*I)*F,(B*s-N*A)*F),Q[p].add(k),Q[L].add(k),Q[q].add(k),P[p].add(O),
P[L].add(O),P[q].add(O);O=["a","b","c","d"];d=0;for(h=this.faces.length;d<h;d++){q=this.faces[d];for(k=0;k<Math.min(q.vertexNormals.length,3);k++)T.copy(q.vertexNormals[k]),p=q[O[k]],L=Q[p],R.copy(L),R.sub(T.multiplyScalar(T.dot(L))).normalize(),$.crossVectors(q.vertexNormals[k],L),p=$.dot(P[p]),p=0>p?-1:1,q.vertexTangents[k]=new THREE.Vector4(R.x,R.y,R.z,p)}this.hasTangents=!0},computeLineDistances:function(){for(var d=0,h=this.vertices,k=0,p=h.length;k<p;k++)0<k&&(d+=h[k].distanceTo(h[k-1])),this.lineDistances[k]=
d},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromPoints(this.vertices)},mergeVertices:function(){var d={},h=[],k=[],p,q=Math.pow(10,4),w,s;this.__tmpVertices=void 0;w=0;for(s=this.vertices.length;w<s;w++)p=this.vertices[w],p=Math.round(p.x*q)+"_"+Math.round(p.y*q)+"_"+Math.round(p.z*
q),void 0===d[p]?(d[p]=w,h.push(this.vertices[w]),k[w]=h.length-1):k[w]=k[d[p]];d=[];w=0;for(s=this.faces.length;w<s;w++){q=this.faces[w];q.a=k[q.a];q.b=k[q.b];q.c=k[q.c];q=[q.a,q.b,q.c];for(p=0;3>p;p++)if(q[p]==q[(p+1)%3]){d.push(w);break}}for(w=d.length-1;0<=w;w--){q=d[w];this.faces.splice(q,1);k=0;for(s=this.faceVertexUvs.length;k<s;k++)this.faceVertexUvs[k].splice(q,1)}w=this.vertices.length-h.length;this.vertices=h;return w},clone:function(){for(var d=new THREE.Geometry,h=this.vertices,k=0,p=
h.length;k<p;k++)d.vertices.push(h[k].clone());h=this.faces;k=0;for(p=h.length;k<p;k++)d.faces.push(h[k].clone());h=this.faceVertexUvs[0];k=0;for(p=h.length;k<p;k++){for(var q=h[k],w=[],s=0,A=q.length;s<A;s++)w.push(new THREE.Vector2(q[s].x,q[s].y));d.faceVertexUvs[0].push(w)}return d},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype);THREE.GeometryIdCount=0;
THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.attributes={};this.dynamic=!0;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(d,h,k,p){this.attributes[d]={itemSize:p,array:new h(k*p)}},applyMatrix:function(d){var h,k;this.attributes.position&&(h=this.attributes.position.array);this.attributes.normal&&(k=this.attributes.normal.array);void 0!==h&&(d.multiplyVector3Array(h),this.verticesNeedUpdate=!0);void 0!==k&&((new THREE.Matrix3).getNormalMatrix(d).multiplyVector3Array(k),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===
this.boundingBox&&(this.boundingBox=new THREE.Box3);var d=this.attributes.position.array;if(d){var h=this.boundingBox,k,p,q;3<=d.length&&(h.min.x=h.max.x=d[0],h.min.y=h.max.y=d[1],h.min.z=h.max.z=d[2]);for(var w=3,s=d.length;w<s;w+=3)k=d[w],p=d[w+1],q=d[w+2],k<h.min.x?h.min.x=k:k>h.max.x&&(h.max.x=k),p<h.min.y?h.min.y=p:p>h.max.y&&(h.max.y=p),q<h.min.z?h.min.z=q:q>h.max.z&&(h.max.z=q)}if(void 0===d||0===d.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var d=
new THREE.Box3,h=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var k=this.attributes.position.array;if(k){for(var p=this.boundingSphere.center,q=0,w=k.length;q<w;q+=3)h.set(k[q],k[q+1],k[q+2]),d.addPoint(h);d.center(p);for(var s=0,q=0,w=k.length;q<w;q+=3)h.set(k[q],k[q+1],k[q+2]),s=Math.max(s,p.distanceToSquared(h));this.boundingSphere.radius=Math.sqrt(s)}}}(),computeVertexNormals:function(){if(this.attributes.position){var d,h,k,p;d=this.attributes.position.array.length;
if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(d)};else{d=0;for(h=this.attributes.normal.array.length;d<h;d++)this.attributes.normal.array[d]=0}var q=this.attributes.position.array,w=this.attributes.normal.array,s,A,B,C,D,F,H=new THREE.Vector3,I=new THREE.Vector3,M=new THREE.Vector3,N=new THREE.Vector3,L=new THREE.Vector3;if(this.attributes.index){var Q=this.attributes.index.array,P=this.offsets;k=0;for(p=P.length;k<p;++k){h=P[k].start;s=P[k].count;var O=
P[k].index;d=h;for(h+=s;d<h;d+=3)s=O+Q[d],A=O+Q[d+1],B=O+Q[d+2],C=q[3*s],D=q[3*s+1],F=q[3*s+2],H.set(C,D,F),C=q[3*A],D=q[3*A+1],F=q[3*A+2],I.set(C,D,F),C=q[3*B],D=q[3*B+1],F=q[3*B+2],M.set(C,D,F),N.subVectors(M,I),L.subVectors(H,I),N.cross(L),w[3*s]+=N.x,w[3*s+1]+=N.y,w[3*s+2]+=N.z,w[3*A]+=N.x,w[3*A+1]+=N.y,w[3*A+2]+=N.z,w[3*B]+=N.x,w[3*B+1]+=N.y,w[3*B+2]+=N.z}}else{d=0;for(h=q.length;d<h;d+=9)C=q[d],D=q[d+1],F=q[d+2],H.set(C,D,F),C=q[d+3],D=q[d+4],F=q[d+5],I.set(C,D,F),C=q[d+6],D=q[d+7],F=q[d+8],
M.set(C,D,F),N.subVectors(M,I),L.subVectors(H,I),N.cross(L),w[d]=N.x,w[d+1]=N.y,w[d+2]=N.z,w[d+3]=N.x,w[d+4]=N.y,w[d+5]=N.z,w[d+6]=N.x,w[d+7]=N.y,w[d+8]=N.z}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var d=this.attributes.normal.array,h,k,p,q=0,w=d.length;q<w;q+=3)h=d[q],k=d[q+1],p=d[q+2],h=1/Math.sqrt(h*h+k*k+p*p),d[q]*=h,d[q+1]*=h,d[q+2]*=h},computeTangents:function(){function d(d){La.x=p[3*d];La.y=p[3*d+1];La.z=p[3*d+2];Va.copy(La);ra=A[d];Ma.copy(ra);Ma.sub(La.multiplyScalar(La.dot(ra))).normalize();
ja.crossVectors(Va,ra);oa=ja.dot(B[d]);ba=0>oa?-1:1;s[4*d]=Ma.x;s[4*d+1]=Ma.y;s[4*d+2]=Ma.z;s[4*d+3]=ba}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var h=this.attributes.index.array,k=this.attributes.position.array,p=this.attributes.normal.array,q=this.attributes.uv.array,w=k.length/3;void 0===this.attributes.tangent&&
(this.attributes.tangent={itemSize:4,array:new Float32Array(4*w)});for(var s=this.attributes.tangent.array,A=[],B=[],C=0;C<w;C++)A[C]=new THREE.Vector3,B[C]=new THREE.Vector3;var D,F,H,I,M,N,L,Q,P,O,R,$,T,S,Y,w=new THREE.Vector3,C=new THREE.Vector3,X,ea,aa,Z,U,V,ga,ca=this.offsets;aa=0;for(Z=ca.length;aa<Z;++aa){ea=ca[aa].start;U=ca[aa].count;var ia=ca[aa].index;X=ea;for(ea+=U;X<ea;X+=3)U=ia+h[X],V=ia+h[X+1],ga=ia+h[X+2],D=k[3*U],F=k[3*U+1],H=k[3*U+2],I=k[3*V],M=k[3*V+1],N=k[3*V+2],L=k[3*ga],Q=k[3*
ga+1],P=k[3*ga+2],O=q[2*U],R=q[2*U+1],$=q[2*V],T=q[2*V+1],S=q[2*ga],Y=q[2*ga+1],I-=D,D=L-D,M-=F,F=Q-F,N-=H,H=P-H,$-=O,O=S-O,T-=R,R=Y-R,Y=1/($*R-O*T),w.set((R*I-T*D)*Y,(R*M-T*F)*Y,(R*N-T*H)*Y),C.set(($*D-O*I)*Y,($*F-O*M)*Y,($*H-O*N)*Y),A[U].add(w),A[V].add(w),A[ga].add(w),B[U].add(C),B[V].add(C),B[ga].add(C)}var Ma=new THREE.Vector3,ja=new THREE.Vector3,La=new THREE.Vector3,Va=new THREE.Vector3,ba,ra,oa;aa=0;for(Z=ca.length;aa<Z;++aa){ea=ca[aa].start;U=ca[aa].count;ia=ca[aa].index;X=ea;for(ea+=U;X<
ea;X+=3)U=ia+h[X],V=ia+h[X+1],ga=ia+h[X+2],d(U),d(V),d(ga)}this.tangentsNeedUpdate=this.hasTangents=!0}},clone:function(){var d=new THREE.BufferGeometry,h=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array],k;for(k in this.attributes){for(var p=this.attributes[k],q=p.array,w={itemSize:p.itemSize,numItems:p.numItems,array:null},p=0,s=h.length;p<s;p++){var A=h[p];if(q instanceof A){w.array=new A(q);break}}d.attributes[k]=w}p=0;for(s=this.offsets.length;p<
s;p++)h=this.offsets[p],d.offsets.push({start:h.start,index:h.index,count:h.count});return d},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype);THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);
THREE.Camera.prototype.lookAt=function(){var d=new THREE.Matrix4;return function(h){d.lookAt(this.position,h,this.up);this.quaternion.setFromRotationMatrix(d)}}();THREE.Camera.prototype.clone=function(d){void 0===d&&(d=new THREE.Camera);THREE.Object3D.prototype.clone.call(this,d);d.matrixWorldInverse.copy(this.matrixWorldInverse);d.projectionMatrix.copy(this.projectionMatrix);d.projectionMatrixInverse.copy(this.projectionMatrixInverse);return d};
THREE.OrthographicCamera=function(d,h,k,p,q,w){THREE.Camera.call(this);this.left=d;this.right=h;this.top=k;this.bottom=p;this.near=void 0!==q?q:0.1;this.far=void 0!==w?w:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.OrthographicCamera.prototype.clone=function(){var d=new THREE.OrthographicCamera;THREE.Camera.prototype.clone.call(this,d);d.left=this.left;d.right=this.right;d.top=this.top;d.bottom=this.bottom;d.near=this.near;d.far=this.far;return d};THREE.PerspectiveCamera=function(d,h,k,p){THREE.Camera.call(this);this.fov=void 0!==d?d:50;this.aspect=void 0!==h?h:1;this.near=void 0!==k?k:0.1;this.far=void 0!==p?p:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);
THREE.PerspectiveCamera.prototype.setLens=function(d,h){void 0===h&&(h=24);this.fov=2*THREE.Math.radToDeg(Math.atan(h/(2*d)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(d,h,k,p,q,w){this.fullWidth=d;this.fullHeight=h;this.x=k;this.y=p;this.width=q;this.height=w;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var d=this.fullWidth/this.fullHeight,h=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,k=-h,p=d*k,d=Math.abs(d*h-p),k=Math.abs(h-k);this.projectionMatrix.makeFrustum(p+this.x*d/this.fullWidth,p+(this.x+this.width)*d/this.fullWidth,h-(this.y+this.height)*k/this.fullHeight,h-this.y*k/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.PerspectiveCamera.prototype.clone=function(){var d=new THREE.PerspectiveCamera;THREE.Camera.prototype.clone.call(this,d);d.fov=this.fov;d.aspect=this.aspect;d.near=this.near;d.far=this.far;return d};THREE.Light=function(d){THREE.Object3D.call(this);this.color=new THREE.Color(d)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(d){void 0===d&&(d=new THREE.Light);THREE.Object3D.prototype.clone.call(this,d);d.color.copy(this.color);return d};
THREE.AmbientLight=function(d){THREE.Light.call(this,d)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var d=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,d);return d};
THREE.AreaLight=function(d,h){THREE.Light.call(this,d);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==h?h:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(d,h){THREE.Light.call(this,d);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==h?h:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,
0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight.prototype.clone=function(){var d=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,d);d.target=this.target.clone();d.intensity=this.intensity;d.castShadow=this.castShadow;d.onlyShadow=this.onlyShadow;return d};THREE.HemisphereLight=function(d,h,k){THREE.Light.call(this,d);this.position.set(0,100,0);this.groundColor=new THREE.Color(h);this.intensity=void 0!==k?k:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight.prototype.clone=function(){var d=new THREE.HemisphereLight;THREE.Light.prototype.clone.call(this,d);d.groundColor.copy(this.groundColor);d.intensity=this.intensity;return d};THREE.PointLight=function(d,h,k){THREE.Light.call(this,d);this.intensity=void 0!==h?h:1;this.distance=void 0!==k?k:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.PointLight.prototype.clone=function(){var d=new THREE.PointLight;THREE.Light.prototype.clone.call(this,d);d.intensity=this.intensity;d.distance=this.distance;return d};
THREE.SpotLight=function(d,h,k,p,q){THREE.Light.call(this,d);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==h?h:1;this.distance=void 0!==k?k:0;this.angle=void 0!==p?p:Math.PI/3;this.exponent=void 0!==q?q:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=
this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var d=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,d);d.target=this.target.clone();d.intensity=this.intensity;d.distance=this.distance;d.angle=this.angle;d.exponent=this.exponent;d.castShadow=this.castShadow;d.onlyShadow=this.onlyShadow;return d};
THREE.Loader=function(d){this.statusDomElement=(this.showStatus=d)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var d=document.createElement("div");d.style.position="absolute";d.style.right="0px";d.style.top="0px";d.style.fontSize="0.8em";d.style.textAlign="left";d.style.background="rgba(0,0,0,0.25)";d.style.color="#fff";d.style.width="120px";d.style.padding="0.5em 0.5em 0.5em 0.5em";d.style.zIndex=1E3;d.innerHTML="Loading ...";return d},updateProgress:function(d){var h="Loaded ",h=d.total?h+((100*d.loaded/
d.total).toFixed(0)+"%"):h+((d.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=h},extractUrlBase:function(d){d=d.split("/");d.pop();return(1>d.length?".":d.join("/"))+"/"},initMaterials:function(d,h){for(var k=[],p=0;p<d.length;++p)k[p]=THREE.Loader.prototype.createMaterial(d[p],h);return k},needsTangents:function(d){for(var h=0,k=d.length;h<k;h++)if(d[h]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(d,h){function k(d){d=Math.log(d)/Math.LN2;return Math.floor(d)==
d}function p(d){d=Math.log(d)/Math.LN2;return Math.pow(2,Math.round(d))}function q(d,q,w,A,B,C,L){var Q=/\.dds$/i.test(w),P=h+"/"+w;if(Q){var O=THREE.ImageUtils.loadCompressedTexture(P);d[q]=O}else O=document.createElement("canvas"),d[q]=new THREE.Texture(O);d[q].sourceFile=w;A&&(d[q].repeat.set(A[0],A[1]),1!==A[0]&&(d[q].wrapS=THREE.RepeatWrapping),1!==A[1]&&(d[q].wrapT=THREE.RepeatWrapping));B&&d[q].offset.set(B[0],B[1]);C&&(w={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==
w[C[0]]&&(d[q].wrapS=w[C[0]]),void 0!==w[C[1]]&&(d[q].wrapT=w[C[1]]));L&&(d[q].anisotropy=L);if(!Q){var R=d[q],d=new Image;d.onload=function(){if(!k(this.width)||!k(this.height)){var d=p(this.width),h=p(this.height);R.image.width=d;R.image.height=h;R.image.getContext("2d").drawImage(this,0,0,d,h)}else R.image=this;R.needsUpdate=!0};d.crossOrigin=s.crossOrigin;d.src=P}}function w(d){return(255*d[0]<<16)+(255*d[1]<<8)+255*d[2]}var s=this,A="MeshLambertMaterial",B={color:15658734,opacity:1,map:null,
lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(d.shading){var C=d.shading.toLowerCase();"phong"===C?A="MeshPhongMaterial":"basic"===C&&(A="MeshBasicMaterial")}void 0!==d.blending&&void 0!==THREE[d.blending]&&(B.blending=THREE[d.blending]);if(void 0!==d.transparent||1>d.opacity)B.transparent=d.transparent;void 0!==d.depthTest&&(B.depthTest=d.depthTest);void 0!==d.depthWrite&&(B.depthWrite=d.depthWrite);void 0!==d.visible&&(B.visible=d.visible);void 0!==d.flipSided&&(B.side=THREE.BackSide);
void 0!==d.doubleSided&&(B.side=THREE.DoubleSide);void 0!==d.wireframe&&(B.wireframe=d.wireframe);void 0!==d.vertexColors&&("face"===d.vertexColors?B.vertexColors=THREE.FaceColors:d.vertexColors&&(B.vertexColors=THREE.VertexColors));d.colorDiffuse?B.color=w(d.colorDiffuse):d.DbgColor&&(B.color=d.DbgColor);d.colorSpecular&&(B.specular=w(d.colorSpecular));d.colorAmbient&&(B.ambient=w(d.colorAmbient));d.transparency&&(B.opacity=d.transparency);d.specularCoef&&(B.shininess=d.specularCoef);d.mapDiffuse&&
h&&q(B,"map",d.mapDiffuse,d.mapDiffuseRepeat,d.mapDiffuseOffset,d.mapDiffuseWrap,d.mapDiffuseAnisotropy);d.mapLight&&h&&q(B,"lightMap",d.mapLight,d.mapLightRepeat,d.mapLightOffset,d.mapLightWrap,d.mapLightAnisotropy);d.mapBump&&h&&q(B,"bumpMap",d.mapBump,d.mapBumpRepeat,d.mapBumpOffset,d.mapBumpWrap,d.mapBumpAnisotropy);d.mapNormal&&h&&q(B,"normalMap",d.mapNormal,d.mapNormalRepeat,d.mapNormalOffset,d.mapNormalWrap,d.mapNormalAnisotropy);d.mapSpecular&&h&&q(B,"specularMap",d.mapSpecular,d.mapSpecularRepeat,
d.mapSpecularOffset,d.mapSpecularWrap,d.mapSpecularAnisotropy);d.mapBumpScale&&(B.bumpScale=d.mapBumpScale);d.mapNormal?(A=THREE.ShaderLib.normalmap,C=THREE.UniformsUtils.clone(A.uniforms),C.tNormal.value=B.normalMap,d.mapNormalFactor&&C.uNormalScale.value.set(d.mapNormalFactor,d.mapNormalFactor),B.map&&(C.tDiffuse.value=B.map,C.enableDiffuse.value=!0),B.specularMap&&(C.tSpecular.value=B.specularMap,C.enableSpecular.value=!0),B.lightMap&&(C.tAO.value=B.lightMap,C.enableAO.value=!0),C.uDiffuseColor.value.setHex(B.color),
C.uSpecularColor.value.setHex(B.specular),C.uAmbientColor.value.setHex(B.ambient),C.uShininess.value=B.shininess,void 0!==B.opacity&&(C.uOpacity.value=B.opacity),A=new THREE.ShaderMaterial({fragmentShader:A.fragmentShader,vertexShader:A.vertexShader,uniforms:C,lights:!0,fog:!0}),B.transparent&&(A.transparent=!0)):A=new THREE[A](B);void 0!==d.DbgName&&(A.name=d.DbgName);return A}};THREE.XHRLoader=function(d){this.manager=void 0!==d?d:THREE.DefaultLoadingManager};
THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(d,h,k,p){var q=this,w=new XMLHttpRequest;void 0!==h&&w.addEventListener("load",function(k){h(k.target.responseText);q.manager.itemEnd(d)},!1);void 0!==k&&w.addEventListener("progress",function(d){k(d)},!1);void 0!==p&&w.addEventListener("error",function(d){p(d)},!1);void 0!==this.crossOrigin&&(w.crossOrigin=this.crossOrigin);w.open("GET",d,!0);w.send(null);q.manager.itemStart(d)},setCrossOrigin:function(d){this.crossOrigin=d}};
THREE.ImageLoader=function(d){this.manager=void 0!==d?d:THREE.DefaultLoadingManager};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(d,h,k,p){var q=this,w=document.createElement("img");void 0!==h&&w.addEventListener("load",function(){q.manager.itemEnd(d);h(this)},!1);void 0!==k&&w.addEventListener("progress",function(d){k(d)},!1);void 0!==p&&w.addEventListener("error",function(d){p(d)},!1);void 0!==this.crossOrigin&&(w.crossOrigin=this.crossOrigin);w.src=d;q.manager.itemStart(d);return w},setCrossOrigin:function(d){this.crossOrigin=d}};
THREE.JSONLoader=function(d){THREE.Loader.call(this,d);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(d,h,k){k=k&&"string"===typeof k?k:this.extractUrlBase(d);this.onLoadStart();this.loadAjaxJSON(this,d,h,k)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(d,h,k,p,q){var w=new XMLHttpRequest,s=0;w.onreadystatechange=function(){if(w.readyState===w.DONE)if(200===w.status||0===w.status){if(w.responseText){var A=JSON.parse(w.responseText),A=d.parse(A,p);k(A.geometry,A.materials)}else console.warn("THREE.JSONLoader: ["+h+"] seems to be unreachable or file there is empty");d.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+h+"] ["+w.status+"]");else w.readyState===w.LOADING?q&&(0===s&&
(s=w.getResponseHeader("Content-Length")),q({total:s,loaded:w.responseText.length})):w.readyState===w.HEADERS_RECEIVED&&void 0!==q&&(s=w.getResponseHeader("Content-Length"))};w.open("GET",h,!0);w.withCredentials=this.withCredentials;w.send(null)};
THREE.JSONLoader.prototype.parse=function(d,h){var k=new THREE.Geometry,p=void 0!==d.scale?1/d.scale:1,q,w,s,A,B,C,D,F,H,I,M,N,L,Q,P=d.faces;H=d.vertices;var O=d.normals,R=d.colors,$=0;if(void 0!==d.uvs){for(q=0;q<d.uvs.length;q++)d.uvs[q].length&&$++;for(q=0;q<$;q++)k.faceVertexUvs[q]=[]}A=0;for(B=H.length;A<B;)C=new THREE.Vector3,C.x=H[A++]*p,C.y=H[A++]*p,C.z=H[A++]*p,k.vertices.push(C);A=0;for(B=P.length;A<B;)if(H=P[A++],I=H&1,s=H&2,q=H&8,D=H&16,M=H&32,C=H&64,H&=128,I){I=new THREE.Face3;I.a=P[A];
I.b=P[A+1];I.c=P[A+3];N=new THREE.Face3;N.a=P[A+1];N.b=P[A+2];N.c=P[A+3];A+=4;s&&(s=P[A++],I.materialIndex=s,N.materialIndex=s);s=k.faces.length;if(q)for(q=0;q<$;q++){L=d.uvs[q];k.faceVertexUvs[q][s]=[];k.faceVertexUvs[q][s+1]=[];for(w=0;4>w;w++)F=P[A++],Q=L[2*F],F=L[2*F+1],Q=new THREE.Vector2(Q,F),2!==w&&k.faceVertexUvs[q][s].push(Q),0!==w&&k.faceVertexUvs[q][s+1].push(Q)}D&&(D=3*P[A++],I.normal.set(O[D++],O[D++],O[D]),N.normal.copy(I.normal));if(M)for(q=0;4>q;q++)D=3*P[A++],M=new THREE.Vector3(O[D++],
O[D++],O[D]),2!==q&&I.vertexNormals.push(M),0!==q&&N.vertexNormals.push(M);C&&(C=P[A++],C=R[C],I.color.setHex(C),N.color.setHex(C));if(H)for(q=0;4>q;q++)C=P[A++],C=R[C],2!==q&&I.vertexColors.push(new THREE.Color(C)),0!==q&&N.vertexColors.push(new THREE.Color(C));k.faces.push(I);k.faces.push(N)}else{I=new THREE.Face3;I.a=P[A++];I.b=P[A++];I.c=P[A++];s&&(s=P[A++],I.materialIndex=s);s=k.faces.length;if(q)for(q=0;q<$;q++){L=d.uvs[q];k.faceVertexUvs[q][s]=[];for(w=0;3>w;w++)F=P[A++],Q=L[2*F],F=L[2*F+1],
Q=new THREE.Vector2(Q,F),k.faceVertexUvs[q][s].push(Q)}D&&(D=3*P[A++],I.normal.set(O[D++],O[D++],O[D]));if(M)for(q=0;3>q;q++)D=3*P[A++],M=new THREE.Vector3(O[D++],O[D++],O[D]),I.vertexNormals.push(M);C&&(C=P[A++],I.color.setHex(R[C]));if(H)for(q=0;3>q;q++)C=P[A++],I.vertexColors.push(new THREE.Color(R[C]));k.faces.push(I)}if(d.skinWeights){A=0;for(B=d.skinWeights.length;A<B;A+=2)P=d.skinWeights[A],O=d.skinWeights[A+1],k.skinWeights.push(new THREE.Vector4(P,O,0,0))}if(d.skinIndices){A=0;for(B=d.skinIndices.length;A<
B;A+=2)P=d.skinIndices[A],O=d.skinIndices[A+1],k.skinIndices.push(new THREE.Vector4(P,O,0,0))}k.bones=d.bones;k.animation=d.animation;k.animations=d.animations;if(void 0!==d.morphTargets){A=0;for(B=d.morphTargets.length;A<B;A++){k.morphTargets[A]={};k.morphTargets[A].name=d.morphTargets[A].name;k.morphTargets[A].vertices=[];R=k.morphTargets[A].vertices;$=d.morphTargets[A].vertices;P=0;for(O=$.length;P<O;P+=3)H=new THREE.Vector3,H.x=$[P]*p,H.y=$[P+1]*p,H.z=$[P+2]*p,R.push(H)}}if(void 0!==d.morphColors){A=
0;for(B=d.morphColors.length;A<B;A++){k.morphColors[A]={};k.morphColors[A].name=d.morphColors[A].name;k.morphColors[A].colors=[];O=k.morphColors[A].colors;R=d.morphColors[A].colors;p=0;for(P=R.length;p<P;p+=3)$=new THREE.Color(16755200),$.setRGB(R[p],R[p+1],R[p+2]),O.push($)}}k.computeCentroids();k.computeFaceNormals();k.computeBoundingSphere();if(void 0===d.materials)return{geometry:k};p=this.initMaterials(d.materials,h);this.needsTangents(p)&&k.computeTangents();return{geometry:k,materials:p}};
THREE.LoadingManager=function(d,h,k){var p=this,q=0,w=0;this.onLoad=d;this.onProgress=h;this.onError=k;this.itemStart=function(){w++};this.itemEnd=function(d){q++;if(void 0!==p.onProgress)p.onProgress(d,q,w);if(q===w&&void 0!==p.onLoad)p.onLoad()}};THREE.DefaultLoadingManager=new THREE.LoadingManager;THREE.BufferGeometryLoader=function(d){this.manager=void 0!==d?d:THREE.DefaultLoadingManager};
THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(d,h){var k=this,p=new THREE.XHRLoader;p.setCrossOrigin(this.crossOrigin);p.load(d,function(d){h(k.parse(JSON.parse(d)))})},setCrossOrigin:function(d){this.crossOrigin=d},parse:function(d){var h=new THREE.BufferGeometry,k=d.attributes,p=d.offsets,d=d.boundingSphere,q;for(q in k){var w=k[q];h.attributes[q]={itemSize:w.itemSize,array:new self[w.type](w.array)}}void 0!==p&&(h.offsets=JSON.parse(JSON.stringify(p)));
void 0!==d&&(h.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==d.center?d.center:[0,0,0]),d.radius));return h}};THREE.GeometryLoader=function(d){this.manager=void 0!==d?d:THREE.DefaultLoadingManager};THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(d,h){var k=this,p=new THREE.XHRLoader;p.setCrossOrigin(this.crossOrigin);p.load(d,function(d){h(k.parse(JSON.parse(d)))})},setCrossOrigin:function(d){this.crossOrigin=d},parse:function(){}};
THREE.MaterialLoader=function(d){this.manager=void 0!==d?d:THREE.DefaultLoadingManager};
THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(d,h){var k=this,p=new THREE.XHRLoader;p.setCrossOrigin(this.crossOrigin);p.load(d,function(d){h(k.parse(JSON.parse(d)))})},setCrossOrigin:function(d){this.crossOrigin=d},parse:function(d){var h=new THREE[d.type];void 0!==d.color&&h.color.setHex(d.color);void 0!==d.ambient&&h.ambient.setHex(d.ambient);void 0!==d.emissive&&h.emissive.setHex(d.emissive);void 0!==d.specular&&h.specular.setHex(d.specular);void 0!==d.shininess&&
(h.shininess=d.shininess);void 0!==d.vertexColors&&(h.vertexColors=d.vertexColors);void 0!==d.blending&&(h.blending=d.blending);void 0!==d.side&&(h.side=d.side);void 0!==d.opacity&&(h.opacity=d.opacity);void 0!==d.transparent&&(h.transparent=d.transparent);void 0!==d.wireframe&&(h.wireframe=d.wireframe);if(void 0!==d.materials)for(var k=0,p=d.materials.length;k<p;k++)h.materials.push(this.parse(d.materials[k]));return h}};THREE.ObjectLoader=function(d){this.manager=void 0!==d?d:THREE.DefaultLoadingManager};
THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(d,h){var k=this,p=new THREE.XHRLoader(k.manager);p.setCrossOrigin(this.crossOrigin);p.load(d,function(d){h(k.parse(JSON.parse(d)))})},setCrossOrigin:function(d){this.crossOrigin=d},parse:function(d){var h=this.parseGeometries(d.geometries),k=this.parseMaterials(d.materials);return this.parseObject(d.object,h,k)},parseGeometries:function(d){var h={};if(void 0!==d)for(var k=new THREE.JSONLoader,p=new THREE.BufferGeometryLoader,
q=0,w=d.length;q<w;q++){var s,A=d[q];switch(A.type){case "PlaneGeometry":s=new THREE.PlaneGeometry(A.width,A.height,A.widthSegments,A.heightSegments);break;case "CircleGeometry":s=new THREE.CircleGeometry(A.radius,A.segments);break;case "CubeGeometry":s=new THREE.CubeGeometry(A.width,A.height,A.depth,A.widthSegments,A.heightSegments,A.depthSegments);break;case "CylinderGeometry":s=new THREE.CylinderGeometry(A.radiusTop,A.radiusBottom,A.height,A.radialSegments,A.heightSegments,A.openEnded);break;case "SphereGeometry":s=
new THREE.SphereGeometry(A.radius,A.widthSegments,A.heightSegments,A.phiStart,A.phiLength,A.thetaStart,A.thetaLength);break;case "IcosahedronGeometry":s=new THREE.IcosahedronGeometry(A.radius,A.detail);break;case "TorusGeometry":s=new THREE.TorusGeometry(A.radius,A.tube,A.radialSegments,A.tubularSegments,A.arc);break;case "TorusKnotGeometry":s=new THREE.TorusKnotGeometry(A.radius,A.tube,A.radialSegments,A.tubularSegments,A.p,A.q,A.heightScale);break;case "BufferGeometry":s=p.parse(A.data);break;case "Geometry":s=
k.parse(A.data).geometry}s.uuid=A.uuid;void 0!==A.name&&(s.name=A.name);h[A.uuid]=s}return h},parseMaterials:function(d){var h={};if(void 0!==d)for(var k=new THREE.MaterialLoader,p=0,q=d.length;p<q;p++){var w=d[p],s=k.parse(w);s.uuid=w.uuid;void 0!==w.name&&(s.name=w.name);h[w.uuid]=s}return h},parseObject:function(){var d=new THREE.Matrix4;return function(h,k,p){var q;switch(h.type){case "Scene":q=new THREE.Scene;break;case "PerspectiveCamera":q=new THREE.PerspectiveCamera(h.fov,h.aspect,h.near,
h.far);break;case "OrthographicCamera":q=new THREE.OrthographicCamera(h.left,h.right,h.top,h.bottom,h.near,h.far);break;case "AmbientLight":q=new THREE.AmbientLight(h.color);break;case "DirectionalLight":q=new THREE.DirectionalLight(h.color,h.intensity);break;case "PointLight":q=new THREE.PointLight(h.color,h.intensity,h.distance);break;case "SpotLight":q=new THREE.SpotLight(h.color,h.intensity,h.distance,h.angle,h.exponent);break;case "HemisphereLight":q=new THREE.HemisphereLight(h.color,h.groundColor,
h.intensity);break;case "Mesh":q=k[h.geometry];var w=p[h.material];void 0===q&&console.error("THREE.ObjectLoader: Undefined geometry "+h.geometry);void 0===w&&console.error("THREE.ObjectLoader: Undefined material "+h.material);q=new THREE.Mesh(q,w);break;case "Sprite":w=p[h.material];void 0===w&&console.error("THREE.ObjectLoader: Undefined material "+h.material);q=new THREE.Sprite(w);break;default:q=new THREE.Object3D}q.uuid=h.uuid;void 0!==h.name&&(q.name=h.name);void 0!==h.matrix?(d.fromArray(h.matrix),
d.decompose(q.position,q.quaternion,q.scale)):(void 0!==h.position&&q.position.fromArray(h.position),void 0!==h.rotation&&q.rotation.fromArray(h.rotation),void 0!==h.scale&&q.scale.fromArray(h.scale));void 0!==h.visible&&(q.visible=h.visible);void 0!==h.userData&&(q.userData=h.userData);if(void 0!==h.children)for(var s in h.children)q.add(this.parseObject(h.children[s],k,p));return q}}()};
THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlers={};this.hierarchyHandlers={};this.addGeometryHandler("ascii",THREE.JSONLoader)};
THREE.SceneLoader.prototype={constructor:THREE.SceneLoader,load:function(d,h){var k=this,p=new THREE.XHRLoader(k.manager);p.setCrossOrigin(this.crossOrigin);p.load(d,function(p){k.parse(JSON.parse(p),h,d)})},setCrossOrigin:function(d){this.crossOrigin=d},addGeometryHandler:function(d,h){this.geometryHandlers[d]={loaderClass:h}},addHierarchyHandler:function(d,h){this.hierarchyHandlers[d]={loaderClass:h}},parse:function(d,h,k){function p(d,h){return"relativeToHTML"==h?d:H+"/"+d}function q(){w(S.scene,
X.objects)}function w(d,h){var k,q,s,B,C,D;for(D in h){var H=S.objects[D],L=h[D];if(void 0===H){if(L.type&&L.type in F.hierarchyHandlers){if(void 0===L.loading){k={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};var O={},Q;for(Q in L)Q in k||(O[Q]=L[Q]);M=S.materials[L.material];L.loading=!0;k=F.hierarchyHandlers[L.type].loaderObject;k.options?k.load(p(L.url,X.urlBaseType),A(D,d,M,L)):k.load(p(L.url,X.urlBaseType),A(D,
d,M,L),O)}}else if(void 0!==L.geometry){if(I=S.geometries[L.geometry]){H=!1;M=S.materials[L.material];H=M instanceof THREE.ShaderMaterial;q=L.position;s=L.rotation;B=L.scale;k=L.matrix;C=L.quaternion;L.material||(M=new THREE.MeshFaceMaterial(S.face_materials[L.geometry]));M instanceof THREE.MeshFaceMaterial&&0===M.materials.length&&(M=new THREE.MeshFaceMaterial(S.face_materials[L.geometry]));if(M instanceof THREE.MeshFaceMaterial)for(O=0;O<M.materials.length;O++)H=H||M.materials[O]instanceof THREE.ShaderMaterial;
H&&I.computeTangents();L.skin?H=new THREE.SkinnedMesh(I,M):L.morph?(H=new THREE.MorphAnimMesh(I,M),void 0!==L.duration&&(H.duration=L.duration),void 0!==L.time&&(H.time=L.time),void 0!==L.mirroredLoop&&(H.mirroredLoop=L.mirroredLoop),M.morphNormals&&I.computeMorphNormals()):H=new THREE.Mesh(I,M);H.name=D;k?(H.matrixAutoUpdate=!1,H.matrix.set(k[0],k[1],k[2],k[3],k[4],k[5],k[6],k[7],k[8],k[9],k[10],k[11],k[12],k[13],k[14],k[15])):(H.position.fromArray(q),C?H.quaternion.fromArray(C):H.rotation.fromArray(s),
H.scale.fromArray(B));H.visible=L.visible;H.castShadow=L.castShadow;H.receiveShadow=L.receiveShadow;d.add(H);S.objects[D]=H}}else if("AmbientLight"===L.type||"PointLight"===L.type||"DirectionalLight"===L.type||"SpotLight"===L.type||"HemisphereLight"===L.type||"AreaLight"===L.type){O=L.color;k=L.intensity;q=L.distance;s=L.position;B=L.rotation;switch(L.type){case "AmbientLight":P=new THREE.AmbientLight(O);break;case "PointLight":P=new THREE.PointLight(O,k,q);P.position.fromArray(s);break;case "DirectionalLight":P=
new THREE.DirectionalLight(O,k);P.position.fromArray(L.direction);break;case "SpotLight":P=new THREE.SpotLight(O,k,q,1);P.angle=L.angle;P.position.fromArray(s);P.target.set(s[0],s[1]-q,s[2]);P.target.applyEuler(new THREE.Euler(B[0],B[1],B[2],"XYZ"));break;case "HemisphereLight":P=new THREE.DirectionalLight(O,k,q);P.target.set(s[0],s[1]-q,s[2]);P.target.applyEuler(new THREE.Euler(B[0],B[1],B[2],"XYZ"));break;case "AreaLight":P=new THREE.AreaLight(O,k),P.position.fromArray(s),P.width=L.size,P.height=
L.size_y}d.add(P);P.name=D;S.lights[D]=P;S.objects[D]=P}else"PerspectiveCamera"===L.type||"OrthographicCamera"===L.type?(q=L.position,s=L.rotation,C=L.quaternion,"PerspectiveCamera"===L.type?N=new THREE.PerspectiveCamera(L.fov,L.aspect,L.near,L.far):"OrthographicCamera"===L.type&&(N=new THREE.OrthographicCamera(L.left,L.right,L.top,L.bottom,L.near,L.far)),N.name=D,N.position.fromArray(q),void 0!==C?N.quaternion.fromArray(C):void 0!==s&&N.rotation.fromArray(s),d.add(N),S.cameras[D]=N,S.objects[D]=
N):(q=L.position,s=L.rotation,B=L.scale,C=L.quaternion,H=new THREE.Object3D,H.name=D,H.position.fromArray(q),C?H.quaternion.fromArray(C):H.rotation.fromArray(s),H.scale.fromArray(B),H.visible=void 0!==L.visible?L.visible:!1,d.add(H),S.objects[D]=H,S.empties[D]=H);if(H){if(void 0!==L.userData)for(var R in L.userData)H.userData[R]=L.userData[R];if(void 0!==L.groups)for(O=0;O<L.groups.length;O++)k=L.groups[O],void 0===S.groups[k]&&(S.groups[k]=[]),S.groups[k].push(D)}}void 0!==H&&void 0!==L.children&&
w(H,L.children)}}function s(d){return function(h,k){h.name=d;S.geometries[d]=h;S.face_materials[d]=k;q();O-=1;F.onLoadComplete();C()}}function A(d,h,k,p){return function(s){var s=s.content?s.content:s.dae?s.scene:s,w=p.rotation,A=p.quaternion,B=p.scale;s.position.fromArray(p.position);A?s.quaternion.fromArray(A):s.rotation.fromArray(w);s.scale.fromArray(B);k&&s.traverse(function(d){d.material=k});var D=void 0!==p.visible?p.visible:!0;s.traverse(function(d){d.visible=D});h.add(s);s.name=d;S.objects[d]=
s;q();O-=1;F.onLoadComplete();C()}}function B(d){return function(h,k){h.name=d;S.geometries[d]=h;S.face_materials[d]=k}}function C(){F.callbackProgress({totalModels:$,totalTextures:T,loadedModels:$-O,loadedTextures:T-R},S);F.onLoadProgress();if(0===O&&0===R){for(var d=0;d<Y.length;d++){var k=Y[d],p=S.objects[k.targetName];p?k.object.target=p:(k.object.target=new THREE.Object3D,S.scene.add(k.object.target));k.object.target.userData.targetInverse=k.object}h(S)}}function D(d,h){h(d);if(void 0!==d.children)for(var k in d.children)D(d.children[k],
h)}var F=this,H=THREE.Loader.prototype.extractUrlBase(k),I,M,N,L,Q,P,O,R,$,T,S,Y=[],X=d,ea;for(ea in this.geometryHandlers)d=this.geometryHandlers[ea].loaderClass,this.geometryHandlers[ea].loaderObject=new d;for(ea in this.hierarchyHandlers)d=this.hierarchyHandlers[ea].loaderClass,this.hierarchyHandlers[ea].loaderObject=new d;R=O=0;S={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(X.transform&&(ea=X.transform.position,
d=X.transform.rotation,k=X.transform.scale,ea&&S.scene.position.fromArray(ea),d&&S.scene.rotation.fromArray(d),k&&S.scene.scale.fromArray(k),ea||d||k))S.scene.updateMatrix(),S.scene.updateMatrixWorld();ea=function(d){return function(){R-=d;C();F.onLoadComplete()}};for(var aa in X.fogs)d=X.fogs[aa],"linear"===d.type?L=new THREE.Fog(0,d.near,d.far):"exp2"===d.type&&(L=new THREE.FogExp2(0,d.density)),d=d.color,L.color.setRGB(d[0],d[1],d[2]),S.fogs[aa]=L;for(var Z in X.geometries)L=X.geometries[Z],L.type in
this.geometryHandlers&&(O+=1,F.onLoadStart());for(var U in X.objects)D(X.objects[U],function(d){d.type&&d.type in F.hierarchyHandlers&&(O+=1,F.onLoadStart())});$=O;for(Z in X.geometries)if(L=X.geometries[Z],"cube"===L.type)I=new THREE.CubeGeometry(L.width,L.height,L.depth,L.widthSegments,L.heightSegments,L.depthSegments),I.name=Z,S.geometries[Z]=I;else if("plane"===L.type)I=new THREE.PlaneGeometry(L.width,L.height,L.widthSegments,L.heightSegments),I.name=Z,S.geometries[Z]=I;else if("sphere"===L.type)I=
new THREE.SphereGeometry(L.radius,L.widthSegments,L.heightSegments),I.name=Z,S.geometries[Z]=I;else if("cylinder"===L.type)I=new THREE.CylinderGeometry(L.topRad,L.botRad,L.height,L.radSegs,L.heightSegs),I.name=Z,S.geometries[Z]=I;else if("torus"===L.type)I=new THREE.TorusGeometry(L.radius,L.tube,L.segmentsR,L.segmentsT),I.name=Z,S.geometries[Z]=I;else if("icosahedron"===L.type)I=new THREE.IcosahedronGeometry(L.radius,L.subdivisions),I.name=Z,S.geometries[Z]=I;else if(L.type in this.geometryHandlers){U=
{};for(Q in L)"type"!==Q&&"url"!==Q&&(U[Q]=L[Q]);this.geometryHandlers[L.type].loaderObject.load(p(L.url,X.urlBaseType),s(Z),U)}else"embedded"===L.type&&(U=X.embeds[L.id],U.metadata=X.metadata,U&&(U=this.geometryHandlers.ascii.loaderObject.parse(U,""),B(Z)(U.geometry,U.materials)));for(var V in X.textures)if(Z=X.textures[V],Z.url instanceof Array){R+=Z.url.length;for(Q=0;Q<Z.url.length;Q++)F.onLoadStart()}else R+=1,F.onLoadStart();T=R;for(V in X.textures){Z=X.textures[V];void 0!==Z.mapping&&void 0!==
THREE[Z.mapping]&&(Z.mapping=new THREE[Z.mapping]);if(Z.url instanceof Array){U=Z.url.length;L=[];for(Q=0;Q<U;Q++)L[Q]=p(Z.url[Q],X.urlBaseType);Q=(Q=/\.dds$/i.test(L[0]))?THREE.ImageUtils.loadCompressedTextureCube(L,Z.mapping,ea(U)):THREE.ImageUtils.loadTextureCube(L,Z.mapping,ea(U))}else Q=/\.dds$/i.test(Z.url),U=p(Z.url,X.urlBaseType),L=ea(1),Q=Q?THREE.ImageUtils.loadCompressedTexture(U,Z.mapping,L):THREE.ImageUtils.loadTexture(U,Z.mapping,L),void 0!==THREE[Z.minFilter]&&(Q.minFilter=THREE[Z.minFilter]),
void 0!==THREE[Z.magFilter]&&(Q.magFilter=THREE[Z.magFilter]),Z.anisotropy&&(Q.anisotropy=Z.anisotropy),Z.repeat&&(Q.repeat.set(Z.repeat[0],Z.repeat[1]),1!==Z.repeat[0]&&(Q.wrapS=THREE.RepeatWrapping),1!==Z.repeat[1]&&(Q.wrapT=THREE.RepeatWrapping)),Z.offset&&Q.offset.set(Z.offset[0],Z.offset[1]),Z.wrap&&(U={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==U[Z.wrap[0]]&&(Q.wrapS=U[Z.wrap[0]]),void 0!==U[Z.wrap[1]]&&(Q.wrapT=U[Z.wrap[1]]));S.textures[V]=Q}var ga,ca;for(ga in X.materials){V=
X.materials[ga];for(ca in V.parameters)"envMap"===ca||"map"===ca||"lightMap"===ca||"bumpMap"===ca?V.parameters[ca]=S.textures[V.parameters[ca]]:"shading"===ca?V.parameters[ca]="flat"===V.parameters[ca]?THREE.FlatShading:THREE.SmoothShading:"side"===ca?V.parameters[ca]="double"==V.parameters[ca]?THREE.DoubleSide:"back"==V.parameters[ca]?THREE.BackSide:THREE.FrontSide:"blending"===ca?V.parameters[ca]=V.parameters[ca]in THREE?THREE[V.parameters[ca]]:THREE.NormalBlending:"combine"===ca?V.parameters[ca]=
V.parameters[ca]in THREE?THREE[V.parameters[ca]]:THREE.MultiplyOperation:"vertexColors"===ca?"face"==V.parameters[ca]?V.parameters[ca]=THREE.FaceColors:V.parameters[ca]&&(V.parameters[ca]=THREE.VertexColors):"wrapRGB"===ca&&(ea=V.parameters[ca],V.parameters[ca]=new THREE.Vector3(ea[0],ea[1],ea[2]));void 0!==V.parameters.opacity&&1>V.parameters.opacity&&(V.parameters.transparent=!0);V.parameters.normalMap?(ea=THREE.ShaderLib.normalmap,Z=THREE.UniformsUtils.clone(ea.uniforms),Q=V.parameters.color,U=
V.parameters.specular,L=V.parameters.ambient,aa=V.parameters.shininess,Z.tNormal.value=S.textures[V.parameters.normalMap],V.parameters.normalScale&&Z.uNormalScale.value.set(V.parameters.normalScale[0],V.parameters.normalScale[1]),V.parameters.map&&(Z.tDiffuse.value=V.parameters.map,Z.enableDiffuse.value=!0),V.parameters.envMap&&(Z.tCube.value=V.parameters.envMap,Z.enableReflection.value=!0,Z.uReflectivity.value=V.parameters.reflectivity),V.parameters.lightMap&&(Z.tAO.value=V.parameters.lightMap,Z.enableAO.value=
!0),V.parameters.specularMap&&(Z.tSpecular.value=S.textures[V.parameters.specularMap],Z.enableSpecular.value=!0),V.parameters.displacementMap&&(Z.tDisplacement.value=S.textures[V.parameters.displacementMap],Z.enableDisplacement.value=!0,Z.uDisplacementBias.value=V.parameters.displacementBias,Z.uDisplacementScale.value=V.parameters.displacementScale),Z.uDiffuseColor.value.setHex(Q),Z.uSpecularColor.value.setHex(U),Z.uAmbientColor.value.setHex(L),Z.uShininess.value=aa,V.parameters.opacity&&(Z.uOpacity.value=
V.parameters.opacity),M=new THREE.ShaderMaterial({fragmentShader:ea.fragmentShader,vertexShader:ea.vertexShader,uniforms:Z,lights:!0,fog:!0})):M=new THREE[V.type](V.parameters);M.name=ga;S.materials[ga]=M}for(ga in X.materials)if(V=X.materials[ga],V.parameters.materials){ca=[];for(Q=0;Q<V.parameters.materials.length;Q++)ca.push(S.materials[V.parameters.materials[Q]]);S.materials[ga].materials=ca}q();S.cameras&&X.defaults.camera&&(S.currentCamera=S.cameras[X.defaults.camera]);S.fogs&&X.defaults.fog&&
(S.scene.fog=S.fogs[X.defaults.fog]);F.callbackSync(S);C()}};THREE.TextureLoader=function(d){this.manager=void 0!==d?d:THREE.DefaultLoadingManager};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(d,h){var k=new THREE.ImageLoader(this.manager);k.setCrossOrigin(this.crossOrigin);k.load(d,function(d){d=new THREE.Texture(d);d.needsUpdate=!0;void 0!==h&&h(d)})},setCrossOrigin:function(d){this.crossOrigin=d}};
THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.overdraw=this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.needsUpdate=this.visible=!0};
THREE.Material.prototype={constructor:THREE.Material,setValues:function(d){if(void 0!==d)for(var h in d){var k=d[h];if(void 0===k)console.warn("THREE.Material: '"+h+"' parameter is undefined.");else if(h in this){var p=this[h];p instanceof THREE.Color?p.set(k):p instanceof THREE.Vector3&&k instanceof THREE.Vector3?p.copy(k):this[h]="overdraw"==h?Number(k):k}}},clone:function(d){void 0===d&&(d=new THREE.Material);d.name=this.name;d.side=this.side;d.opacity=this.opacity;d.transparent=this.transparent;
d.blending=this.blending;d.blendSrc=this.blendSrc;d.blendDst=this.blendDst;d.blendEquation=this.blendEquation;d.depthTest=this.depthTest;d.depthWrite=this.depthWrite;d.polygonOffset=this.polygonOffset;d.polygonOffsetFactor=this.polygonOffsetFactor;d.polygonOffsetUnits=this.polygonOffsetUnits;d.alphaTest=this.alphaTest;d.overdraw=this.overdraw;d.visible=this.visible;return d},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Material.prototype);
THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(d){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(d)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var d=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,d);d.color.copy(this.color);d.linewidth=this.linewidth;d.linecap=this.linecap;d.linejoin=this.linejoin;d.vertexColors=this.vertexColors;d.fog=this.fog;return d};THREE.LineDashedMaterial=function(d){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(d)};
THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var d=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,d);d.color.copy(this.color);d.linewidth=this.linewidth;d.scale=this.scale;d.dashSize=this.dashSize;d.gapSize=this.gapSize;d.vertexColors=this.vertexColors;d.fog=this.fog;return d};
THREE.MeshBasicMaterial=function(d){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(d)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var d=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,d);d.color.copy(this.color);d.map=this.map;d.lightMap=this.lightMap;d.specularMap=this.specularMap;d.envMap=this.envMap;d.combine=this.combine;d.reflectivity=this.reflectivity;d.refractionRatio=this.refractionRatio;d.fog=this.fog;d.shading=this.shading;d.wireframe=this.wireframe;d.wireframeLinewidth=this.wireframeLinewidth;d.wireframeLinecap=this.wireframeLinecap;d.wireframeLinejoin=
this.wireframeLinejoin;d.vertexColors=this.vertexColors;d.skinning=this.skinning;d.morphTargets=this.morphTargets;return d};
THREE.MeshLambertMaterial=function(d){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(d)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var d=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,d);d.color.copy(this.color);d.ambient.copy(this.ambient);d.emissive.copy(this.emissive);d.wrapAround=this.wrapAround;d.wrapRGB.copy(this.wrapRGB);d.map=this.map;d.lightMap=this.lightMap;d.specularMap=this.specularMap;d.envMap=this.envMap;d.combine=this.combine;d.reflectivity=this.reflectivity;d.refractionRatio=this.refractionRatio;d.fog=this.fog;d.shading=this.shading;
d.wireframe=this.wireframe;d.wireframeLinewidth=this.wireframeLinewidth;d.wireframeLinecap=this.wireframeLinecap;d.wireframeLinejoin=this.wireframeLinejoin;d.vertexColors=this.vertexColors;d.skinning=this.skinning;d.morphTargets=this.morphTargets;d.morphNormals=this.morphNormals;return d};
THREE.MeshPhongMaterial=function(d){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(d)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var d=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,d);d.color.copy(this.color);d.ambient.copy(this.ambient);d.emissive.copy(this.emissive);d.specular.copy(this.specular);d.shininess=this.shininess;d.metal=this.metal;d.perPixel=this.perPixel;d.wrapAround=this.wrapAround;d.wrapRGB.copy(this.wrapRGB);d.map=this.map;d.lightMap=this.lightMap;d.bumpMap=this.bumpMap;d.bumpScale=this.bumpScale;d.normalMap=this.normalMap;d.normalScale.copy(this.normalScale);
d.specularMap=this.specularMap;d.envMap=this.envMap;d.combine=this.combine;d.reflectivity=this.reflectivity;d.refractionRatio=this.refractionRatio;d.fog=this.fog;d.shading=this.shading;d.wireframe=this.wireframe;d.wireframeLinewidth=this.wireframeLinewidth;d.wireframeLinecap=this.wireframeLinecap;d.wireframeLinejoin=this.wireframeLinejoin;d.vertexColors=this.vertexColors;d.skinning=this.skinning;d.morphTargets=this.morphTargets;d.morphNormals=this.morphNormals;return d};
THREE.MeshDepthMaterial=function(d){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(d)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var d=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,d);d.wireframe=this.wireframe;d.wireframeLinewidth=this.wireframeLinewidth;return d};
THREE.MeshNormalMaterial=function(d){THREE.Material.call(this,d);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(d)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var d=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,d);d.shading=this.shading;d.wireframe=this.wireframe;d.wireframeLinewidth=this.wireframeLinewidth;return d};
THREE.MeshFaceMaterial=function(d){this.materials=d instanceof Array?d:[]};THREE.MeshFaceMaterial.prototype.clone=function(){for(var d=new THREE.MeshFaceMaterial,h=0;h<this.materials.length;h++)d.materials.push(this.materials[h].clone());return d};THREE.ParticleSystemMaterial=function(d){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(d)};THREE.ParticleSystemMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleSystemMaterial.prototype.clone=function(){var d=new THREE.ParticleSystemMaterial;THREE.Material.prototype.clone.call(this,d);d.color.copy(this.color);d.map=this.map;d.size=this.size;d.sizeAttenuation=this.sizeAttenuation;d.vertexColors=this.vertexColors;d.fog=this.fog;return d};THREE.ParticleBasicMaterial=THREE.ParticleSystemMaterial;
THREE.ShaderMaterial=function(d){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]};this.index0AttributeName="position";this.setValues(d)};
THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var d=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,d);d.fragmentShader=this.fragmentShader;d.vertexShader=this.vertexShader;d.uniforms=THREE.UniformsUtils.clone(this.uniforms);d.attributes=this.attributes;d.defines=this.defines;d.shading=this.shading;d.wireframe=this.wireframe;d.wireframeLinewidth=this.wireframeLinewidth;d.fog=this.fog;d.lights=this.lights;d.vertexColors=this.vertexColors;d.skinning=this.skinning;d.morphTargets=
this.morphTargets;d.morphNormals=this.morphNormals;return d};THREE.SpriteMaterial=function(d){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.sizeAttenuation=this.depthTest=!0;this.rotation=0;this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(d)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteMaterial.prototype.clone=function(){var d=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,d);d.color.copy(this.color);d.map=this.map;d.rotation=this.rotation;d.uvOffset.copy(this.uvOffset);d.uvScale.copy(this.uvScale);d.fog=this.fog;return d};THREE.SpriteCanvasMaterial=function(d){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(d)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteCanvasMaterial.prototype.clone=function(){var d=new THREE.SpriteCanvasMaterial;THREE.Material.prototype.clone.call(this,d);d.color.copy(this.color);d.program=this.program;return d};THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial;
THREE.Texture=function(d,h,k,p,q,w,s,A,B){this.id=THREE.TextureIdCount++;this.uuid=THREE.Math.generateUUID();this.name="";this.image=d;this.mipmaps=[];this.mapping=void 0!==h?h:new THREE.UVMapping;this.wrapS=void 0!==k?k:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==p?p:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==q?q:THREE.LinearFilter;this.minFilter=void 0!==w?w:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==B?B:1;this.format=void 0!==s?s:THREE.RGBAFormat;this.type=void 0!==A?A:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(d){void 0===d&&(d=new THREE.Texture);d.image=this.image;d.mipmaps=this.mipmaps.slice(0);d.mapping=this.mapping;d.wrapS=this.wrapS;d.wrapT=this.wrapT;d.magFilter=this.magFilter;d.minFilter=this.minFilter;d.anisotropy=this.anisotropy;d.format=this.format;d.type=this.type;d.offset.copy(this.offset);d.repeat.copy(this.repeat);d.generateMipmaps=this.generateMipmaps;d.premultiplyAlpha=this.premultiplyAlpha;d.flipY=this.flipY;d.unpackAlignment=
this.unpackAlignment;return d},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype);THREE.TextureIdCount=0;THREE.CompressedTexture=function(d,h,k,p,q,w,s,A,B,C,D){THREE.Texture.call(this,null,w,s,A,B,C,p,q,D);this.image={width:h,height:k};this.mipmaps=d;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var d=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,d);return d};THREE.DataTexture=function(d,h,k,p,q,w,s,A,B,C,D){THREE.Texture.call(this,null,w,s,A,B,C,p,q,D);this.image={data:d,width:h,height:k}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var d=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,d);return d};
THREE.ParticleSystem=function(d,h){THREE.Object3D.call(this);this.geometry=void 0!==d?d:new THREE.Geometry;this.material=void 0!==h?h:new THREE.ParticleSystemMaterial({color:16777215*Math.random()});this.frustumCulled=this.sortParticles=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem.prototype.clone=function(d){void 0===d&&(d=new THREE.ParticleSystem(this.geometry,this.material));d.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,d);return d};THREE.Line=function(d,h,k){THREE.Object3D.call(this);this.geometry=void 0!==d?d:new THREE.Geometry;this.material=void 0!==h?h:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==k?k:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(d){void 0===d&&(d=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,d);return d};THREE.Mesh=function(d,h){THREE.Object3D.call(this);this.geometry=void 0!==d?d:new THREE.Geometry;this.material=void 0!==h?h:new THREE.MeshBasicMaterial({color:16777215*Math.random()});this.updateMorphTargets()};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var d=0,h=this.geometry.morphTargets.length;d<h;d++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[d].name]=d}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(d){if(void 0!==this.morphTargetDictionary[d])return this.morphTargetDictionary[d];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+d+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(d){void 0===d&&(d=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,d);return d};THREE.Bone=function(d){THREE.Object3D.call(this);this.skin=d;this.skinMatrix=new THREE.Matrix4};
THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(d,h){this.matrixAutoUpdate&&(h|=this.updateMatrix());if(h||this.matrixWorldNeedsUpdate)d?this.skinMatrix.multiplyMatrices(d,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,h=!0;var k,p=this.children.length;for(k=0;k<p;k++)this.children[k].update(this.skinMatrix,h)};
THREE.SkinnedMesh=function(d,h,k){THREE.Mesh.call(this,d,h);this.useVertexTexture=void 0!==k?k:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var p,q,w;if(this.geometry&&void 0!==this.geometry.bones){for(d=0;d<this.geometry.bones.length;d++)k=this.geometry.bones[d],p=k.pos,q=k.rotq,w=k.scl,h=this.addBone(),h.name=k.name,h.position.set(p[0],p[1],p[2]),h.quaternion.set(q[0],q[1],q[2],q[3]),void 0!==w?h.scale.set(w[0],w[1],w[2]):h.scale.set(1,1,1);for(d=0;d<this.bones.length;d++)k=
this.geometry.bones[d],h=this.bones[d],-1===k.parent?this.add(h):this.bones[k.parent].add(h);d=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=d=256<d?64:64<d?32:16<d?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*d);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(d){void 0===d&&(d=new THREE.Bone(this));this.bones.push(d);return d};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(){var d=new THREE.Matrix4;return function(h){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||h)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var h=0,k=this.children.length;h<k;h++){var p=this.children[h];p instanceof THREE.Bone?p.update(this.identityMatrix,!1):p.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=
[];h=0;for(k=this.bones.length;h<k;h++)p=new THREE.Matrix4,p.getInverse(this.bones[h].skinMatrix),this.boneInverses.push(p)}h=0;for(k=this.bones.length;h<k;h++)d.multiplyMatrices(this.bones[h].skinMatrix,this.boneInverses[h]),d.flattenToArrayOffset(this.boneMatrices,16*h);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}();THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);this.normalizeSkinWeights()};
THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var d=0;d<this.geometry.skinIndices.length;d++){var h=this.geometry.skinWeights[d],k=1/h.lengthManhattan();Infinity!==k?h.multiplyScalar(k):h.set(1)}};THREE.SkinnedMesh.prototype.clone=function(d){void 0===d&&(d=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,d);return d};
THREE.MorphAnimMesh=function(d,h){THREE.Mesh.call(this,d,h);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(d,h){this.startKeyframe=d;this.endKeyframe=h;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var d=this.geometry;d.animations||(d.animations={});for(var h,k=d.animations,p=/([a-z]+)(\d+)/,q=0,w=d.morphTargets.length;q<w;q++){var s=d.morphTargets[q].name.match(p);if(s&&1<s.length){s=s[1];k[s]||(k[s]={start:Infinity,end:-Infinity});var A=k[s];q<A.start&&(A.start=q);q>A.end&&(A.end=q);h||(h=s)}}d.firstAnimation=h};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(d,h,k){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[d]={start:h,end:k}};THREE.MorphAnimMesh.prototype.playAnimation=function(d,h){var k=this.geometry.animations[d];k?(this.setFrameRange(k.start,k.end),this.duration=1E3*((k.end-k.start)/h),this.time=0):console.warn("animation["+d+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(d){var h=this.duration/this.length;this.time+=this.direction*d;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);d=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/h),0,this.length-1);d!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[d]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=d);h=this.time%h/h;this.directionBackwards&&(h=1-h);this.morphTargetInfluences[this.currentKeyframe]=h;this.morphTargetInfluences[this.lastKeyframe]=1-h};
THREE.MorphAnimMesh.prototype.clone=function(d){void 0===d&&(d=new THREE.MorphAnimMesh(this.geometry,this.material));d.duration=this.duration;d.mirroredLoop=this.mirroredLoop;d.time=this.time;d.lastKeyframe=this.lastKeyframe;d.currentKeyframe=this.currentKeyframe;d.direction=this.direction;d.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,d);return d};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);
THREE.LOD.prototype.addLevel=function(d,h){void 0===h&&(h=0);for(var h=Math.abs(h),k=0;k<this.objects.length&&!(h<this.objects[k].distance);k++);this.objects.splice(k,0,{distance:h,object:d});this.add(d)};THREE.LOD.prototype.getObjectForDistance=function(d){for(var h=1,k=this.objects.length;h<k&&!(d<this.objects[h].distance);h++);return this.objects[h-1].object};
THREE.LOD.prototype.update=function(){var d=new THREE.Vector3,h=new THREE.Vector3;return function(k){if(1<this.objects.length){d.getPositionFromMatrix(k.matrixWorld);h.getPositionFromMatrix(this.matrixWorld);k=d.distanceTo(h);this.objects[0].object.visible=!0;for(var p=1,q=this.objects.length;p<q;p++)if(k>=this.objects[p].distance)this.objects[p-1].object.visible=!1,this.objects[p].object.visible=!0;else break;for(;p<q;p++)this.objects[p].object.visible=!1}}}();THREE.LOD.prototype.clone=function(){};
THREE.Sprite=function(d){THREE.Object3D.call(this);this.material=void 0!==d?d:new THREE.SpriteMaterial};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(d){void 0===d&&(d=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,d);return d};THREE.Particle=THREE.Sprite;
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(d){if(d instanceof THREE.Light)-1===this.__lights.indexOf(d)&&this.__lights.push(d),d.target&&void 0===d.target.parent&&this.add(d.target);else if(!(d instanceof THREE.Camera||d instanceof THREE.Bone)){this.__objectsAdded.push(d);var h=this.__objectsRemoved.indexOf(d);-1!==h&&this.__objectsRemoved.splice(h,1)}for(h=0;h<d.children.length;h++)this.__addObject(d.children[h])};
THREE.Scene.prototype.__removeObject=function(d){if(d instanceof THREE.Light){var h=this.__lights.indexOf(d);-1!==h&&this.__lights.splice(h,1);if(d.shadowCascadeArray)for(h=0;h<d.shadowCascadeArray.length;h++)this.__removeObject(d.shadowCascadeArray[h])}else d instanceof THREE.Camera||(this.__objectsRemoved.push(d),h=this.__objectsAdded.indexOf(d),-1!==h&&this.__objectsAdded.splice(h,1));for(h=0;h<d.children.length;h++)this.__removeObject(d.children[h])};
THREE.Scene.prototype.clone=function(d){void 0===d&&(d=new THREE.Scene);THREE.Object3D.prototype.clone.call(this,d);null!==this.fog&&(d.fog=this.fog.clone());null!==this.overrideMaterial&&(d.overrideMaterial=this.overrideMaterial.clone());d.autoUpdate=this.autoUpdate;d.matrixAutoUpdate=this.matrixAutoUpdate;return d};THREE.Fog=function(d,h,k){this.name="";this.color=new THREE.Color(d);this.near=void 0!==h?h:1;this.far=void 0!==k?k:1E3};
THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(d,h){this.name="";this.color=new THREE.Color(d);this.density=void 0!==h?h:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};
THREE.CanvasRenderer=function(d){function h(d,h,k){for(var p=0,q=R.length;p<q;p++){var s=R[p];xb.copy(s.color);if(s instanceof THREE.DirectionalLight){var w=lb.getPositionFromMatrix(s.matrixWorld).normalize(),A=h.dot(w);0>=A||(A*=s.intensity,k.add(xb.multiplyScalar(A)))}else s instanceof THREE.PointLight&&(w=lb.getPositionFromMatrix(s.matrixWorld),A=h.dot(lb.subVectors(w,d).normalize()),0>=A||(A*=0==s.distance?1:1-Math.min(d.distanceTo(w)/s.distance,1),0!=A&&(A*=s.intensity,k.add(xb.multiplyScalar(A)))))}}
function k(d,h,k,p){D(h);F(k);H(p);I(d.getStyle());aa.stroke();vb.expandByScalar(2*h)}function p(d){M(d.getStyle());aa.fill()}function q(d,h,k,q,s,w,A,B,C,D,E,F,H){if(!(H instanceof THREE.DataTexture||void 0===H.image||0===H.image.width)){if(!0===H.needsUpdate){var I=H.wrapS===THREE.RepeatWrapping,L=H.wrapT===THREE.RepeatWrapping;ub[H.id]=aa.createPattern(H.image,!0===I&&!0===L?"repeat":!0===I&&!1===L?"repeat-x":!1===I&&!0===L?"repeat-y":"no-repeat");H.needsUpdate=!1}void 0===ub[H.id]?M("rgba(0,0,0,1)"):
M(ub[H.id]);var I=H.offset.x/H.repeat.x,L=H.offset.y/H.repeat.y,N=H.image.width*H.repeat.x,O=H.image.height*H.repeat.y,A=(A+I)*N,B=(1-B+L)*O,k=k-d,q=q-h,s=s-d,w=w-h,C=(C+I)*N-A,D=(1-D+L)*O-B,E=(E+I)*N-A,F=(1-F+L)*O-B,I=C*F-E*D;0===I?(void 0===eb[H.id]&&(h=document.createElement("canvas"),h.width=H.image.width,h.height=H.image.height,h=h.getContext("2d"),h.drawImage(H.image,0,0),eb[H.id]=h.getImageData(0,0,H.image.width,H.image.height).data),h=eb[H.id],A=4*(Math.floor(A)+Math.floor(B)*H.image.width),
Ra.setRGB(h[A]/255,h[A+1]/255,h[A+2]/255),p(Ra)):(I=1/I,H=(F*k-D*s)*I,D=(F*q-D*w)*I,k=(C*s-E*k)*I,q=(C*w-E*q)*I,d=d-H*A-k*B,A=h-D*A-q*B,aa.save(),aa.transform(H,D,k,q,d,A),aa.fill(),aa.restore())}}function w(d,h,k,p,q,s,w,A,B,C,D,E,H){var F,I;F=H.width-1;I=H.height-1;w*=F;A*=I;k-=d;p-=h;q-=d;s-=h;B=B*F-w;C=C*I-A;D=D*F-w;E=E*I-A;I=1/(B*E-D*C);F=(E*k-C*q)*I;C=(E*p-C*s)*I;k=(B*q-D*k)*I;p=(B*s-D*p)*I;d=d-F*w-k*A;h=h-C*w-p*A;aa.save();aa.transform(F,C,k,p,d,h);aa.clip();aa.drawImage(H,0,0);aa.restore()}
function s(d,h,k,p){mb[0]=255*d.r|0;mb[1]=255*d.g|0;mb[2]=255*d.b|0;mb[4]=255*h.r|0;mb[5]=255*h.g|0;mb[6]=255*h.b|0;mb[8]=255*k.r|0;mb[9]=255*k.g|0;mb[10]=255*k.b|0;mb[12]=255*p.r|0;mb[13]=255*p.g|0;mb[14]=255*p.b|0;E.putImageData(Fb,0,0);wb.drawImage(Gb,0,0);return yb}function A(d,h,k){var p=h.x-d.x,q=h.y-d.y,s=p*p+q*q;0!==s&&(k/=Math.sqrt(s),p*=k,q*=k,h.x+=p,h.y+=q,d.x-=p,d.y-=q)}function B(d){V!==d&&(V=aa.globalAlpha=d)}function C(d){ga!==d&&(d===THREE.NormalBlending?aa.globalCompositeOperation=
"source-over":d===THREE.AdditiveBlending?aa.globalCompositeOperation="lighter":d===THREE.SubtractiveBlending&&(aa.globalCompositeOperation="darker"),ga=d)}function D(d){Ma!==d&&(Ma=aa.lineWidth=d)}function F(d){ja!==d&&(ja=aa.lineCap=d)}function H(d){La!==d&&(La=aa.lineJoin=d)}function I(d){ca!==d&&(ca=aa.strokeStyle=d)}function M(d){ia!==d&&(ia=aa.fillStyle=d)}function N(d,h){if(Va!==d||ba!==h)aa.setLineDash([d,h]),Va=d,ba=h}console.log("THREE.CanvasRenderer",THREE.REVISION);var L=THREE.Math.smoothstep,
d=d||{},Q=this,P,O,R,$=new THREE.Projector,T=void 0!==d.canvas?d.canvas:document.createElement("canvas"),S=T.width,Y=T.height,X=Math.floor(S/2),ea=Math.floor(Y/2),aa=T.getContext("2d"),Z=new THREE.Color(0),U=0,V=1,ga=0,ca=null,ia=null,Ma=null,ja=null,La=null,Va=null,ba=0,ra,oa,ka,Ua;new THREE.RenderableVertex;new THREE.RenderableVertex;var rb,sb,Xa,qb,Sa,Ya,Ra=new THREE.Color,Na=new THREE.Color,ya=new THREE.Color,Qa=new THREE.Color,db=new THREE.Color,kb=new THREE.Color,bb=new THREE.Color,xb=new THREE.Color,
ub={},eb={},nb,Lb,Hb,Mb,Ub,Vb,Cb,Yb,nc,kc,Db=new THREE.Box2,fb=new THREE.Box2,vb=new THREE.Box2,Zb=new THREE.Color,jb=new THREE.Color,Za=new THREE.Color,lb=new THREE.Vector3,Gb,E,Fb,mb,yb,wb,Ib=16;Gb=document.createElement("canvas");Gb.width=Gb.height=2;E=Gb.getContext("2d");E.fillStyle="rgba(0,0,0,1)";E.fillRect(0,0,2,2);Fb=E.getImageData(0,0,2,2);mb=Fb.data;yb=document.createElement("canvas");yb.width=yb.height=Ib;wb=yb.getContext("2d");wb.translate(-Ib/2,-Ib/2);wb.scale(Ib,Ib);Ib--;void 0===aa.setLineDash&&
(aa.setLineDash=void 0!==aa.mozDash?function(d){aa.mozDash=null!==d[0]?d:null}:function(){});this.domElement=T;this.devicePixelRatio=void 0!==d.devicePixelRatio?d.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(d,h,k){S=d*this.devicePixelRatio;Y=h*this.devicePixelRatio;X=Math.floor(S/2);
ea=Math.floor(Y/2);T.width=S;T.height=Y;1!==this.devicePixelRatio&&!1!==k&&(T.style.width=d+"px",T.style.height=h+"px");Db.set(new THREE.Vector2(-X,-ea),new THREE.Vector2(X,ea));fb.set(new THREE.Vector2(-X,-ea),new THREE.Vector2(X,ea));V=1;ga=0;La=ja=Ma=ia=ca=null};this.setClearColor=function(d,h){Z.set(d);U=void 0!==h?h:1;fb.set(new THREE.Vector2(-X,-ea),new THREE.Vector2(X,ea))};this.setClearColorHex=function(d,h){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");
this.setClearColor(d,h)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){aa.setTransform(1,0,0,-1,X,ea);!1===fb.empty()&&(fb.intersect(Db),fb.expandByScalar(2),1>U&&aa.clearRect(fb.min.x|0,fb.min.y|0,fb.max.x-fb.min.x|0,fb.max.y-fb.min.y|0),0<U&&(C(THREE.NormalBlending),B(1),M("rgba("+Math.floor(255*Z.r)+","+Math.floor(255*Z.g)+","+Math.floor(255*Z.b)+","+U+")"),aa.fillRect(fb.min.x|0,fb.min.y|0,fb.max.x-fb.min.x|0,fb.max.y-fb.min.y|0)),fb.makeEmpty())};this.render=function(d,E){if(!1===
E instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear();aa.setTransform(1,0,0,-1,X,ea);Q.info.render.vertices=0;Q.info.render.faces=0;P=$.projectScene(d,E,this.sortObjects,this.sortElements);O=P.elements;R=P.lights;ra=E;Zb.setRGB(0,0,0);jb.setRGB(0,0,0);Za.setRGB(0,0,0);for(var S=0,Z=R.length;S<Z;S++){var Y=R[S],T=Y.color;Y instanceof THREE.AmbientLight?Zb.add(T):Y instanceof THREE.DirectionalLight?jb.add(T):
Y instanceof THREE.PointLight&&Za.add(T)}S=0;for(Z=O.length;S<Z;S++){var V=O[S],U=V.material;if(!(void 0===U||!1===U.visible)){vb.makeEmpty();if(V instanceof THREE.RenderableSprite){oa=V;oa.x*=X;oa.y*=ea;var Y=oa,T=V,ca=U;B(ca.opacity);C(ca.blending);V=T.scale.x*X;U=T.scale.y*ea;vb.min.set(Y.x-0.5*V,Y.y-0.5*U);vb.max.set(Y.x+0.5*V,Y.y+0.5*U);!1===Db.isIntersectionBox(vb)?vb.makeEmpty():ca instanceof THREE.SpriteMaterial||ca instanceof THREE.ParticleSystemMaterial?(null!==ca.map?(T=ca.map.image,aa.save(),
aa.translate(Y.x,Y.y),aa.rotate(-ca.rotation),aa.scale(V,-U),aa.drawImage(T,0,0,T.width,T.height,-0.5,-0.5,1,1)):(M(ca.color.getStyle()),aa.save(),aa.translate(Y.x,Y.y),aa.rotate(-T.rotation),aa.scale(V,U),aa.fillRect(-0.5,-0.5,1,1)),aa.restore()):ca instanceof THREE.SpriteCanvasMaterial&&(I(ca.color.getStyle()),M(ca.color.getStyle()),aa.save(),aa.translate(Y.x,Y.y),aa.rotate(-T.rotation),aa.scale(V,U),ca.program(aa),aa.restore())}else if(V instanceof THREE.RenderableLine){if(oa=V.v1,ka=V.v2,oa.positionScreen.x*=
X,oa.positionScreen.y*=ea,ka.positionScreen.x*=X,ka.positionScreen.y*=ea,vb.setFromPoints([oa.positionScreen,ka.positionScreen]),!0===Db.isIntersectionBox(vb))if(Y=oa,T=ka,ca=V,V=U,B(V.opacity),C(V.blending),aa.beginPath(),aa.moveTo(Y.positionScreen.x,Y.positionScreen.y),aa.lineTo(T.positionScreen.x,T.positionScreen.y),V instanceof THREE.LineBasicMaterial){D(V.linewidth);F(V.linecap);H(V.linejoin);if(V.vertexColors!==THREE.VertexColors)I(V.color.getStyle());else if(U=ca.vertexColors[0].getStyle(),
ca=ca.vertexColors[1].getStyle(),U===ca)I(U);else{try{var ga=aa.createLinearGradient(Y.positionScreen.x,Y.positionScreen.y,T.positionScreen.x,T.positionScreen.y);ga.addColorStop(0,U);ga.addColorStop(1,ca)}catch(ba){ga=U}I(ga)}aa.stroke();vb.expandByScalar(2*V.linewidth)}else V instanceof THREE.LineDashedMaterial&&(D(V.linewidth),F(V.linecap),H(V.linejoin),I(V.color.getStyle()),N(V.dashSize,V.gapSize),aa.stroke(),vb.expandByScalar(2*V.linewidth),N(null,null))}else if(V instanceof THREE.RenderableFace3){oa=
V.v1;ka=V.v2;Ua=V.v3;if(-1>oa.positionScreen.z||1<oa.positionScreen.z)continue;if(-1>ka.positionScreen.z||1<ka.positionScreen.z)continue;if(-1>Ua.positionScreen.z||1<Ua.positionScreen.z)continue;oa.positionScreen.x*=X;oa.positionScreen.y*=ea;ka.positionScreen.x*=X;ka.positionScreen.y*=ea;Ua.positionScreen.x*=X;Ua.positionScreen.y*=ea;0<U.overdraw&&(A(oa.positionScreen,ka.positionScreen,U.overdraw),A(ka.positionScreen,Ua.positionScreen,U.overdraw),A(Ua.positionScreen,oa.positionScreen,U.overdraw));
vb.setFromPoints([oa.positionScreen,ka.positionScreen,Ua.positionScreen]);if(!0===Db.isIntersectionBox(vb)){Y=oa;T=ka;ca=Ua;Q.info.render.vertices+=3;Q.info.render.faces++;B(U.opacity);C(U.blending);rb=Y.positionScreen.x;sb=Y.positionScreen.y;Xa=T.positionScreen.x;qb=T.positionScreen.y;Sa=ca.positionScreen.x;Ya=ca.positionScreen.y;var ia=rb,Ma=sb,ja=Xa,La=qb,Va=Sa,eb=Ya;aa.beginPath();aa.moveTo(ia,Ma);aa.lineTo(ja,La);aa.lineTo(Va,eb);aa.closePath();(U instanceof THREE.MeshLambertMaterial||U instanceof
THREE.MeshPhongMaterial)&&null===U.map?(kb.copy(U.color),bb.copy(U.emissive),U.vertexColors===THREE.FaceColors&&kb.multiply(V.color),!1===U.wireframe&&U.shading===THREE.SmoothShading&&3===V.vertexNormalsLength?(Na.copy(Zb),ya.copy(Zb),Qa.copy(Zb),h(V.v1.positionWorld,V.vertexNormalsModel[0],Na),h(V.v2.positionWorld,V.vertexNormalsModel[1],ya),h(V.v3.positionWorld,V.vertexNormalsModel[2],Qa),Na.multiply(kb).add(bb),ya.multiply(kb).add(bb),Qa.multiply(kb).add(bb),db.addColors(ya,Qa).multiplyScalar(0.5),
Hb=s(Na,ya,Qa,db),w(rb,sb,Xa,qb,Sa,Ya,0,0,1,0,0,1,Hb)):(Ra.copy(Zb),h(V.centroidModel,V.normalModel,Ra),Ra.multiply(kb).add(bb),!0===U.wireframe?k(Ra,U.wireframeLinewidth,U.wireframeLinecap,U.wireframeLinejoin):p(Ra))):U instanceof THREE.MeshBasicMaterial||U instanceof THREE.MeshLambertMaterial||U instanceof THREE.MeshPhongMaterial?null!==U.map?U.map.mapping instanceof THREE.UVMapping&&(Mb=V.uvs[0],q(rb,sb,Xa,qb,Sa,Ya,Mb[0].x,Mb[0].y,Mb[1].x,Mb[1].y,Mb[2].x,Mb[2].y,U.map)):null!==U.envMap?U.envMap.mapping instanceof
THREE.SphericalReflectionMapping&&(lb.copy(V.vertexNormalsModelView[0]),Ub=0.5*lb.x+0.5,Vb=0.5*lb.y+0.5,lb.copy(V.vertexNormalsModelView[1]),Cb=0.5*lb.x+0.5,Yb=0.5*lb.y+0.5,lb.copy(V.vertexNormalsModelView[2]),nc=0.5*lb.x+0.5,kc=0.5*lb.y+0.5,q(rb,sb,Xa,qb,Sa,Ya,Ub,Vb,Cb,Yb,nc,kc,U.envMap)):(Ra.copy(U.color),U.vertexColors===THREE.FaceColors&&Ra.multiply(V.color),!0===U.wireframe?k(Ra,U.wireframeLinewidth,U.wireframeLinecap,U.wireframeLinejoin):p(Ra)):U instanceof THREE.MeshDepthMaterial?(nb=ra.near,
Lb=ra.far,Na.r=Na.g=Na.b=1-L(Y.positionScreen.z*Y.positionScreen.w,nb,Lb),ya.r=ya.g=ya.b=1-L(T.positionScreen.z*T.positionScreen.w,nb,Lb),Qa.r=Qa.g=Qa.b=1-L(ca.positionScreen.z*ca.positionScreen.w,nb,Lb),db.addColors(ya,Qa).multiplyScalar(0.5),Hb=s(Na,ya,Qa,db),w(rb,sb,Xa,qb,Sa,Ya,0,0,1,0,0,1,Hb)):U instanceof THREE.MeshNormalMaterial&&(Y=void 0,U.shading===THREE.FlatShading?(Y=V.normalModelView,Ra.setRGB(Y.x,Y.y,Y.z).multiplyScalar(0.5).addScalar(0.5),!0===U.wireframe?k(Ra,U.wireframeLinewidth,U.wireframeLinecap,
U.wireframeLinejoin):p(Ra)):U.shading===THREE.SmoothShading&&(Y=V.vertexNormalsModelView[0],Na.setRGB(Y.x,Y.y,Y.z).multiplyScalar(0.5).addScalar(0.5),Y=V.vertexNormalsModelView[1],ya.setRGB(Y.x,Y.y,Y.z).multiplyScalar(0.5).addScalar(0.5),Y=V.vertexNormalsModelView[2],Qa.setRGB(Y.x,Y.y,Y.z).multiplyScalar(0.5).addScalar(0.5),db.addColors(ya,Qa).multiplyScalar(0.5),Hb=s(Na,ya,Qa,db),w(rb,sb,Xa,qb,Sa,Ya,0,0,1,0,0,1,Hb)))}}fb.union(vb)}}aa.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nuniform int boneTextureWidth;\nuniform int boneTextureHeight;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, float( boneTextureWidth ) );\nfloat y = floor( j / float( boneTextureWidth ) );\nfloat dx = 1.0 / float( boneTextureWidth );\nfloat dy = 1.0 / float( boneTextureHeight );\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(d){var h,k,p,q={};for(h=0;h<d.length;h++)for(k in p=this.clone(d[h]),p)q[k]=p[k];return q},clone:function(d){var h,k,p,q={};for(h in d)for(k in q[h]={},d[h])p=d[h][k],q[h][k]=p instanceof THREE.Color||p instanceof THREE.Vector2||p instanceof THREE.Vector3||p instanceof THREE.Vector4||p instanceof THREE.Matrix4||p instanceof THREE.Texture?p.clone():p instanceof Array?p.slice():p;return q}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,
THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,
THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,
THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",
value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,
THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",
value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",
value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",
value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},
depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(d){function h(d,h){var k=d.vertices.length,p=h.material;if(p.attributes){void 0===d.__webglCustomAttributesList&&(d.__webglCustomAttributesList=[]);for(var q in p.attributes){var s=p.attributes[q];if(!s.__webglInitialized||s.createUniqueBuffers){s.__webglInitialized=!0;var w=1;"v2"===s.type?w=2:"v3"===s.type?w=3:"v4"===s.type?w=4:"c"===s.type&&(w=3);s.size=w;s.array=new Float32Array(k*w);s.buffer=E.createBuffer();s.buffer.belongsToAttribute=q;s.needsUpdate=!0}d.__webglCustomAttributesList.push(s)}}}
function k(d,h){var k=h.geometry,s=d.faces3,A=3*s.length,B=1*s.length,C=3*s.length,s=p(h,d),D=w(s),H=q(s),F=s.vertexColors?s.vertexColors:!1;d.__vertexArray=new Float32Array(3*A);H&&(d.__normalArray=new Float32Array(3*A));k.hasTangents&&(d.__tangentArray=new Float32Array(4*A));F&&(d.__colorArray=new Float32Array(3*A));D&&(0<k.faceVertexUvs.length&&(d.__uvArray=new Float32Array(2*A)),1<k.faceVertexUvs.length&&(d.__uv2Array=new Float32Array(2*A)));h.geometry.skinWeights.length&&h.geometry.skinIndices.length&&
(d.__skinIndexArray=new Float32Array(4*A),d.__skinWeightArray=new Float32Array(4*A));d.__faceArray=new Uint16Array(3*B);d.__lineArray=new Uint16Array(2*C);if(d.numMorphTargets){d.__morphTargetsArrays=[];k=0;for(D=d.numMorphTargets;k<D;k++)d.__morphTargetsArrays.push(new Float32Array(3*A))}if(d.numMorphNormals){d.__morphNormalsArrays=[];k=0;for(D=d.numMorphNormals;k<D;k++)d.__morphNormalsArrays.push(new Float32Array(3*A))}d.__webglFaceCount=3*B;d.__webglLineCount=2*C;if(s.attributes){void 0===d.__webglCustomAttributesList&&
(d.__webglCustomAttributesList=[]);for(var I in s.attributes){var B=s.attributes[I],C={},M;for(M in B)C[M]=B[M];if(!C.__webglInitialized||C.createUniqueBuffers)C.__webglInitialized=!0,k=1,"v2"===C.type?k=2:"v3"===C.type?k=3:"v4"===C.type?k=4:"c"===C.type&&(k=3),C.size=k,C.array=new Float32Array(A*k),C.buffer=E.createBuffer(),C.buffer.belongsToAttribute=I,B.needsUpdate=!0,C.__original=B;d.__webglCustomAttributesList.push(C)}}d.__inittedArrays=!0}function p(d,h){return d.material instanceof THREE.MeshFaceMaterial?
d.material.materials[h.materialIndex]:d.material}function q(d){return d instanceof THREE.MeshBasicMaterial&&!d.envMap||d instanceof THREE.MeshDepthMaterial?!1:d&&void 0!==d.shading&&d.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function w(d){return d.map||d.lightMap||d.bumpMap||d.normalMap||d.specularMap||d instanceof THREE.ShaderMaterial?!0:!1}function s(d){Db[d]||(E.enableVertexAttribArray(d),Db[d]=!0)}function A(){for(var d in Db)Db[d]&&(E.disableVertexAttribArray(d),Db[d]=
!1)}function B(d,h){return d.z!==h.z?h.z-d.z:d.id-h.id}function C(d,h){return h[0]-d[0]}function D(d,h,k){if(d.length)for(var p=0,q=d.length;p<q;p++)Ya=sb=null,qb=Sa=Qa=ya=eb=ub=db=-1,lb=!0,d[p].render(h,k,nc,kc),Ya=sb=null,qb=Sa=Qa=ya=eb=ub=db=-1,lb=!0}function F(d,h,k,p,q,s,w,A){var B,C,D,E;h?(C=d.length-1,E=h=-1):(C=0,h=d.length,E=1);for(var H=C;H!==h;H+=E)if(B=d[H],B.render){C=B.object;D=B.buffer;if(A)B=A;else{B=B[k];if(!B)continue;w&&ka.setBlending(B.blending,B.blendEquation,B.blendSrc,B.blendDst);
ka.setDepthTest(B.depthTest);ka.setDepthWrite(B.depthWrite);X(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits)}ka.setMaterialFaces(B);D instanceof THREE.BufferGeometry?ka.renderBufferDirect(p,q,s,B,D,C):ka.renderBuffer(p,q,s,B,D,C)}}function H(d,h,k,p,q,s,w){for(var A,B,C=0,D=d.length;C<D;C++)if(A=d[C],B=A.object,B.visible){if(w)A=w;else{A=A[h];if(!A)continue;s&&ka.setBlending(A.blending,A.blendEquation,A.blendSrc,A.blendDst);ka.setDepthTest(A.depthTest);ka.setDepthWrite(A.depthWrite);
X(A.polygonOffset,A.polygonOffsetFactor,A.polygonOffsetUnits)}ka.renderImmediateObject(k,p,q,A,B)}}function I(d,p){var q,s,w,A;if(void 0===d.__webglInit&&(d.__webglInit=!0,d._modelViewMatrix=new THREE.Matrix4,d._normalMatrix=new THREE.Matrix3,void 0!==d.geometry&&void 0===d.geometry.__webglInit&&(d.geometry.__webglInit=!0,d.geometry.addEventListener("dispose",xc)),s=d.geometry,void 0!==s))if(s instanceof THREE.BufferGeometry){var B,C;for(B in s.attributes)C="index"===B?E.ELEMENT_ARRAY_BUFFER:E.ARRAY_BUFFER,
A=s.attributes[B],void 0===A.numItems&&(A.numItems=A.array.length),A.buffer=E.createBuffer(),E.bindBuffer(C,A.buffer),E.bufferData(C,A.array,E.STATIC_DRAW)}else if(d instanceof THREE.Mesh){w=d.material;if(void 0===s.geometryGroups){B=s;var D,H,F;C={};var I=B.morphTargets.length,L=B.morphNormals.length,N=w instanceof THREE.MeshFaceMaterial;B.geometryGroups={};w=0;for(D=B.faces.length;w<D;w++)H=B.faces[w],H=N?H.materialIndex:0,void 0===C[H]&&(C[H]={hash:H,counter:0}),F=C[H].hash+"_"+C[H].counter,void 0===
B.geometryGroups[F]&&(B.geometryGroups[F]={faces3:[],materialIndex:H,vertices:0,numMorphTargets:I,numMorphNormals:L}),65535<B.geometryGroups[F].vertices+3&&(C[H].counter+=1,F=C[H].hash+"_"+C[H].counter,void 0===B.geometryGroups[F]&&(B.geometryGroups[F]={faces3:[],materialIndex:H,vertices:0,numMorphTargets:I,numMorphNormals:L})),B.geometryGroups[F].faces3.push(w),B.geometryGroups[F].vertices+=3;B.geometryGroupsList=[];for(A in B.geometryGroups)B.geometryGroups[A].id=Ra++,B.geometryGroupsList.push(B.geometryGroups[A])}for(q in s.geometryGroups)if(A=
s.geometryGroups[q],!A.__webglVertexBuffer){B=A;B.__webglVertexBuffer=E.createBuffer();B.__webglNormalBuffer=E.createBuffer();B.__webglTangentBuffer=E.createBuffer();B.__webglColorBuffer=E.createBuffer();B.__webglUVBuffer=E.createBuffer();B.__webglUV2Buffer=E.createBuffer();B.__webglSkinIndicesBuffer=E.createBuffer();B.__webglSkinWeightsBuffer=E.createBuffer();B.__webglFaceBuffer=E.createBuffer();B.__webglLineBuffer=E.createBuffer();I=C=void 0;if(B.numMorphTargets){B.__webglMorphTargetsBuffers=[];
C=0;for(I=B.numMorphTargets;C<I;C++)B.__webglMorphTargetsBuffers.push(E.createBuffer())}if(B.numMorphNormals){B.__webglMorphNormalsBuffers=[];C=0;for(I=B.numMorphNormals;C<I;C++)B.__webglMorphNormalsBuffers.push(E.createBuffer())}ka.info.memory.geometries++;k(A,d);s.verticesNeedUpdate=!0;s.morphTargetsNeedUpdate=!0;s.elementsNeedUpdate=!0;s.uvsNeedUpdate=!0;s.normalsNeedUpdate=!0;s.tangentsNeedUpdate=!0;s.colorsNeedUpdate=!0}}else d instanceof THREE.Line?s.__webglVertexBuffer||(A=s,A.__webglVertexBuffer=
E.createBuffer(),A.__webglColorBuffer=E.createBuffer(),A.__webglLineDistanceBuffer=E.createBuffer(),ka.info.memory.geometries++,A=s,B=A.vertices.length,A.__vertexArray=new Float32Array(3*B),A.__colorArray=new Float32Array(3*B),A.__lineDistanceArray=new Float32Array(1*B),A.__webglLineCount=B,h(A,d),s.verticesNeedUpdate=!0,s.colorsNeedUpdate=!0,s.lineDistancesNeedUpdate=!0):d instanceof THREE.ParticleSystem&&!s.__webglVertexBuffer&&(A=s,A.__webglVertexBuffer=E.createBuffer(),A.__webglColorBuffer=E.createBuffer(),
ka.info.memory.geometries++,A=s,B=A.vertices.length,A.__vertexArray=new Float32Array(3*B),A.__colorArray=new Float32Array(3*B),A.__sortArray=[],A.__webglParticleCount=B,h(A,d),s.verticesNeedUpdate=!0,s.colorsNeedUpdate=!0);if(void 0===d.__webglActive){if(d instanceof THREE.Mesh)if(s=d.geometry,s instanceof THREE.BufferGeometry)M(p.__webglObjects,s,d);else{if(s instanceof THREE.Geometry)for(q in s.geometryGroups)A=s.geometryGroups[q],M(p.__webglObjects,A,d)}else d instanceof THREE.Line||d instanceof
THREE.ParticleSystem?(s=d.geometry,M(p.__webglObjects,s,d)):d instanceof THREE.ImmediateRenderObject||d.immediateRenderCallback?p.__webglObjectsImmediate.push({id:null,object:d,opaque:null,transparent:null,z:0}):d instanceof THREE.Sprite?p.__webglSprites.push(d):d instanceof THREE.LensFlare&&p.__webglFlares.push(d);d.__webglActive=!0}}function M(d,h,k){d.push({id:null,buffer:h,object:k,opaque:null,transparent:null,z:0})}function N(d){for(var h in d.attributes)if(d.attributes[h].needsUpdate)return!0;
return!1}function L(d){for(var h in d.attributes)d.attributes[h].needsUpdate=!1}function Q(d,h){d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem||d instanceof THREE.Line?P(h.__webglObjects,d):d instanceof THREE.Sprite?O(h.__webglSprites,d):d instanceof THREE.LensFlare?O(h.__webglFlares,d):(d instanceof THREE.ImmediateRenderObject||d.immediateRenderCallback)&&P(h.__webglObjectsImmediate,d);delete d.__webglActive}function P(d,h){for(var k=d.length-1;0<=k;k--)d[k].object===h&&d.splice(k,1)}
function O(d,h){for(var k=d.length-1;0<=k;k--)d[k]===h&&d.splice(k,1)}function R(d,h,k,p,q){Na=0;p.needsUpdate&&(p.program&&Bc(p),ka.initMaterial(p,h,k,q),p.needsUpdate=!1);p.morphTargets&&!q.__webglMorphTargetInfluences&&(q.__webglMorphTargetInfluences=new Float32Array(ka.maxMorphTargets));var s=!1,w=p.program,A=w.uniforms,B=p.uniforms;w!==sb&&(E.useProgram(w),sb=w,s=!0);p.id!==qb&&(qb=p.id,s=!0);if(s||d!==Ya)E.uniformMatrix4fv(A.projectionMatrix,!1,d.projectionMatrix.elements),d!==Ya&&(Ya=d);if(p.skinning)if(tc&&
q.useVertexTexture){if(null!==A.boneTexture){var C=$();E.uniform1i(A.boneTexture,C);ka.setTexture(q.boneTexture,C)}null!==A.boneTextureWidth&&E.uniform1i(A.boneTextureWidth,q.boneTextureWidth);null!==A.boneTextureHeight&&E.uniform1i(A.boneTextureHeight,q.boneTextureHeight)}else null!==A.boneGlobalMatrices&&E.uniformMatrix4fv(A.boneGlobalMatrices,!1,q.boneMatrices);if(s){k&&p.fog&&(B.fogColor.value=k.color,k instanceof THREE.Fog?(B.fogNear.value=k.near,B.fogFar.value=k.far):k instanceof THREE.FogExp2&&
(B.fogDensity.value=k.density));if(p instanceof THREE.MeshPhongMaterial||p instanceof THREE.MeshLambertMaterial||p.lights){if(lb){for(var D,H=C=0,F=0,I,M,L,N=Gb,O=N.directional.colors,P=N.directional.positions,Q=N.point.colors,R=N.point.positions,Y=N.point.distances,V=N.spot.colors,X=N.spot.positions,U=N.spot.distances,aa=N.spot.directions,ea=N.spot.anglesCos,ba=N.spot.exponents,ra=N.hemi.skyColors,ia=N.hemi.groundColors,Ma=N.hemi.positions,ja=0,La=0,Ra=0,Qa=0,rb=0,ya=0,oa=0,Kc=0,Sa=D=0,k=L=Sa=0,
s=h.length;k<s;k++)D=h[k],D.onlyShadow||(I=D.color,M=D.intensity,L=D.distance,D instanceof THREE.AmbientLight?D.visible&&(ka.gammaInput?(C+=I.r*I.r,H+=I.g*I.g,F+=I.b*I.b):(C+=I.r,H+=I.g,F+=I.b)):D instanceof THREE.DirectionalLight?(rb+=1,D.visible&&(Za.getPositionFromMatrix(D.matrixWorld),jb.getPositionFromMatrix(D.target.matrixWorld),Za.sub(jb),Za.normalize(),0===Za.x&&0===Za.y&&0===Za.z||(D=3*ja,P[D]=Za.x,P[D+1]=Za.y,P[D+2]=Za.z,ka.gammaInput?T(O,D,I,M*M):S(O,D,I,M),ja+=1))):D instanceof THREE.PointLight?
(ya+=1,D.visible&&(Sa=3*La,ka.gammaInput?T(Q,Sa,I,M*M):S(Q,Sa,I,M),jb.getPositionFromMatrix(D.matrixWorld),R[Sa]=jb.x,R[Sa+1]=jb.y,R[Sa+2]=jb.z,Y[La]=L,La+=1)):D instanceof THREE.SpotLight?(oa+=1,D.visible&&(Sa=3*Ra,ka.gammaInput?T(V,Sa,I,M*M):S(V,Sa,I,M),jb.getPositionFromMatrix(D.matrixWorld),X[Sa]=jb.x,X[Sa+1]=jb.y,X[Sa+2]=jb.z,U[Ra]=L,Za.copy(jb),jb.getPositionFromMatrix(D.target.matrixWorld),Za.sub(jb),Za.normalize(),aa[Sa]=Za.x,aa[Sa+1]=Za.y,aa[Sa+2]=Za.z,ea[Ra]=Math.cos(D.angle),ba[Ra]=D.exponent,
Ra+=1)):D instanceof THREE.HemisphereLight&&(Kc+=1,D.visible&&(Za.getPositionFromMatrix(D.matrixWorld),Za.normalize(),0===Za.x&&0===Za.y&&0===Za.z||(L=3*Qa,Ma[L]=Za.x,Ma[L+1]=Za.y,Ma[L+2]=Za.z,I=D.color,D=D.groundColor,ka.gammaInput?(M*=M,T(ra,L,I,M),T(ia,L,D,M)):(S(ra,L,I,M),S(ia,L,D,M)),Qa+=1))));k=3*ja;for(s=Math.max(O.length,3*rb);k<s;k++)O[k]=0;k=3*La;for(s=Math.max(Q.length,3*ya);k<s;k++)Q[k]=0;k=3*Ra;for(s=Math.max(V.length,3*oa);k<s;k++)V[k]=0;k=3*Qa;for(s=Math.max(ra.length,3*Kc);k<s;k++)ra[k]=
0;k=3*Qa;for(s=Math.max(ia.length,3*Kc);k<s;k++)ia[k]=0;N.directional.length=ja;N.point.length=La;N.spot.length=Ra;N.hemi.length=Qa;N.ambient[0]=C;N.ambient[1]=H;N.ambient[2]=F;lb=!1}k=Gb;B.ambientLightColor.value=k.ambient;B.directionalLightColor.value=k.directional.colors;B.directionalLightDirection.value=k.directional.positions;B.pointLightColor.value=k.point.colors;B.pointLightPosition.value=k.point.positions;B.pointLightDistance.value=k.point.distances;B.spotLightColor.value=k.spot.colors;B.spotLightPosition.value=
k.spot.positions;B.spotLightDistance.value=k.spot.distances;B.spotLightDirection.value=k.spot.directions;B.spotLightAngleCos.value=k.spot.anglesCos;B.spotLightExponent.value=k.spot.exponents;B.hemisphereLightSkyColor.value=k.hemi.skyColors;B.hemisphereLightGroundColor.value=k.hemi.groundColors;B.hemisphereLightDirection.value=k.hemi.positions}if(p instanceof THREE.MeshBasicMaterial||p instanceof THREE.MeshLambertMaterial||p instanceof THREE.MeshPhongMaterial){B.opacity.value=p.opacity;ka.gammaInput?
B.diffuse.value.copyGammaToLinear(p.color):B.diffuse.value=p.color;B.map.value=p.map;B.lightMap.value=p.lightMap;B.specularMap.value=p.specularMap;p.bumpMap&&(B.bumpMap.value=p.bumpMap,B.bumpScale.value=p.bumpScale);p.normalMap&&(B.normalMap.value=p.normalMap,B.normalScale.value.copy(p.normalScale));var Xa;p.map?Xa=p.map:p.specularMap?Xa=p.specularMap:p.normalMap?Xa=p.normalMap:p.bumpMap&&(Xa=p.bumpMap);void 0!==Xa&&(k=Xa.offset,Xa=Xa.repeat,B.offsetRepeat.value.set(k.x,k.y,Xa.x,Xa.y));B.envMap.value=
p.envMap;B.flipEnvMap.value=p.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;B.reflectivity.value=p.reflectivity;B.refractionRatio.value=p.refractionRatio;B.combine.value=p.combine;B.useRefract.value=p.envMap&&p.envMap.mapping instanceof THREE.CubeRefractionMapping}p instanceof THREE.LineBasicMaterial?(B.diffuse.value=p.color,B.opacity.value=p.opacity):p instanceof THREE.LineDashedMaterial?(B.diffuse.value=p.color,B.opacity.value=p.opacity,B.dashSize.value=p.dashSize,B.totalSize.value=p.dashSize+
p.gapSize,B.scale.value=p.scale):p instanceof THREE.ParticleSystemMaterial?(B.psColor.value=p.color,B.opacity.value=p.opacity,B.size.value=p.size,B.scale.value=ca.height/2,B.map.value=p.map):p instanceof THREE.MeshPhongMaterial?(B.shininess.value=p.shininess,ka.gammaInput?(B.ambient.value.copyGammaToLinear(p.ambient),B.emissive.value.copyGammaToLinear(p.emissive),B.specular.value.copyGammaToLinear(p.specular)):(B.ambient.value=p.ambient,B.emissive.value=p.emissive,B.specular.value=p.specular),p.wrapAround&&
B.wrapRGB.value.copy(p.wrapRGB)):p instanceof THREE.MeshLambertMaterial?(ka.gammaInput?(B.ambient.value.copyGammaToLinear(p.ambient),B.emissive.value.copyGammaToLinear(p.emissive)):(B.ambient.value=p.ambient,B.emissive.value=p.emissive),p.wrapAround&&B.wrapRGB.value.copy(p.wrapRGB)):p instanceof THREE.MeshDepthMaterial?(B.mNear.value=d.near,B.mFar.value=d.far,B.opacity.value=p.opacity):p instanceof THREE.MeshNormalMaterial&&(B.opacity.value=p.opacity);if(q.receiveShadow&&!p._shadowPass&&B.shadowMatrix){k=
Xa=0;for(s=h.length;k<s;k++)if(C=h[k],C.castShadow&&(C instanceof THREE.SpotLight||C instanceof THREE.DirectionalLight&&!C.shadowCascade))B.shadowMap.value[Xa]=C.shadowMap,B.shadowMapSize.value[Xa]=C.shadowMapSize,B.shadowMatrix.value[Xa]=C.shadowMatrix,B.shadowDarkness.value[Xa]=C.shadowDarkness,B.shadowBias.value[Xa]=C.shadowBias,Xa++}h=p.uniformsList;B=0;for(Xa=h.length;B<Xa;B++)if(s=w.uniforms[h[B][1]])if(k=h[B][0],H=k.type,C=k.value,"i"===H)E.uniform1i(s,C);else if("f"===H)E.uniform1f(s,C);else if("v2"===
H)E.uniform2f(s,C.x,C.y);else if("v3"===H)E.uniform3f(s,C.x,C.y,C.z);else if("v4"===H)E.uniform4f(s,C.x,C.y,C.z,C.w);else if("c"===H)E.uniform3f(s,C.r,C.g,C.b);else if("iv1"===H)E.uniform1iv(s,C);else if("iv"===H)E.uniform3iv(s,C);else if("fv1"===H)E.uniform1fv(s,C);else if("fv"===H)E.uniform3fv(s,C);else if("v2v"===H){void 0===k._array&&(k._array=new Float32Array(2*C.length));H=0;for(F=C.length;H<F;H++)N=2*H,k._array[N]=C[H].x,k._array[N+1]=C[H].y;E.uniform2fv(s,k._array)}else if("v3v"===H){void 0===
k._array&&(k._array=new Float32Array(3*C.length));H=0;for(F=C.length;H<F;H++)N=3*H,k._array[N]=C[H].x,k._array[N+1]=C[H].y,k._array[N+2]=C[H].z;E.uniform3fv(s,k._array)}else if("v4v"===H){void 0===k._array&&(k._array=new Float32Array(4*C.length));H=0;for(F=C.length;H<F;H++)N=4*H,k._array[N]=C[H].x,k._array[N+1]=C[H].y,k._array[N+2]=C[H].z,k._array[N+3]=C[H].w;E.uniform4fv(s,k._array)}else if("m4"===H)void 0===k._array&&(k._array=new Float32Array(16)),C.flattenToArray(k._array),E.uniformMatrix4fv(s,
!1,k._array);else if("m4v"===H){void 0===k._array&&(k._array=new Float32Array(16*C.length));H=0;for(F=C.length;H<F;H++)C[H].flattenToArrayOffset(k._array,16*H);E.uniformMatrix4fv(s,!1,k._array)}else if("t"===H){if(N=C,C=$(),E.uniform1i(s,C),N)if(N.image instanceof Array&&6===N.image.length){if(k=N,s=C,6===k.image.length)if(k.needsUpdate){k.image.__webglTextureCube||(k.addEventListener("dispose",yc),k.image.__webglTextureCube=E.createTexture(),ka.info.memory.textures++);E.activeTexture(E.TEXTURE0+
s);E.bindTexture(E.TEXTURE_CUBE_MAP,k.image.__webglTextureCube);E.pixelStorei(E.UNPACK_FLIP_Y_WEBGL,k.flipY);s=k instanceof THREE.CompressedTexture;C=[];for(H=0;6>H;H++)ka.autoScaleCubemaps&&!s?(F=C,N=H,O=k.image[H],Q=Xc,O.width<=Q&&O.height<=Q||(R=Math.max(O.width,O.height),P=Math.floor(O.width*Q/R),Q=Math.floor(O.height*Q/R),R=document.createElement("canvas"),R.width=P,R.height=Q,R.getContext("2d").drawImage(O,0,0,O.width,O.height,0,0,P,Q),O=R),F[N]=O):C[H]=k.image[H];H=C[0];F=0===(H.width&H.width-
1)&&0===(H.height&H.height-1);N=ga(k.format);O=ga(k.type);Z(E.TEXTURE_CUBE_MAP,k,F);for(H=0;6>H;H++)if(s){Q=C[H].mipmaps;R=0;for(Y=Q.length;R<Y;R++)P=Q[R],k.format!==THREE.RGBAFormat?E.compressedTexImage2D(E.TEXTURE_CUBE_MAP_POSITIVE_X+H,R,N,P.width,P.height,0,P.data):E.texImage2D(E.TEXTURE_CUBE_MAP_POSITIVE_X+H,R,N,P.width,P.height,0,N,O,P.data)}else E.texImage2D(E.TEXTURE_CUBE_MAP_POSITIVE_X+H,0,N,N,O,C[H]);k.generateMipmaps&&F&&E.generateMipmap(E.TEXTURE_CUBE_MAP);k.needsUpdate=!1;if(k.onUpdate)k.onUpdate()}else E.activeTexture(E.TEXTURE0+
s),E.bindTexture(E.TEXTURE_CUBE_MAP,k.image.__webglTextureCube)}else N instanceof THREE.WebGLRenderTargetCube?(k=N,E.activeTexture(E.TEXTURE0+C),E.bindTexture(E.TEXTURE_CUBE_MAP,k.__webglTexture)):ka.setTexture(N,C)}else if("tv"===H){void 0===k._array&&(k._array=[]);H=0;for(F=k.value.length;H<F;H++)k._array[H]=$();E.uniform1iv(s,k._array);H=0;for(F=k.value.length;H<F;H++)N=k.value[H],C=k._array[H],N&&ka.setTexture(N,C)}else console.warn("THREE.WebGLRenderer: Unknown uniform type: "+H);if((p instanceof
THREE.ShaderMaterial||p instanceof THREE.MeshPhongMaterial||p.envMap)&&null!==A.cameraPosition)jb.getPositionFromMatrix(d.matrixWorld),E.uniform3f(A.cameraPosition,jb.x,jb.y,jb.z);(p instanceof THREE.MeshPhongMaterial||p instanceof THREE.MeshLambertMaterial||p instanceof THREE.ShaderMaterial||p.skinning)&&null!==A.viewMatrix&&E.uniformMatrix4fv(A.viewMatrix,!1,d.matrixWorldInverse.elements)}E.uniformMatrix4fv(A.modelViewMatrix,!1,q._modelViewMatrix.elements);A.normalMatrix&&E.uniformMatrix3fv(A.normalMatrix,
!1,q._normalMatrix.elements);null!==A.modelMatrix&&E.uniformMatrix4fv(A.modelMatrix,!1,q.matrixWorld.elements);return w}function $(){var d=Na;d>=Hc&&console.warn("WebGLRenderer: trying to use "+d+" texture units while this GPU supports only "+Hc);Na+=1;return d}function T(d,h,k,p){d[h]=k.r*k.r*p;d[h+1]=k.g*k.g*p;d[h+2]=k.b*k.b*p}function S(d,h,k,p){d[h]=k.r*p;d[h+1]=k.g*p;d[h+2]=k.b*p}function Y(d){d!==Mb&&(E.lineWidth(d),Mb=d)}function X(d,h,k){nb!==d&&(d?E.enable(E.POLYGON_OFFSET_FILL):E.disable(E.POLYGON_OFFSET_FILL),
nb=d);if(d&&(Lb!==h||Hb!==k))E.polygonOffset(h,k),Lb=h,Hb=k}function ea(d){for(var d=d.split("\n"),h=0,k=d.length;h<k;h++)d[h]=h+1+": "+d[h];return d.join("\n")}function aa(d,h){var k;"fragment"===d?k=E.createShader(E.FRAGMENT_SHADER):"vertex"===d&&(k=E.createShader(E.VERTEX_SHADER));E.shaderSource(k,h);E.compileShader(k);return!E.getShaderParameter(k,E.COMPILE_STATUS)?(console.error(E.getShaderInfoLog(k)),console.error(ea(h)),null):k}function Z(d,h,k){k?(E.texParameteri(d,E.TEXTURE_WRAP_S,ga(h.wrapS)),
E.texParameteri(d,E.TEXTURE_WRAP_T,ga(h.wrapT)),E.texParameteri(d,E.TEXTURE_MAG_FILTER,ga(h.magFilter)),E.texParameteri(d,E.TEXTURE_MIN_FILTER,ga(h.minFilter))):(E.texParameteri(d,E.TEXTURE_WRAP_S,E.CLAMP_TO_EDGE),E.texParameteri(d,E.TEXTURE_WRAP_T,E.CLAMP_TO_EDGE),E.texParameteri(d,E.TEXTURE_MAG_FILTER,V(h.magFilter)),E.texParameteri(d,E.TEXTURE_MIN_FILTER,V(h.minFilter)));if(yb&&h.type!==THREE.FloatType&&(1<h.anisotropy||h.__oldAnisotropy))E.texParameterf(d,yb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(h.anisotropy,
Ic)),h.__oldAnisotropy=h.anisotropy}function U(d,h){E.bindRenderbuffer(E.RENDERBUFFER,d);h.depthBuffer&&!h.stencilBuffer?(E.renderbufferStorage(E.RENDERBUFFER,E.DEPTH_COMPONENT16,h.width,h.height),E.framebufferRenderbuffer(E.FRAMEBUFFER,E.DEPTH_ATTACHMENT,E.RENDERBUFFER,d)):h.depthBuffer&&h.stencilBuffer?(E.renderbufferStorage(E.RENDERBUFFER,E.DEPTH_STENCIL,h.width,h.height),E.framebufferRenderbuffer(E.FRAMEBUFFER,E.DEPTH_STENCIL_ATTACHMENT,E.RENDERBUFFER,d)):E.renderbufferStorage(E.RENDERBUFFER,
E.RGBA4,h.width,h.height)}function V(d){return d===THREE.NearestFilter||d===THREE.NearestMipMapNearestFilter||d===THREE.NearestMipMapLinearFilter?E.NEAREST:E.LINEAR}function ga(d){if(d===THREE.RepeatWrapping)return E.REPEAT;if(d===THREE.ClampToEdgeWrapping)return E.CLAMP_TO_EDGE;if(d===THREE.MirroredRepeatWrapping)return E.MIRRORED_REPEAT;if(d===THREE.NearestFilter)return E.NEAREST;if(d===THREE.NearestMipMapNearestFilter)return E.NEAREST_MIPMAP_NEAREST;if(d===THREE.NearestMipMapLinearFilter)return E.NEAREST_MIPMAP_LINEAR;
if(d===THREE.LinearFilter)return E.LINEAR;if(d===THREE.LinearMipMapNearestFilter)return E.LINEAR_MIPMAP_NEAREST;if(d===THREE.LinearMipMapLinearFilter)return E.LINEAR_MIPMAP_LINEAR;if(d===THREE.UnsignedByteType)return E.UNSIGNED_BYTE;if(d===THREE.UnsignedShort4444Type)return E.UNSIGNED_SHORT_4_4_4_4;if(d===THREE.UnsignedShort5551Type)return E.UNSIGNED_SHORT_5_5_5_1;if(d===THREE.UnsignedShort565Type)return E.UNSIGNED_SHORT_5_6_5;if(d===THREE.ByteType)return E.BYTE;if(d===THREE.ShortType)return E.SHORT;
if(d===THREE.UnsignedShortType)return E.UNSIGNED_SHORT;if(d===THREE.IntType)return E.INT;if(d===THREE.UnsignedIntType)return E.UNSIGNED_INT;if(d===THREE.FloatType)return E.FLOAT;if(d===THREE.AlphaFormat)return E.ALPHA;if(d===THREE.RGBFormat)return E.RGB;if(d===THREE.RGBAFormat)return E.RGBA;if(d===THREE.LuminanceFormat)return E.LUMINANCE;if(d===THREE.LuminanceAlphaFormat)return E.LUMINANCE_ALPHA;if(d===THREE.AddEquation)return E.FUNC_ADD;if(d===THREE.SubtractEquation)return E.FUNC_SUBTRACT;if(d===
THREE.ReverseSubtractEquation)return E.FUNC_REVERSE_SUBTRACT;if(d===THREE.ZeroFactor)return E.ZERO;if(d===THREE.OneFactor)return E.ONE;if(d===THREE.SrcColorFactor)return E.SRC_COLOR;if(d===THREE.OneMinusSrcColorFactor)return E.ONE_MINUS_SRC_COLOR;if(d===THREE.SrcAlphaFactor)return E.SRC_ALPHA;if(d===THREE.OneMinusSrcAlphaFactor)return E.ONE_MINUS_SRC_ALPHA;if(d===THREE.DstAlphaFactor)return E.DST_ALPHA;if(d===THREE.OneMinusDstAlphaFactor)return E.ONE_MINUS_DST_ALPHA;if(d===THREE.DstColorFactor)return E.DST_COLOR;
if(d===THREE.OneMinusDstColorFactor)return E.ONE_MINUS_DST_COLOR;if(d===THREE.SrcAlphaSaturateFactor)return E.SRC_ALPHA_SATURATE;if(void 0!==wb){if(d===THREE.RGB_S3TC_DXT1_Format)return wb.COMPRESSED_RGB_S3TC_DXT1_EXT;if(d===THREE.RGBA_S3TC_DXT1_Format)return wb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(d===THREE.RGBA_S3TC_DXT3_Format)return wb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(d===THREE.RGBA_S3TC_DXT5_Format)return wb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);
var d=d||{},ca=void 0!==d.canvas?d.canvas:document.createElement("canvas"),ia=void 0!==d.precision?d.precision:"highp",Ma=void 0!==d.alpha?d.alpha:!1,ja=void 0!==d.premultipliedAlpha?d.premultipliedAlpha:!0,La=void 0!==d.antialias?d.antialias:!1,Va=void 0!==d.stencil?d.stencil:!0,ba=void 0!==d.preserveDrawingBuffer?d.preserveDrawingBuffer:!1,ra=new THREE.Color(0),oa=0;this.domElement=ca;this.context=null;this.devicePixelRatio=void 0!==d.devicePixelRatio?d.devicePixelRatio:void 0!==self.devicePixelRatio?
self.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=
[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var ka=this,Ua=[],rb=0,sb=null,Xa=null,qb=-1,Sa=null,Ya=null,Ra=0,Na=0,ya=-1,Qa=-1,db=-1,kb=-1,bb=-1,xb=-1,ub=-1,eb=-1,nb=null,Lb=null,Hb=null,Mb=null,Ub=0,Vb=0,Cb=ca.width,Yb=ca.height,nc=0,kc=0,Db={},fb=new THREE.Frustum,vb=new THREE.Matrix4,Zb=new THREE.Matrix4,jb=new THREE.Vector3,Za=new THREE.Vector3,lb=!0,Gb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],
positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},E,Fb,mb,yb,wb;try{var Ib={alpha:Ma,premultipliedAlpha:ja,antialias:La,stencil:Va,preserveDrawingBuffer:ba};E=ca.getContext("webgl",Ib)||ca.getContext("experimental-webgl",Ib);if(null===E)throw"Error creating WebGL context.";}catch(Vc){console.error(Vc)}Fb=E.getExtension("OES_texture_float");E.getExtension("OES_texture_float_linear");
mb=E.getExtension("OES_standard_derivatives");yb=E.getExtension("EXT_texture_filter_anisotropic")||E.getExtension("MOZ_EXT_texture_filter_anisotropic")||E.getExtension("WEBKIT_EXT_texture_filter_anisotropic");wb=E.getExtension("WEBGL_compressed_texture_s3tc")||E.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||E.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");Fb||console.log("THREE.WebGLRenderer: Float textures not supported.");mb||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");
yb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");wb||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===E.getShaderPrecisionFormat&&(E.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});E.clearColor(0,0,0,1);E.clearDepth(1);E.clearStencil(0);E.enable(E.DEPTH_TEST);E.depthFunc(E.LEQUAL);E.frontFace(E.CCW);E.cullFace(E.BACK);E.enable(E.CULL_FACE);E.enable(E.BLEND);E.blendEquation(E.FUNC_ADD);E.blendFunc(E.SRC_ALPHA,
E.ONE_MINUS_SRC_ALPHA);E.viewport(Ub,Vb,Cb,Yb);E.clearColor(ra.r,ra.g,ra.b,oa);this.context=E;var Hc=E.getParameter(E.MAX_TEXTURE_IMAGE_UNITS),Wc=E.getParameter(E.MAX_VERTEX_TEXTURE_IMAGE_UNITS);E.getParameter(E.MAX_TEXTURE_SIZE);var Xc=E.getParameter(E.MAX_CUBE_MAP_TEXTURE_SIZE),Ic=yb?E.getParameter(yb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,wc=0<Wc,tc=wc&&Fb;wb&&E.getParameter(E.COMPRESSED_TEXTURE_FORMATS);var Yc=E.getShaderPrecisionFormat(E.VERTEX_SHADER,E.HIGH_FLOAT),Zc=E.getShaderPrecisionFormat(E.VERTEX_SHADER,
E.MEDIUM_FLOAT);E.getShaderPrecisionFormat(E.VERTEX_SHADER,E.LOW_FLOAT);var ld=E.getShaderPrecisionFormat(E.FRAGMENT_SHADER,E.HIGH_FLOAT),md=E.getShaderPrecisionFormat(E.FRAGMENT_SHADER,E.MEDIUM_FLOAT);E.getShaderPrecisionFormat(E.FRAGMENT_SHADER,E.LOW_FLOAT);E.getShaderPrecisionFormat(E.VERTEX_SHADER,E.HIGH_INT);E.getShaderPrecisionFormat(E.VERTEX_SHADER,E.MEDIUM_INT);E.getShaderPrecisionFormat(E.VERTEX_SHADER,E.LOW_INT);E.getShaderPrecisionFormat(E.FRAGMENT_SHADER,E.HIGH_INT);E.getShaderPrecisionFormat(E.FRAGMENT_SHADER,
E.MEDIUM_INT);E.getShaderPrecisionFormat(E.FRAGMENT_SHADER,E.LOW_INT);var nd=0<Yc.precision&&0<ld.precision,Jc=0<Zc.precision&&0<md.precision;"highp"===ia&&!nd&&(Jc?(ia="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(ia="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===ia&&!Jc&&(ia="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return E};this.supportsVertexTextures=function(){return wc};
this.supportsFloatTextures=function(){return Fb};this.supportsStandardDerivatives=function(){return mb};this.supportsCompressedTextureS3TC=function(){return wb};this.getMaxAnisotropy=function(){return Ic};this.getPrecision=function(){return ia};this.setSize=function(d,h,k){ca.width=d*this.devicePixelRatio;ca.height=h*this.devicePixelRatio;1!==this.devicePixelRatio&&!1!==k&&(ca.style.width=d+"px",ca.style.height=h+"px");this.setViewport(0,0,ca.width,ca.height)};this.setViewport=function(d,h,k,p){Ub=
void 0!==d?d:0;Vb=void 0!==h?h:0;Cb=void 0!==k?k:ca.width;Yb=void 0!==p?p:ca.height;E.viewport(Ub,Vb,Cb,Yb)};this.setScissor=function(d,h,k,p){E.scissor(d,h,k,p)};this.enableScissorTest=function(d){d?E.enable(E.SCISSOR_TEST):E.disable(E.SCISSOR_TEST)};this.setClearColor=function(d,h){ra.set(d);oa=void 0!==h?h:1;E.clearColor(ra.r,ra.g,ra.b,oa)};this.setClearColorHex=function(d,h){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(d,h)};
this.getClearColor=function(){return ra};this.getClearAlpha=function(){return oa};this.clear=function(d,h,k){var p=0;if(void 0===d||d)p|=E.COLOR_BUFFER_BIT;if(void 0===h||h)p|=E.DEPTH_BUFFER_BIT;if(void 0===k||k)p|=E.STENCIL_BUFFER_BIT;E.clear(p)};this.clearTarget=function(d,h,k,p){this.setRenderTarget(d);this.clear(h,k,p)};this.addPostPlugin=function(d){d.init(this);this.renderPluginsPost.push(d)};this.addPrePlugin=function(d){d.init(this);this.renderPluginsPre.push(d)};this.updateShadowMap=function(d,
h){sb=null;qb=Sa=eb=ub=db=-1;lb=!0;Qa=ya=-1;this.shadowMapPlugin.update(d,h)};var xc=function(d){d=d.target;d.removeEventListener("dispose",xc);d.__webglInit=void 0;if(d instanceof THREE.BufferGeometry){var h=d.attributes,k;for(k in h)void 0!==h[k].buffer&&E.deleteBuffer(h[k].buffer);ka.info.memory.geometries--}else if(void 0!==d.geometryGroups)for(h in d.geometryGroups){k=d.geometryGroups[h];if(void 0!==k.numMorphTargets)for(var p=0,q=k.numMorphTargets;p<q;p++)E.deleteBuffer(k.__webglMorphTargetsBuffers[p]);
if(void 0!==k.numMorphNormals){p=0;for(q=k.numMorphNormals;p<q;p++)E.deleteBuffer(k.__webglMorphNormalsBuffers[p])}Cc(k)}else Cc(d)},yc=function(d){d=d.target;d.removeEventListener("dispose",yc);d.image&&d.image.__webglTextureCube?E.deleteTexture(d.image.__webglTextureCube):d.__webglInit&&(d.__webglInit=!1,E.deleteTexture(d.__webglTexture));ka.info.memory.textures--},zc=function(d){d=d.target;d.removeEventListener("dispose",zc);if(d&&d.__webglTexture)if(E.deleteTexture(d.__webglTexture),d instanceof
THREE.WebGLRenderTargetCube)for(var h=0;6>h;h++)E.deleteFramebuffer(d.__webglFramebuffer[h]),E.deleteRenderbuffer(d.__webglRenderbuffer[h]);else E.deleteFramebuffer(d.__webglFramebuffer),E.deleteRenderbuffer(d.__webglRenderbuffer);ka.info.memory.textures--},Ac=function(d){d=d.target;d.removeEventListener("dispose",Ac);Bc(d)},Cc=function(d){void 0!==d.__webglVertexBuffer&&E.deleteBuffer(d.__webglVertexBuffer);void 0!==d.__webglNormalBuffer&&E.deleteBuffer(d.__webglNormalBuffer);void 0!==d.__webglTangentBuffer&&
E.deleteBuffer(d.__webglTangentBuffer);void 0!==d.__webglColorBuffer&&E.deleteBuffer(d.__webglColorBuffer);void 0!==d.__webglUVBuffer&&E.deleteBuffer(d.__webglUVBuffer);void 0!==d.__webglUV2Buffer&&E.deleteBuffer(d.__webglUV2Buffer);void 0!==d.__webglSkinIndicesBuffer&&E.deleteBuffer(d.__webglSkinIndicesBuffer);void 0!==d.__webglSkinWeightsBuffer&&E.deleteBuffer(d.__webglSkinWeightsBuffer);void 0!==d.__webglFaceBuffer&&E.deleteBuffer(d.__webglFaceBuffer);void 0!==d.__webglLineBuffer&&E.deleteBuffer(d.__webglLineBuffer);
void 0!==d.__webglLineDistanceBuffer&&E.deleteBuffer(d.__webglLineDistanceBuffer);if(void 0!==d.__webglCustomAttributesList)for(var h in d.__webglCustomAttributesList)E.deleteBuffer(d.__webglCustomAttributesList[h].buffer);ka.info.memory.geometries--},Bc=function(d){var h=d.program;if(void 0!==h){d.program=void 0;var k,p,q=!1,d=0;for(k=Ua.length;d<k;d++)if(p=Ua[d],p.program===h){p.usedTimes--;0===p.usedTimes&&(q=!0);break}if(!0===q){q=[];d=0;for(k=Ua.length;d<k;d++)p=Ua[d],p.program!==h&&q.push(p);
Ua=q;E.deleteProgram(h);ka.info.memory.programs--}}};this.renderBufferImmediate=function(d,h,k){d.hasPositions&&!d.__webglVertexBuffer&&(d.__webglVertexBuffer=E.createBuffer());d.hasNormals&&!d.__webglNormalBuffer&&(d.__webglNormalBuffer=E.createBuffer());d.hasUvs&&!d.__webglUvBuffer&&(d.__webglUvBuffer=E.createBuffer());d.hasColors&&!d.__webglColorBuffer&&(d.__webglColorBuffer=E.createBuffer());d.hasPositions&&(E.bindBuffer(E.ARRAY_BUFFER,d.__webglVertexBuffer),E.bufferData(E.ARRAY_BUFFER,d.positionArray,
E.DYNAMIC_DRAW),E.enableVertexAttribArray(h.attributes.position),E.vertexAttribPointer(h.attributes.position,3,E.FLOAT,!1,0,0));if(d.hasNormals){E.bindBuffer(E.ARRAY_BUFFER,d.__webglNormalBuffer);if(k.shading===THREE.FlatShading){var p,q,s,w,A,B,C,D,H,F,I,M=3*d.count;for(I=0;I<M;I+=9)F=d.normalArray,p=F[I],q=F[I+1],s=F[I+2],w=F[I+3],B=F[I+4],D=F[I+5],A=F[I+6],C=F[I+7],H=F[I+8],p=(p+w+A)/3,q=(q+B+C)/3,s=(s+D+H)/3,F[I]=p,F[I+1]=q,F[I+2]=s,F[I+3]=p,F[I+4]=q,F[I+5]=s,F[I+6]=p,F[I+7]=q,F[I+8]=s}E.bufferData(E.ARRAY_BUFFER,
d.normalArray,E.DYNAMIC_DRAW);E.enableVertexAttribArray(h.attributes.normal);E.vertexAttribPointer(h.attributes.normal,3,E.FLOAT,!1,0,0)}d.hasUvs&&k.map&&(E.bindBuffer(E.ARRAY_BUFFER,d.__webglUvBuffer),E.bufferData(E.ARRAY_BUFFER,d.uvArray,E.DYNAMIC_DRAW),E.enableVertexAttribArray(h.attributes.uv),E.vertexAttribPointer(h.attributes.uv,2,E.FLOAT,!1,0,0));d.hasColors&&k.vertexColors!==THREE.NoColors&&(E.bindBuffer(E.ARRAY_BUFFER,d.__webglColorBuffer),E.bufferData(E.ARRAY_BUFFER,d.colorArray,E.DYNAMIC_DRAW),
E.enableVertexAttribArray(h.attributes.color),E.vertexAttribPointer(h.attributes.color,3,E.FLOAT,!1,0,0));E.drawArrays(E.TRIANGLES,0,d.count);d.count=0};this.renderBufferDirect=function(d,h,k,p,q,w){if(!1!==p.visible){var B,C,D,H;B=R(d,h,k,p,w);h=B.attributes;d=q.attributes;k=!1;B=16777215*q.id+2*B.id+(p.wireframe?1:0);B!==Sa&&(Sa=B,k=!0);k&&A();if(w instanceof THREE.Mesh)if(w=d.index){q=q.offsets;1<q.length&&(k=!0);for(var F=0,I=q.length;F<I;F++){var M=q[F].index;if(k){for(C in h)D=h[C],B=d[C],0<=
D&&(B?(H=B.itemSize,E.bindBuffer(E.ARRAY_BUFFER,B.buffer),s(D),E.vertexAttribPointer(D,H,E.FLOAT,!1,0,4*M*H)):p.defaultAttributeValues&&(2===p.defaultAttributeValues[C].length?E.vertexAttrib2fv(D,p.defaultAttributeValues[C]):3===p.defaultAttributeValues[C].length&&E.vertexAttrib3fv(D,p.defaultAttributeValues[C])));E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,w.buffer)}E.drawElements(E.TRIANGLES,q[F].count,E.UNSIGNED_SHORT,2*q[F].start);ka.info.render.calls++;ka.info.render.vertices+=q[F].count;ka.info.render.faces+=
q[F].count/3}}else{if(k)for(C in h)"index"!==C&&(D=h[C],B=d[C],0<=D&&(B?(H=B.itemSize,E.bindBuffer(E.ARRAY_BUFFER,B.buffer),s(D),E.vertexAttribPointer(D,H,E.FLOAT,!1,0,0)):p.defaultAttributeValues&&p.defaultAttributeValues[C]&&(2===p.defaultAttributeValues[C].length?E.vertexAttrib2fv(D,p.defaultAttributeValues[C]):3===p.defaultAttributeValues[C].length&&E.vertexAttrib3fv(D,p.defaultAttributeValues[C]))));p=q.attributes.position;E.drawArrays(E.TRIANGLES,0,p.numItems/3);ka.info.render.calls++;ka.info.render.vertices+=
p.numItems/3;ka.info.render.faces+=p.numItems/3/3}else if(w instanceof THREE.ParticleSystem){if(k){for(C in h)D=h[C],B=d[C],0<=D&&(B?(H=B.itemSize,E.bindBuffer(E.ARRAY_BUFFER,B.buffer),s(D),E.vertexAttribPointer(D,H,E.FLOAT,!1,0,0)):p.defaultAttributeValues&&p.defaultAttributeValues[C]&&(2===p.defaultAttributeValues[C].length?E.vertexAttrib2fv(D,p.defaultAttributeValues[C]):3===p.defaultAttributeValues[C].length&&E.vertexAttrib3fv(D,p.defaultAttributeValues[C])));p=d.position;E.drawArrays(E.POINTS,
0,p.numItems/3);ka.info.render.calls++;ka.info.render.points+=p.numItems/3}}else if(w instanceof THREE.Line&&k){for(C in h)D=h[C],B=d[C],0<=D&&(B?(H=B.itemSize,E.bindBuffer(E.ARRAY_BUFFER,B.buffer),s(D),E.vertexAttribPointer(D,H,E.FLOAT,!1,0,0)):p.defaultAttributeValues&&p.defaultAttributeValues[C]&&(2===p.defaultAttributeValues[C].length?E.vertexAttrib2fv(D,p.defaultAttributeValues[C]):3===p.defaultAttributeValues[C].length&&E.vertexAttrib3fv(D,p.defaultAttributeValues[C])));C=w.type===THREE.LineStrip?
E.LINE_STRIP:E.LINES;Y(p.linewidth);p=d.position;E.drawArrays(C,0,p.numItems/3);ka.info.render.calls++;ka.info.render.points+=p.numItems}}};this.renderBuffer=function(d,h,k,p,q,w){if(!1!==p.visible){var B,D,k=R(d,h,k,p,w),d=k.attributes,h=!1,k=16777215*q.id+2*k.id+(p.wireframe?1:0);k!==Sa&&(Sa=k,h=!0);h&&A();if(!p.morphTargets&&0<=d.position)h&&(E.bindBuffer(E.ARRAY_BUFFER,q.__webglVertexBuffer),s(d.position),E.vertexAttribPointer(d.position,3,E.FLOAT,!1,0,0));else if(w.morphTargetBase){k=p.program.attributes;
-1!==w.morphTargetBase&&0<=k.position?(E.bindBuffer(E.ARRAY_BUFFER,q.__webglMorphTargetsBuffers[w.morphTargetBase]),s(k.position),E.vertexAttribPointer(k.position,3,E.FLOAT,!1,0,0)):0<=k.position&&(E.bindBuffer(E.ARRAY_BUFFER,q.__webglVertexBuffer),s(k.position),E.vertexAttribPointer(k.position,3,E.FLOAT,!1,0,0));if(w.morphTargetForcedOrder.length){var H=0;D=w.morphTargetForcedOrder;for(B=w.morphTargetInfluences;H<p.numSupportedMorphTargets&&H<D.length;)0<=k["morphTarget"+H]&&(E.bindBuffer(E.ARRAY_BUFFER,
q.__webglMorphTargetsBuffers[D[H]]),s(k["morphTarget"+H]),E.vertexAttribPointer(k["morphTarget"+H],3,E.FLOAT,!1,0,0)),0<=k["morphNormal"+H]&&p.morphNormals&&(E.bindBuffer(E.ARRAY_BUFFER,q.__webglMorphNormalsBuffers[D[H]]),s(k["morphNormal"+H]),E.vertexAttribPointer(k["morphNormal"+H],3,E.FLOAT,!1,0,0)),w.__webglMorphTargetInfluences[H]=B[D[H]],H++}else{D=[];B=w.morphTargetInfluences;var F,I=B.length;for(F=0;F<I;F++)H=B[F],0<H&&D.push([H,F]);D.length>p.numSupportedMorphTargets?(D.sort(C),D.length=
p.numSupportedMorphTargets):D.length>p.numSupportedMorphNormals?D.sort(C):0===D.length&&D.push([0,0]);for(H=0;H<p.numSupportedMorphTargets;)D[H]?(F=D[H][1],0<=k["morphTarget"+H]&&(E.bindBuffer(E.ARRAY_BUFFER,q.__webglMorphTargetsBuffers[F]),s(k["morphTarget"+H]),E.vertexAttribPointer(k["morphTarget"+H],3,E.FLOAT,!1,0,0)),0<=k["morphNormal"+H]&&p.morphNormals&&(E.bindBuffer(E.ARRAY_BUFFER,q.__webglMorphNormalsBuffers[F]),s(k["morphNormal"+H]),E.vertexAttribPointer(k["morphNormal"+H],3,E.FLOAT,!1,0,
0)),w.__webglMorphTargetInfluences[H]=B[F]):w.__webglMorphTargetInfluences[H]=0,H++}null!==p.program.uniforms.morphTargetInfluences&&E.uniform1fv(p.program.uniforms.morphTargetInfluences,w.__webglMorphTargetInfluences)}if(h){if(q.__webglCustomAttributesList){B=0;for(D=q.__webglCustomAttributesList.length;B<D;B++)k=q.__webglCustomAttributesList[B],0<=d[k.buffer.belongsToAttribute]&&(E.bindBuffer(E.ARRAY_BUFFER,k.buffer),s(d[k.buffer.belongsToAttribute]),E.vertexAttribPointer(d[k.buffer.belongsToAttribute],
k.size,E.FLOAT,!1,0,0))}0<=d.color&&(0<w.geometry.colors.length||0<w.geometry.faces.length?(E.bindBuffer(E.ARRAY_BUFFER,q.__webglColorBuffer),s(d.color),E.vertexAttribPointer(d.color,3,E.FLOAT,!1,0,0)):p.defaultAttributeValues&&E.vertexAttrib3fv(d.color,p.defaultAttributeValues.color));0<=d.normal&&(E.bindBuffer(E.ARRAY_BUFFER,q.__webglNormalBuffer),s(d.normal),E.vertexAttribPointer(d.normal,3,E.FLOAT,!1,0,0));0<=d.tangent&&(E.bindBuffer(E.ARRAY_BUFFER,q.__webglTangentBuffer),s(d.tangent),E.vertexAttribPointer(d.tangent,
4,E.FLOAT,!1,0,0));0<=d.uv&&(w.geometry.faceVertexUvs[0]?(E.bindBuffer(E.ARRAY_BUFFER,q.__webglUVBuffer),s(d.uv),E.vertexAttribPointer(d.uv,2,E.FLOAT,!1,0,0)):p.defaultAttributeValues&&E.vertexAttrib2fv(d.uv,p.defaultAttributeValues.uv));0<=d.uv2&&(w.geometry.faceVertexUvs[1]?(E.bindBuffer(E.ARRAY_BUFFER,q.__webglUV2Buffer),s(d.uv2),E.vertexAttribPointer(d.uv2,2,E.FLOAT,!1,0,0)):p.defaultAttributeValues&&E.vertexAttrib2fv(d.uv2,p.defaultAttributeValues.uv2));p.skinning&&(0<=d.skinIndex&&0<=d.skinWeight)&&
(E.bindBuffer(E.ARRAY_BUFFER,q.__webglSkinIndicesBuffer),s(d.skinIndex),E.vertexAttribPointer(d.skinIndex,4,E.FLOAT,!1,0,0),E.bindBuffer(E.ARRAY_BUFFER,q.__webglSkinWeightsBuffer),s(d.skinWeight),E.vertexAttribPointer(d.skinWeight,4,E.FLOAT,!1,0,0));0<=d.lineDistance&&(E.bindBuffer(E.ARRAY_BUFFER,q.__webglLineDistanceBuffer),s(d.lineDistance),E.vertexAttribPointer(d.lineDistance,1,E.FLOAT,!1,0,0))}w instanceof THREE.Mesh?(p.wireframe?(Y(p.wireframeLinewidth),h&&E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,
q.__webglLineBuffer),E.drawElements(E.LINES,q.__webglLineCount,E.UNSIGNED_SHORT,0)):(h&&E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,q.__webglFaceBuffer),E.drawElements(E.TRIANGLES,q.__webglFaceCount,E.UNSIGNED_SHORT,0)),ka.info.render.calls++,ka.info.render.vertices+=q.__webglFaceCount,ka.info.render.faces+=q.__webglFaceCount/3):w instanceof THREE.Line?(w=w.type===THREE.LineStrip?E.LINE_STRIP:E.LINES,Y(p.linewidth),E.drawArrays(w,0,q.__webglLineCount),ka.info.render.calls++):w instanceof THREE.ParticleSystem&&
(E.drawArrays(E.POINTS,0,q.__webglParticleCount),ka.info.render.calls++,ka.info.render.points+=q.__webglParticleCount)}};this.render=function(d,h,k,p){if(!1===h instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var q,s,w,A,C=d.__lights,I=d.fog;qb=-1;lb=!0;!0===d.autoUpdate&&d.updateMatrixWorld();void 0===h.parent&&h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);vb.multiplyMatrices(h.projectionMatrix,h.matrixWorldInverse);
fb.setFromMatrix(vb);this.autoUpdateObjects&&this.initWebGLObjects(d);D(this.renderPluginsPre,d,h);ka.info.render.calls=0;ka.info.render.vertices=0;ka.info.render.faces=0;ka.info.render.points=0;this.setRenderTarget(k);(this.autoClear||p)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);A=d.__webglObjects;p=0;for(q=A.length;p<q;p++)if(s=A[p],w=s.object,s.id=p,s.render=!1,w.visible&&(!(w instanceof THREE.Mesh||w instanceof THREE.ParticleSystem)||!w.frustumCulled||fb.intersectsObject(w))){var M=
w;M._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,M.matrixWorld);M._normalMatrix.getNormalMatrix(M._modelViewMatrix);var M=s,N=M.buffer,L=void 0,O=L=void 0,O=M.object.material;if(O instanceof THREE.MeshFaceMaterial)L=N.materialIndex,L=O.materials[L],L.transparent?(M.transparent=L,M.opaque=null):(M.opaque=L,M.transparent=null);else if(L=O)L.transparent?(M.transparent=L,M.opaque=null):(M.opaque=L,M.transparent=null);s.render=!0;!0===this.sortObjects&&(null!==w.renderDepth?s.z=w.renderDepth:
(jb.getPositionFromMatrix(w.matrixWorld),jb.applyProjection(vb),s.z=jb.z))}this.sortObjects&&A.sort(B);A=d.__webglObjectsImmediate;p=0;for(q=A.length;p<q;p++)s=A[p],w=s.object,w.visible&&(w._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,w.matrixWorld),w._normalMatrix.getNormalMatrix(w._modelViewMatrix),w=s.object.material,w.transparent?(s.transparent=w,s.opaque=null):(s.opaque=w,s.transparent=null));d.overrideMaterial?(p=d.overrideMaterial,this.setBlending(p.blending,p.blendEquation,p.blendSrc,
p.blendDst),this.setDepthTest(p.depthTest),this.setDepthWrite(p.depthWrite),X(p.polygonOffset,p.polygonOffsetFactor,p.polygonOffsetUnits),F(d.__webglObjects,!1,"",h,C,I,!0,p),H(d.__webglObjectsImmediate,"",h,C,I,!1,p)):(p=null,this.setBlending(THREE.NoBlending),F(d.__webglObjects,!0,"opaque",h,C,I,!1,p),H(d.__webglObjectsImmediate,"opaque",h,C,I,!1,p),F(d.__webglObjects,!1,"transparent",h,C,I,!0,p),H(d.__webglObjectsImmediate,"transparent",h,C,I,!0,p));D(this.renderPluginsPost,d,h);k&&(k.generateMipmaps&&
k.minFilter!==THREE.NearestFilter&&k.minFilter!==THREE.LinearFilter)&&(k instanceof THREE.WebGLRenderTargetCube?(E.bindTexture(E.TEXTURE_CUBE_MAP,k.__webglTexture),E.generateMipmap(E.TEXTURE_CUBE_MAP),E.bindTexture(E.TEXTURE_CUBE_MAP,null)):(E.bindTexture(E.TEXTURE_2D,k.__webglTexture),E.generateMipmap(E.TEXTURE_2D),E.bindTexture(E.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(d,h,k,p,q){var s=R(d,h,k,p,q);Sa=-1;ka.setMaterialFaces(p);q.immediateRenderCallback?
q.immediateRenderCallback(s,E,fb):q.render(function(d){ka.renderBufferImmediate(d,s,p)})};this.initWebGLObjects=function(d){d.__webglObjects||(d.__webglObjects=[],d.__webglObjectsImmediate=[],d.__webglSprites=[],d.__webglFlares=[]);for(;d.__objectsAdded.length;)I(d.__objectsAdded[0],d),d.__objectsAdded.splice(0,1);for(;d.__objectsRemoved.length;)Q(d.__objectsRemoved[0],d),d.__objectsRemoved.splice(0,1);for(var h=0,s=d.__webglObjects.length;h<s;h++){var A=d.__webglObjects[h].object;void 0===A.__webglInit&&
(void 0!==A.__webglActive&&Q(A,d),I(A,d));var B=A,D=B.geometry,H=void 0,F=void 0,M=void 0;if(D instanceof THREE.BufferGeometry){var O=E.DYNAMIC_DRAW,P=!D.dynamic,S=D.attributes,R=void 0,Y=void 0;for(R in S)Y=S[R],Y.needsUpdate&&("index"===R?(E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,Y.buffer),E.bufferData(E.ELEMENT_ARRAY_BUFFER,Y.array,O)):(E.bindBuffer(E.ARRAY_BUFFER,Y.buffer),E.bufferData(E.ARRAY_BUFFER,Y.array,O)),Y.needsUpdate=!1),P&&!Y.dynamic&&(Y.array=null)}else if(B instanceof THREE.Mesh){for(var V=
0,X=D.geometryGroupsList.length;V<X;V++)if(H=D.geometryGroupsList[V],M=p(B,H),D.buffersNeedUpdate&&k(H,B),F=M.attributes&&N(M),D.verticesNeedUpdate||D.morphTargetsNeedUpdate||D.elementsNeedUpdate||D.uvsNeedUpdate||D.normalsNeedUpdate||D.colorsNeedUpdate||D.tangentsNeedUpdate||F){var U=H,Z=B,T=E.DYNAMIC_DRAW,$=!D.dynamic,aa=M;if(U.__inittedArrays){var ea=q(aa),ca=aa.vertexColors?aa.vertexColors:!1,ga=w(aa),ka=ea===THREE.SmoothShading,ba=void 0,ja=void 0,ra=void 0,ia=void 0,Ma=void 0,La=void 0,Ra=void 0,
Sa=void 0,Qa=void 0,Xa=void 0,rb=void 0,ya=void 0,oa=void 0,Na=void 0,sb=void 0,Ya=void 0,Ua=void 0,Va=void 0,qb=void 0,bb=void 0,Za=void 0,db=void 0,eb=void 0,fb=void 0,kb=void 0,lb=void 0,mb=void 0,nb=void 0,ub=void 0,tb=void 0,wb=void 0,xb=void 0,yb=void 0,Db=void 0,Jb=void 0,Mb=void 0,$b=void 0,ac=void 0,Hb=void 0,Ib=void 0,Wb=0,Xb=0,Fb=0,Gb=0,Lb=0,bc=0,Kb=0,oc=0,Rb=0,ib=0,ob=0,na=0,Eb=void 0,cc=U.__vertexArray,Ub=U.__uvArray,Vb=U.__uv2Array,Cb=U.__normalArray,Nb=U.__tangentArray,dc=U.__colorArray,
Ob=U.__skinIndexArray,Pb=U.__skinWeightArray,Yb=U.__morphTargetsArrays,nc=U.__morphNormalsArrays,kc=U.__webglCustomAttributesList,fa=void 0,Lc=U.__faceArray,qc=U.__lineArray,zb=Z.geometry,wc=zb.elementsNeedUpdate,tc=zb.uvsNeedUpdate,yc=zb.normalsNeedUpdate,Hc=zb.tangentsNeedUpdate,Ic=zb.colorsNeedUpdate,Jc=zb.morphTargetsNeedUpdate,$c=zb.vertices,Wa=U.faces3,ec=zb.faces,xc=zb.faceVertexUvs[0],zc=zb.faceVertexUvs[1],ad=zb.skinIndices,Mc=zb.skinWeights,Nc=zb.morphTargets,Ac=zb.morphNormals;if(zb.verticesNeedUpdate){ba=
0;for(ja=Wa.length;ba<ja;ba++)ia=ec[Wa[ba]],ya=$c[ia.a],oa=$c[ia.b],Na=$c[ia.c],cc[Xb]=ya.x,cc[Xb+1]=ya.y,cc[Xb+2]=ya.z,cc[Xb+3]=oa.x,cc[Xb+4]=oa.y,cc[Xb+5]=oa.z,cc[Xb+6]=Na.x,cc[Xb+7]=Na.y,cc[Xb+8]=Na.z,Xb+=9;E.bindBuffer(E.ARRAY_BUFFER,U.__webglVertexBuffer);E.bufferData(E.ARRAY_BUFFER,cc,T)}if(Jc){Jb=0;for(Mb=Nc.length;Jb<Mb;Jb++){ba=ob=0;for(ja=Wa.length;ba<ja;ba++)Hb=Wa[ba],ia=ec[Hb],ya=Nc[Jb].vertices[ia.a],oa=Nc[Jb].vertices[ia.b],Na=Nc[Jb].vertices[ia.c],$b=Yb[Jb],$b[ob]=ya.x,$b[ob+1]=ya.y,
$b[ob+2]=ya.z,$b[ob+3]=oa.x,$b[ob+4]=oa.y,$b[ob+5]=oa.z,$b[ob+6]=Na.x,$b[ob+7]=Na.y,$b[ob+8]=Na.z,aa.morphNormals&&(ka?(Ib=Ac[Jb].vertexNormals[Hb],Va=Ib.a,qb=Ib.b,bb=Ib.c):bb=qb=Va=Ac[Jb].faceNormals[Hb],ac=nc[Jb],ac[ob]=Va.x,ac[ob+1]=Va.y,ac[ob+2]=Va.z,ac[ob+3]=qb.x,ac[ob+4]=qb.y,ac[ob+5]=qb.z,ac[ob+6]=bb.x,ac[ob+7]=bb.y,ac[ob+8]=bb.z),ob+=9;E.bindBuffer(E.ARRAY_BUFFER,U.__webglMorphTargetsBuffers[Jb]);E.bufferData(E.ARRAY_BUFFER,Yb[Jb],T);aa.morphNormals&&(E.bindBuffer(E.ARRAY_BUFFER,U.__webglMorphNormalsBuffers[Jb]),
E.bufferData(E.ARRAY_BUFFER,nc[Jb],T))}}if(Mc.length){ba=0;for(ja=Wa.length;ba<ja;ba++)ia=ec[Wa[ba]],fb=Mc[ia.a],kb=Mc[ia.b],lb=Mc[ia.c],Pb[ib]=fb.x,Pb[ib+1]=fb.y,Pb[ib+2]=fb.z,Pb[ib+3]=fb.w,Pb[ib+4]=kb.x,Pb[ib+5]=kb.y,Pb[ib+6]=kb.z,Pb[ib+7]=kb.w,Pb[ib+8]=lb.x,Pb[ib+9]=lb.y,Pb[ib+10]=lb.z,Pb[ib+11]=lb.w,mb=ad[ia.a],nb=ad[ia.b],ub=ad[ia.c],Ob[ib]=mb.x,Ob[ib+1]=mb.y,Ob[ib+2]=mb.z,Ob[ib+3]=mb.w,Ob[ib+4]=nb.x,Ob[ib+5]=nb.y,Ob[ib+6]=nb.z,Ob[ib+7]=nb.w,Ob[ib+8]=ub.x,Ob[ib+9]=ub.y,Ob[ib+10]=ub.z,Ob[ib+11]=
ub.w,ib+=12;0<ib&&(E.bindBuffer(E.ARRAY_BUFFER,U.__webglSkinIndicesBuffer),E.bufferData(E.ARRAY_BUFFER,Ob,T),E.bindBuffer(E.ARRAY_BUFFER,U.__webglSkinWeightsBuffer),E.bufferData(E.ARRAY_BUFFER,Pb,T))}if(Ic&&ca){ba=0;for(ja=Wa.length;ba<ja;ba++)ia=ec[Wa[ba]],Ra=ia.vertexColors,Sa=ia.color,3===Ra.length&&ca===THREE.VertexColors?(Za=Ra[0],db=Ra[1],eb=Ra[2]):eb=db=Za=Sa,dc[Rb]=Za.r,dc[Rb+1]=Za.g,dc[Rb+2]=Za.b,dc[Rb+3]=db.r,dc[Rb+4]=db.g,dc[Rb+5]=db.b,dc[Rb+6]=eb.r,dc[Rb+7]=eb.g,dc[Rb+8]=eb.b,Rb+=9;0<
Rb&&(E.bindBuffer(E.ARRAY_BUFFER,U.__webglColorBuffer),E.bufferData(E.ARRAY_BUFFER,dc,T))}if(Hc&&zb.hasTangents){ba=0;for(ja=Wa.length;ba<ja;ba++)ia=ec[Wa[ba]],Qa=ia.vertexTangents,sb=Qa[0],Ya=Qa[1],Ua=Qa[2],Nb[Kb]=sb.x,Nb[Kb+1]=sb.y,Nb[Kb+2]=sb.z,Nb[Kb+3]=sb.w,Nb[Kb+4]=Ya.x,Nb[Kb+5]=Ya.y,Nb[Kb+6]=Ya.z,Nb[Kb+7]=Ya.w,Nb[Kb+8]=Ua.x,Nb[Kb+9]=Ua.y,Nb[Kb+10]=Ua.z,Nb[Kb+11]=Ua.w,Kb+=12;E.bindBuffer(E.ARRAY_BUFFER,U.__webglTangentBuffer);E.bufferData(E.ARRAY_BUFFER,Nb,T)}if(yc&&ea){ba=0;for(ja=Wa.length;ba<
ja;ba++)if(ia=ec[Wa[ba]],Ma=ia.vertexNormals,La=ia.normal,3===Ma.length&&ka)for(tb=0;3>tb;tb++)xb=Ma[tb],Cb[bc]=xb.x,Cb[bc+1]=xb.y,Cb[bc+2]=xb.z,bc+=3;else for(tb=0;3>tb;tb++)Cb[bc]=La.x,Cb[bc+1]=La.y,Cb[bc+2]=La.z,bc+=3;E.bindBuffer(E.ARRAY_BUFFER,U.__webglNormalBuffer);E.bufferData(E.ARRAY_BUFFER,Cb,T)}if(tc&&xc&&ga){ba=0;for(ja=Wa.length;ba<ja;ba++)if(ra=Wa[ba],Xa=xc[ra],void 0!==Xa)for(tb=0;3>tb;tb++)yb=Xa[tb],Ub[Fb]=yb.x,Ub[Fb+1]=yb.y,Fb+=2;0<Fb&&(E.bindBuffer(E.ARRAY_BUFFER,U.__webglUVBuffer),
E.bufferData(E.ARRAY_BUFFER,Ub,T))}if(tc&&zc&&ga){ba=0;for(ja=Wa.length;ba<ja;ba++)if(ra=Wa[ba],rb=zc[ra],void 0!==rb)for(tb=0;3>tb;tb++)Db=rb[tb],Vb[Gb]=Db.x,Vb[Gb+1]=Db.y,Gb+=2;0<Gb&&(E.bindBuffer(E.ARRAY_BUFFER,U.__webglUV2Buffer),E.bufferData(E.ARRAY_BUFFER,Vb,T))}if(wc){ba=0;for(ja=Wa.length;ba<ja;ba++)Lc[Lb]=Wb,Lc[Lb+1]=Wb+1,Lc[Lb+2]=Wb+2,Lb+=3,qc[oc]=Wb,qc[oc+1]=Wb+1,qc[oc+2]=Wb,qc[oc+3]=Wb+2,qc[oc+4]=Wb+1,qc[oc+5]=Wb+2,oc+=6,Wb+=3;E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,U.__webglFaceBuffer);E.bufferData(E.ELEMENT_ARRAY_BUFFER,
Lc,T);E.bindBuffer(E.ELEMENT_ARRAY_BUFFER,U.__webglLineBuffer);E.bufferData(E.ELEMENT_ARRAY_BUFFER,qc,T)}if(kc){tb=0;for(wb=kc.length;tb<wb;tb++)if(fa=kc[tb],fa.__original.needsUpdate){na=0;if(1===fa.size)if(void 0===fa.boundTo||"vertices"===fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)ia=ec[Wa[ba]],fa.array[na]=fa.value[ia.a],fa.array[na+1]=fa.value[ia.b],fa.array[na+2]=fa.value[ia.c],na+=3}else{if("faces"===fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)Eb=fa.value[Wa[ba]],fa.array[na]=Eb,fa.array[na+
1]=Eb,fa.array[na+2]=Eb,na+=3}}else if(2===fa.size)if(void 0===fa.boundTo||"vertices"===fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)ia=ec[Wa[ba]],ya=fa.value[ia.a],oa=fa.value[ia.b],Na=fa.value[ia.c],fa.array[na]=ya.x,fa.array[na+1]=ya.y,fa.array[na+2]=oa.x,fa.array[na+3]=oa.y,fa.array[na+4]=Na.x,fa.array[na+5]=Na.y,na+=6}else{if("faces"===fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)Na=oa=ya=Eb=fa.value[Wa[ba]],fa.array[na]=ya.x,fa.array[na+1]=ya.y,fa.array[na+2]=oa.x,fa.array[na+3]=oa.y,fa.array[na+
4]=Na.x,fa.array[na+5]=Na.y,na+=6}}else if(3===fa.size){var hb;hb="c"===fa.type?["r","g","b"]:["x","y","z"];if(void 0===fa.boundTo||"vertices"===fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)ia=ec[Wa[ba]],ya=fa.value[ia.a],oa=fa.value[ia.b],Na=fa.value[ia.c],fa.array[na]=ya[hb[0]],fa.array[na+1]=ya[hb[1]],fa.array[na+2]=ya[hb[2]],fa.array[na+3]=oa[hb[0]],fa.array[na+4]=oa[hb[1]],fa.array[na+5]=oa[hb[2]],fa.array[na+6]=Na[hb[0]],fa.array[na+7]=Na[hb[1]],fa.array[na+8]=Na[hb[2]],na+=9}else if("faces"===
fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)Na=oa=ya=Eb=fa.value[Wa[ba]],fa.array[na]=ya[hb[0]],fa.array[na+1]=ya[hb[1]],fa.array[na+2]=ya[hb[2]],fa.array[na+3]=oa[hb[0]],fa.array[na+4]=oa[hb[1]],fa.array[na+5]=oa[hb[2]],fa.array[na+6]=Na[hb[0]],fa.array[na+7]=Na[hb[1]],fa.array[na+8]=Na[hb[2]],na+=9}else if("faceVertices"===fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)Eb=fa.value[Wa[ba]],ya=Eb[0],oa=Eb[1],Na=Eb[2],fa.array[na]=ya[hb[0]],fa.array[na+1]=ya[hb[1]],fa.array[na+2]=ya[hb[2]],fa.array[na+
3]=oa[hb[0]],fa.array[na+4]=oa[hb[1]],fa.array[na+5]=oa[hb[2]],fa.array[na+6]=Na[hb[0]],fa.array[na+7]=Na[hb[1]],fa.array[na+8]=Na[hb[2]],na+=9}}else if(4===fa.size)if(void 0===fa.boundTo||"vertices"===fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)ia=ec[Wa[ba]],ya=fa.value[ia.a],oa=fa.value[ia.b],Na=fa.value[ia.c],fa.array[na]=ya.x,fa.array[na+1]=ya.y,fa.array[na+2]=ya.z,fa.array[na+3]=ya.w,fa.array[na+4]=oa.x,fa.array[na+5]=oa.y,fa.array[na+6]=oa.z,fa.array[na+7]=oa.w,fa.array[na+8]=Na.x,fa.array[na+
9]=Na.y,fa.array[na+10]=Na.z,fa.array[na+11]=Na.w,na+=12}else if("faces"===fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)Na=oa=ya=Eb=fa.value[Wa[ba]],fa.array[na]=ya.x,fa.array[na+1]=ya.y,fa.array[na+2]=ya.z,fa.array[na+3]=ya.w,fa.array[na+4]=oa.x,fa.array[na+5]=oa.y,fa.array[na+6]=oa.z,fa.array[na+7]=oa.w,fa.array[na+8]=Na.x,fa.array[na+9]=Na.y,fa.array[na+10]=Na.z,fa.array[na+11]=Na.w,na+=12}else if("faceVertices"===fa.boundTo){ba=0;for(ja=Wa.length;ba<ja;ba++)Eb=fa.value[Wa[ba]],ya=Eb[0],oa=Eb[1],
Na=Eb[2],fa.array[na]=ya.x,fa.array[na+1]=ya.y,fa.array[na+2]=ya.z,fa.array[na+3]=ya.w,fa.array[na+4]=oa.x,fa.array[na+5]=oa.y,fa.array[na+6]=oa.z,fa.array[na+7]=oa.w,fa.array[na+8]=Na.x,fa.array[na+9]=Na.y,fa.array[na+10]=Na.z,fa.array[na+11]=Na.w,na+=12}E.bindBuffer(E.ARRAY_BUFFER,fa.buffer);E.bufferData(E.ARRAY_BUFFER,fa.array,T)}}$&&(delete U.__inittedArrays,delete U.__colorArray,delete U.__normalArray,delete U.__tangentArray,delete U.__uvArray,delete U.__uv2Array,delete U.__faceArray,delete U.__vertexArray,
delete U.__lineArray,delete U.__skinIndexArray,delete U.__skinWeightArray)}}D.verticesNeedUpdate=!1;D.morphTargetsNeedUpdate=!1;D.elementsNeedUpdate=!1;D.uvsNeedUpdate=!1;D.normalsNeedUpdate=!1;D.colorsNeedUpdate=!1;D.tangentsNeedUpdate=!1;D.buffersNeedUpdate=!1;M.attributes&&L(M)}else if(B instanceof THREE.Line){M=p(B,D);F=M.attributes&&N(M);if(D.verticesNeedUpdate||D.colorsNeedUpdate||D.lineDistancesNeedUpdate||F){var Qb=D,Oc=E.DYNAMIC_DRAW,Dc=void 0,Ec=void 0,Fc=void 0,Pc=void 0,gb=void 0,Qc=void 0,
Bc=Qb.vertices,Cc=Qb.colors,fd=Qb.lineDistances,Vc=Bc.length,Wc=Cc.length,Xc=fd.length,Rc=Qb.__vertexArray,Sc=Qb.__colorArray,gd=Qb.__lineDistanceArray,Yc=Qb.colorsNeedUpdate,Zc=Qb.lineDistancesNeedUpdate,bd=Qb.__webglCustomAttributesList,Tc=void 0,hd=void 0,pb=void 0,uc=void 0,Ab=void 0,cb=void 0;if(Qb.verticesNeedUpdate){for(Dc=0;Dc<Vc;Dc++)Pc=Bc[Dc],gb=3*Dc,Rc[gb]=Pc.x,Rc[gb+1]=Pc.y,Rc[gb+2]=Pc.z;E.bindBuffer(E.ARRAY_BUFFER,Qb.__webglVertexBuffer);E.bufferData(E.ARRAY_BUFFER,Rc,Oc)}if(Yc){for(Ec=
0;Ec<Wc;Ec++)Qc=Cc[Ec],gb=3*Ec,Sc[gb]=Qc.r,Sc[gb+1]=Qc.g,Sc[gb+2]=Qc.b;E.bindBuffer(E.ARRAY_BUFFER,Qb.__webglColorBuffer);E.bufferData(E.ARRAY_BUFFER,Sc,Oc)}if(Zc){for(Fc=0;Fc<Xc;Fc++)gd[Fc]=fd[Fc];E.bindBuffer(E.ARRAY_BUFFER,Qb.__webglLineDistanceBuffer);E.bufferData(E.ARRAY_BUFFER,gd,Oc)}if(bd){Tc=0;for(hd=bd.length;Tc<hd;Tc++)if(cb=bd[Tc],cb.needsUpdate&&(void 0===cb.boundTo||"vertices"===cb.boundTo)){gb=0;uc=cb.value.length;if(1===cb.size)for(pb=0;pb<uc;pb++)cb.array[pb]=cb.value[pb];else if(2===
cb.size)for(pb=0;pb<uc;pb++)Ab=cb.value[pb],cb.array[gb]=Ab.x,cb.array[gb+1]=Ab.y,gb+=2;else if(3===cb.size)if("c"===cb.type)for(pb=0;pb<uc;pb++)Ab=cb.value[pb],cb.array[gb]=Ab.r,cb.array[gb+1]=Ab.g,cb.array[gb+2]=Ab.b,gb+=3;else for(pb=0;pb<uc;pb++)Ab=cb.value[pb],cb.array[gb]=Ab.x,cb.array[gb+1]=Ab.y,cb.array[gb+2]=Ab.z,gb+=3;else if(4===cb.size)for(pb=0;pb<uc;pb++)Ab=cb.value[pb],cb.array[gb]=Ab.x,cb.array[gb+1]=Ab.y,cb.array[gb+2]=Ab.z,cb.array[gb+3]=Ab.w,gb+=4;E.bindBuffer(E.ARRAY_BUFFER,cb.buffer);
E.bufferData(E.ARRAY_BUFFER,cb.array,Oc)}}}D.verticesNeedUpdate=!1;D.colorsNeedUpdate=!1;D.lineDistancesNeedUpdate=!1;M.attributes&&L(M)}else if(B instanceof THREE.ParticleSystem){M=p(B,D);F=M.attributes&&N(M);if(D.verticesNeedUpdate||D.colorsNeedUpdate||B.sortParticles||F){var gc=D,cd=E.DYNAMIC_DRAW,Gc=B,Bb=void 0,hc=void 0,ic=void 0,Pa=void 0,jc=void 0,pc=void 0,Uc=gc.vertices,dd=Uc.length,ed=gc.colors,id=ed.length,rc=gc.__vertexArray,sc=gc.__colorArray,lc=gc.__sortArray,jd=gc.verticesNeedUpdate,
kd=gc.colorsNeedUpdate,mc=gc.__webglCustomAttributesList,Sb=void 0,vc=void 0,Ta=void 0,Tb=void 0,$a=void 0,Oa=void 0;if(Gc.sortParticles){Zb.copy(vb);Zb.multiply(Gc.matrixWorld);for(Bb=0;Bb<dd;Bb++)ic=Uc[Bb],jb.copy(ic),jb.applyProjection(Zb),lc[Bb]=[jb.z,Bb];lc.sort(C);for(Bb=0;Bb<dd;Bb++)ic=Uc[lc[Bb][1]],Pa=3*Bb,rc[Pa]=ic.x,rc[Pa+1]=ic.y,rc[Pa+2]=ic.z;for(hc=0;hc<id;hc++)Pa=3*hc,pc=ed[lc[hc][1]],sc[Pa]=pc.r,sc[Pa+1]=pc.g,sc[Pa+2]=pc.b;if(mc){Sb=0;for(vc=mc.length;Sb<vc;Sb++)if(Oa=mc[Sb],void 0===
Oa.boundTo||"vertices"===Oa.boundTo)if(Pa=0,Tb=Oa.value.length,1===Oa.size)for(Ta=0;Ta<Tb;Ta++)jc=lc[Ta][1],Oa.array[Ta]=Oa.value[jc];else if(2===Oa.size)for(Ta=0;Ta<Tb;Ta++)jc=lc[Ta][1],$a=Oa.value[jc],Oa.array[Pa]=$a.x,Oa.array[Pa+1]=$a.y,Pa+=2;else if(3===Oa.size)if("c"===Oa.type)for(Ta=0;Ta<Tb;Ta++)jc=lc[Ta][1],$a=Oa.value[jc],Oa.array[Pa]=$a.r,Oa.array[Pa+1]=$a.g,Oa.array[Pa+2]=$a.b,Pa+=3;else for(Ta=0;Ta<Tb;Ta++)jc=lc[Ta][1],$a=Oa.value[jc],Oa.array[Pa]=$a.x,Oa.array[Pa+1]=$a.y,Oa.array[Pa+
2]=$a.z,Pa+=3;else if(4===Oa.size)for(Ta=0;Ta<Tb;Ta++)jc=lc[Ta][1],$a=Oa.value[jc],Oa.array[Pa]=$a.x,Oa.array[Pa+1]=$a.y,Oa.array[Pa+2]=$a.z,Oa.array[Pa+3]=$a.w,Pa+=4}}else{if(jd)for(Bb=0;Bb<dd;Bb++)ic=Uc[Bb],Pa=3*Bb,rc[Pa]=ic.x,rc[Pa+1]=ic.y,rc[Pa+2]=ic.z;if(kd)for(hc=0;hc<id;hc++)pc=ed[hc],Pa=3*hc,sc[Pa]=pc.r,sc[Pa+1]=pc.g,sc[Pa+2]=pc.b;if(mc){Sb=0;for(vc=mc.length;Sb<vc;Sb++)if(Oa=mc[Sb],Oa.needsUpdate&&(void 0===Oa.boundTo||"vertices"===Oa.boundTo))if(Tb=Oa.value.length,Pa=0,1===Oa.size)for(Ta=
0;Ta<Tb;Ta++)Oa.array[Ta]=Oa.value[Ta];else if(2===Oa.size)for(Ta=0;Ta<Tb;Ta++)$a=Oa.value[Ta],Oa.array[Pa]=$a.x,Oa.array[Pa+1]=$a.y,Pa+=2;else if(3===Oa.size)if("c"===Oa.type)for(Ta=0;Ta<Tb;Ta++)$a=Oa.value[Ta],Oa.array[Pa]=$a.r,Oa.array[Pa+1]=$a.g,Oa.array[Pa+2]=$a.b,Pa+=3;else for(Ta=0;Ta<Tb;Ta++)$a=Oa.value[Ta],Oa.array[Pa]=$a.x,Oa.array[Pa+1]=$a.y,Oa.array[Pa+2]=$a.z,Pa+=3;else if(4===Oa.size)for(Ta=0;Ta<Tb;Ta++)$a=Oa.value[Ta],Oa.array[Pa]=$a.x,Oa.array[Pa+1]=$a.y,Oa.array[Pa+2]=$a.z,Oa.array[Pa+
3]=$a.w,Pa+=4}}if(jd||Gc.sortParticles)E.bindBuffer(E.ARRAY_BUFFER,gc.__webglVertexBuffer),E.bufferData(E.ARRAY_BUFFER,rc,cd);if(kd||Gc.sortParticles)E.bindBuffer(E.ARRAY_BUFFER,gc.__webglColorBuffer),E.bufferData(E.ARRAY_BUFFER,sc,cd);if(mc){Sb=0;for(vc=mc.length;Sb<vc;Sb++)if(Oa=mc[Sb],Oa.needsUpdate||Gc.sortParticles)E.bindBuffer(E.ARRAY_BUFFER,Oa.buffer),E.bufferData(E.ARRAY_BUFFER,Oa.array,cd)}}D.verticesNeedUpdate=!1;D.colorsNeedUpdate=!1;M.attributes&&L(M)}}};this.initMaterial=function(d,h,
k,p){var q,s,w,A;d.addEventListener("dispose",Ac);var B,C,D,H,F;d instanceof THREE.MeshDepthMaterial?F="depth":d instanceof THREE.MeshNormalMaterial?F="normal":d instanceof THREE.MeshBasicMaterial?F="basic":d instanceof THREE.MeshLambertMaterial?F="lambert":d instanceof THREE.MeshPhongMaterial?F="phong":d instanceof THREE.LineBasicMaterial?F="basic":d instanceof THREE.LineDashedMaterial?F="dashed":d instanceof THREE.ParticleSystemMaterial&&(F="particle_basic");if(F){var I=THREE.ShaderLib[F];d.uniforms=
THREE.UniformsUtils.clone(I.uniforms);d.vertexShader=I.vertexShader;d.fragmentShader=I.fragmentShader}var M=q=0,N=0,L=I=0;for(s=h.length;L<s;L++)w=h[L],w.onlyShadow||(w instanceof THREE.DirectionalLight&&q++,w instanceof THREE.PointLight&&M++,w instanceof THREE.SpotLight&&N++,w instanceof THREE.HemisphereLight&&I++);s=M;w=N;A=I;N=I=0;for(M=h.length;N<M;N++)L=h[N],L.castShadow&&(L instanceof THREE.SpotLight&&I++,L instanceof THREE.DirectionalLight&&!L.shadowCascade&&I++);H=I;tc&&p&&p.useVertexTexture?
D=1024:(h=E.getParameter(E.MAX_VERTEX_UNIFORM_VECTORS),h=Math.floor((h-20)/4),void 0!==p&&p instanceof THREE.SkinnedMesh&&(h=Math.min(p.bones.length,h),h<p.bones.length&&console.warn("WebGLRenderer: too many bones - "+p.bones.length+", this GPU supports just "+h+" (try OpenGL instead of ANGLE)")),D=h);a:{var N=d.fragmentShader,M=d.vertexShader,I=d.uniforms,h=d.attributes,L=d.defines,k={map:!!d.map,envMap:!!d.envMap,lightMap:!!d.lightMap,bumpMap:!!d.bumpMap,normalMap:!!d.normalMap,specularMap:!!d.specularMap,
vertexColors:d.vertexColors,fog:k,useFog:d.fog,fogExp:k instanceof THREE.FogExp2,sizeAttenuation:d.sizeAttenuation,skinning:d.skinning,maxBones:D,useVertexTexture:tc&&p&&p.useVertexTexture,morphTargets:d.morphTargets,morphNormals:d.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:q,maxPointLights:s,maxSpotLights:w,maxHemiLights:A,maxShadows:H,shadowMapEnabled:this.shadowMapEnabled&&p.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,
shadowMapCascade:this.shadowMapCascade,alphaTest:d.alphaTest,metal:d.metal,perPixel:d.perPixel,wrapAround:d.wrapAround,doubleSided:d.side===THREE.DoubleSide,flipSided:d.side===THREE.BackSide},p=d.index0AttributeName,O,P,S;q=[];F?q.push(F):(q.push(N),q.push(M));for(P in L)q.push(P),q.push(L[P]);for(O in k)q.push(O),q.push(k[O]);F=q.join();O=0;for(P=Ua.length;O<P;O++)if(q=Ua[O],q.code===F){q.usedTimes++;C=q.program;break a}O="SHADOWMAP_TYPE_BASIC";k.shadowMapType===THREE.PCFShadowMap?O="SHADOWMAP_TYPE_PCF":
k.shadowMapType===THREE.PCFSoftShadowMap&&(O="SHADOWMAP_TYPE_PCF_SOFT");P=[];for(S in L)q=L[S],!1!==q&&(q="#define "+S+" "+q,P.push(q));q=P.join("\n");S=E.createProgram();P=["precision "+ia+" float;","precision "+ia+" int;",q,wc?"#define VERTEX_TEXTURES":"",ka.gammaInput?"#define GAMMA_INPUT":"",ka.gammaOutput?"#define GAMMA_OUTPUT":"",ka.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+k.maxDirLights,"#define MAX_POINT_LIGHTS "+k.maxPointLights,"#define MAX_SPOT_LIGHTS "+
k.maxSpotLights,"#define MAX_HEMI_LIGHTS "+k.maxHemiLights,"#define MAX_SHADOWS "+k.maxShadows,"#define MAX_BONES "+k.maxBones,k.map?"#define USE_MAP":"",k.envMap?"#define USE_ENVMAP":"",k.lightMap?"#define USE_LIGHTMAP":"",k.bumpMap?"#define USE_BUMPMAP":"",k.normalMap?"#define USE_NORMALMAP":"",k.specularMap?"#define USE_SPECULARMAP":"",k.vertexColors?"#define USE_COLOR":"",k.skinning?"#define USE_SKINNING":"",k.useVertexTexture?"#define BONE_TEXTURE":"",k.morphTargets?"#define USE_MORPHTARGETS":
"",k.morphNormals?"#define USE_MORPHNORMALS":"",k.perPixel?"#define PHONG_PER_PIXEL":"",k.wrapAround?"#define WRAP_AROUND":"",k.doubleSided?"#define DOUBLE_SIDED":"",k.flipSided?"#define FLIP_SIDED":"",k.shadowMapEnabled?"#define USE_SHADOWMAP":"",k.shadowMapEnabled?"#define "+O:"",k.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",k.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",k.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
O=["precision "+ia+" float;","precision "+ia+" int;",k.bumpMap||k.normalMap?"#extension GL_OES_standard_derivatives : enable":"",q,"#define MAX_DIR_LIGHTS "+k.maxDirLights,"#define MAX_POINT_LIGHTS "+k.maxPointLights,"#define MAX_SPOT_LIGHTS "+k.maxSpotLights,"#define MAX_HEMI_LIGHTS "+k.maxHemiLights,"#define MAX_SHADOWS "+k.maxShadows,k.alphaTest?"#define ALPHATEST "+k.alphaTest:"",ka.gammaInput?"#define GAMMA_INPUT":"",ka.gammaOutput?"#define GAMMA_OUTPUT":"",ka.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":
"",k.useFog&&k.fog?"#define USE_FOG":"",k.useFog&&k.fogExp?"#define FOG_EXP2":"",k.map?"#define USE_MAP":"",k.envMap?"#define USE_ENVMAP":"",k.lightMap?"#define USE_LIGHTMAP":"",k.bumpMap?"#define USE_BUMPMAP":"",k.normalMap?"#define USE_NORMALMAP":"",k.specularMap?"#define USE_SPECULARMAP":"",k.vertexColors?"#define USE_COLOR":"",k.metal?"#define METAL":"",k.perPixel?"#define PHONG_PER_PIXEL":"",k.wrapAround?"#define WRAP_AROUND":"",k.doubleSided?"#define DOUBLE_SIDED":"",k.flipSided?"#define FLIP_SIDED":
"",k.shadowMapEnabled?"#define USE_SHADOWMAP":"",k.shadowMapEnabled?"#define "+O:"",k.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",k.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");P=aa("vertex",P+M);O=aa("fragment",O+N);E.attachShader(S,P);E.attachShader(S,O);p&&E.bindAttribLocation(S,0,p);E.linkProgram(S);E.getProgramParameter(S,E.LINK_STATUS)||(console.error("Could not initialise shader\nVALIDATE_STATUS: "+E.getProgramParameter(S,
E.VALIDATE_STATUS)+", gl error ["+E.getError()+"]"),console.error("Program Info Log: "+E.getProgramInfoLog(S)));E.deleteShader(O);E.deleteShader(P);S.uniforms={};S.attributes={};var Q;O="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");k.useVertexTexture?(O.push("boneTexture"),O.push("boneTextureWidth"),O.push("boneTextureHeight")):O.push("boneGlobalMatrices");for(Q in I)O.push(Q);Q=O;O=0;for(P=Q.length;O<P;O++)I=Q[O],S.uniforms[I]=
E.getUniformLocation(S,I);O="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(Q=0;Q<k.maxMorphTargets;Q++)O.push("morphTarget"+Q);for(Q=0;Q<k.maxMorphNormals;Q++)O.push("morphNormal"+Q);for(C in h)O.push(C);C=O;Q=0;for(h=C.length;Q<h;Q++)O=C[Q],S.attributes[O]=E.getAttribLocation(S,O);S.id=rb++;Ua.push({program:S,code:F,usedTimes:1});ka.info.memory.programs=Ua.length;C=S}d.program=C;Q=d.program.attributes;if(d.morphTargets){d.numSupportedMorphTargets=0;h="morphTarget";
for(C=0;C<this.maxMorphTargets;C++)S=h+C,0<=Q[S]&&d.numSupportedMorphTargets++}if(d.morphNormals){d.numSupportedMorphNormals=0;h="morphNormal";for(C=0;C<this.maxMorphNormals;C++)S=h+C,0<=Q[S]&&d.numSupportedMorphNormals++}d.uniformsList=[];for(B in d.uniforms)d.uniformsList.push([d.uniforms[B],B])};this.setFaceCulling=function(d,h){d===THREE.CullFaceNone?E.disable(E.CULL_FACE):(h===THREE.FrontFaceDirectionCW?E.frontFace(E.CW):E.frontFace(E.CCW),d===THREE.CullFaceBack?E.cullFace(E.BACK):d===THREE.CullFaceFront?
E.cullFace(E.FRONT):E.cullFace(E.FRONT_AND_BACK),E.enable(E.CULL_FACE))};this.setMaterialFaces=function(d){var h=d.side===THREE.DoubleSide,d=d.side===THREE.BackSide;ya!==h&&(h?E.disable(E.CULL_FACE):E.enable(E.CULL_FACE),ya=h);Qa!==d&&(d?E.frontFace(E.CW):E.frontFace(E.CCW),Qa=d)};this.setDepthTest=function(d){ub!==d&&(d?E.enable(E.DEPTH_TEST):E.disable(E.DEPTH_TEST),ub=d)};this.setDepthWrite=function(d){eb!==d&&(E.depthMask(d),eb=d)};this.setBlending=function(d,h,k,p){d!==db&&(d===THREE.NoBlending?
E.disable(E.BLEND):d===THREE.AdditiveBlending?(E.enable(E.BLEND),E.blendEquation(E.FUNC_ADD),E.blendFunc(E.SRC_ALPHA,E.ONE)):d===THREE.SubtractiveBlending?(E.enable(E.BLEND),E.blendEquation(E.FUNC_ADD),E.blendFunc(E.ZERO,E.ONE_MINUS_SRC_COLOR)):d===THREE.MultiplyBlending?(E.enable(E.BLEND),E.blendEquation(E.FUNC_ADD),E.blendFunc(E.ZERO,E.SRC_COLOR)):d===THREE.CustomBlending?E.enable(E.BLEND):(E.enable(E.BLEND),E.blendEquationSeparate(E.FUNC_ADD,E.FUNC_ADD),E.blendFuncSeparate(E.SRC_ALPHA,E.ONE_MINUS_SRC_ALPHA,
E.ONE,E.ONE_MINUS_SRC_ALPHA)),db=d);if(d===THREE.CustomBlending){if(h!==kb&&(E.blendEquation(ga(h)),kb=h),k!==bb||p!==xb)E.blendFunc(ga(k),ga(p)),bb=k,xb=p}else xb=bb=kb=null};this.setTexture=function(d,h){if(d.needsUpdate){d.__webglInit||(d.__webglInit=!0,d.addEventListener("dispose",yc),d.__webglTexture=E.createTexture(),ka.info.memory.textures++);E.activeTexture(E.TEXTURE0+h);E.bindTexture(E.TEXTURE_2D,d.__webglTexture);E.pixelStorei(E.UNPACK_FLIP_Y_WEBGL,d.flipY);E.pixelStorei(E.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
d.premultiplyAlpha);E.pixelStorei(E.UNPACK_ALIGNMENT,d.unpackAlignment);var k=d.image,p=0===(k.width&k.width-1)&&0===(k.height&k.height-1),q=ga(d.format),s=ga(d.type);Z(E.TEXTURE_2D,d,p);var w=d.mipmaps;if(d instanceof THREE.DataTexture)if(0<w.length&&p){for(var A=0,B=w.length;A<B;A++)k=w[A],E.texImage2D(E.TEXTURE_2D,A,q,k.width,k.height,0,q,s,k.data);d.generateMipmaps=!1}else E.texImage2D(E.TEXTURE_2D,0,q,k.width,k.height,0,q,s,k.data);else if(d instanceof THREE.CompressedTexture){A=0;for(B=w.length;A<
B;A++)k=w[A],d.format!==THREE.RGBAFormat?E.compressedTexImage2D(E.TEXTURE_2D,A,q,k.width,k.height,0,k.data):E.texImage2D(E.TEXTURE_2D,A,q,k.width,k.height,0,q,s,k.data)}else if(0<w.length&&p){A=0;for(B=w.length;A<B;A++)k=w[A],E.texImage2D(E.TEXTURE_2D,A,q,q,s,k);d.generateMipmaps=!1}else E.texImage2D(E.TEXTURE_2D,0,q,q,s,d.image);d.generateMipmaps&&p&&E.generateMipmap(E.TEXTURE_2D);d.needsUpdate=!1;if(d.onUpdate)d.onUpdate()}else E.activeTexture(E.TEXTURE0+h),E.bindTexture(E.TEXTURE_2D,d.__webglTexture)};
this.setRenderTarget=function(d){var h=d instanceof THREE.WebGLRenderTargetCube;if(d&&!d.__webglFramebuffer){void 0===d.depthBuffer&&(d.depthBuffer=!0);void 0===d.stencilBuffer&&(d.stencilBuffer=!0);d.addEventListener("dispose",zc);d.__webglTexture=E.createTexture();ka.info.memory.textures++;var k=0===(d.width&d.width-1)&&0===(d.height&d.height-1),p=ga(d.format),q=ga(d.type);if(h){d.__webglFramebuffer=[];d.__webglRenderbuffer=[];E.bindTexture(E.TEXTURE_CUBE_MAP,d.__webglTexture);Z(E.TEXTURE_CUBE_MAP,
d,k);for(var s=0;6>s;s++){d.__webglFramebuffer[s]=E.createFramebuffer();d.__webglRenderbuffer[s]=E.createRenderbuffer();E.texImage2D(E.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,p,d.width,d.height,0,p,q,null);var w=d,A=E.TEXTURE_CUBE_MAP_POSITIVE_X+s;E.bindFramebuffer(E.FRAMEBUFFER,d.__webglFramebuffer[s]);E.framebufferTexture2D(E.FRAMEBUFFER,E.COLOR_ATTACHMENT0,A,w.__webglTexture,0);U(d.__webglRenderbuffer[s],d)}k&&E.generateMipmap(E.TEXTURE_CUBE_MAP)}else d.__webglFramebuffer=E.createFramebuffer(),d.__webglRenderbuffer=
d.shareDepthFrom?d.shareDepthFrom.__webglRenderbuffer:E.createRenderbuffer(),E.bindTexture(E.TEXTURE_2D,d.__webglTexture),Z(E.TEXTURE_2D,d,k),E.texImage2D(E.TEXTURE_2D,0,p,d.width,d.height,0,p,q,null),p=E.TEXTURE_2D,E.bindFramebuffer(E.FRAMEBUFFER,d.__webglFramebuffer),E.framebufferTexture2D(E.FRAMEBUFFER,E.COLOR_ATTACHMENT0,p,d.__webglTexture,0),d.shareDepthFrom?d.depthBuffer&&!d.stencilBuffer?E.framebufferRenderbuffer(E.FRAMEBUFFER,E.DEPTH_ATTACHMENT,E.RENDERBUFFER,d.__webglRenderbuffer):d.depthBuffer&&
d.stencilBuffer&&E.framebufferRenderbuffer(E.FRAMEBUFFER,E.DEPTH_STENCIL_ATTACHMENT,E.RENDERBUFFER,d.__webglRenderbuffer):U(d.__webglRenderbuffer,d),k&&E.generateMipmap(E.TEXTURE_2D);h?E.bindTexture(E.TEXTURE_CUBE_MAP,null):E.bindTexture(E.TEXTURE_2D,null);E.bindRenderbuffer(E.RENDERBUFFER,null);E.bindFramebuffer(E.FRAMEBUFFER,null)}d?(h=h?d.__webglFramebuffer[d.activeCubeFace]:d.__webglFramebuffer,k=d.width,d=d.height,q=p=0):(h=null,k=Cb,d=Yb,p=Ub,q=Vb);h!==Xa&&(E.bindFramebuffer(E.FRAMEBUFFER,h),
E.viewport(p,q,k,d),Xa=h);nc=k;kc=d};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(d,h,k){this.width=d;this.height=h;k=k||{};this.wrapS=void 0!==k.wrapS?k.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==k.wrapT?k.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==k.magFilter?k.magFilter:THREE.LinearFilter;this.minFilter=void 0!==k.minFilter?k.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==k.anisotropy?k.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==k.format?k.format:
THREE.RGBAFormat;this.type=void 0!==k.type?k.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==k.depthBuffer?k.depthBuffer:!0;this.stencilBuffer=void 0!==k.stencilBuffer?k.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,clone:function(){var d=new THREE.WebGLRenderTarget(this.width,this.height);d.wrapS=this.wrapS;d.wrapT=this.wrapT;d.magFilter=this.magFilter;d.minFilter=this.minFilter;d.anisotropy=this.anisotropy;d.offset.copy(this.offset);d.repeat.copy(this.repeat);d.format=this.format;d.type=this.type;d.depthBuffer=this.depthBuffer;d.stencilBuffer=this.stencilBuffer;d.generateMipmaps=this.generateMipmaps;d.shareDepthFrom=this.shareDepthFrom;
return d},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype);THREE.WebGLRenderTargetCube=function(d,h,k){THREE.WebGLRenderTarget.call(this,d,h,k);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};
THREE.RenderableVertex.prototype.copy=function(d){this.positionWorld.copy(d.positionWorld);this.positionScreen.copy(d.positionScreen)};
THREE.RenderableFace3=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=
0};THREE.RenderableObject=function(){this.id=0;this.object=null;this.z=0};THREE.RenderableSprite=function(){this.id=0;this.object=null;this.rotation=this.z=this.y=this.x=0;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.id=0;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null;this.z=0};
THREE.GeometryUtils={merge:function(d,h,k){var p,q,w=d.vertices.length,s=h instanceof THREE.Mesh?h.geometry:h,A=d.vertices,B=s.vertices,C=d.faces,D=s.faces,d=d.faceVertexUvs[0],s=s.faceVertexUvs[0];void 0===k&&(k=0);h instanceof THREE.Mesh&&(h.matrixAutoUpdate&&h.updateMatrix(),p=h.matrix,q=(new THREE.Matrix3).getNormalMatrix(p));for(var h=0,F=B.length;h<F;h++){var H=B[h].clone();p&&H.applyMatrix4(p);A.push(H)}h=0;for(F=D.length;h<F;h++){var H=D[h],I,M,N=H.vertexNormals,L=H.vertexColors;I=new THREE.Face3(H.a+
w,H.b+w,H.c+w);I.normal.copy(H.normal);q&&I.normal.applyMatrix3(q).normalize();A=0;for(B=N.length;A<B;A++)M=N[A].clone(),q&&M.applyMatrix3(q).normalize(),I.vertexNormals.push(M);I.color.copy(H.color);A=0;for(B=L.length;A<B;A++)M=L[A],I.vertexColors.push(M.clone());I.materialIndex=H.materialIndex+k;I.centroid.copy(H.centroid);p&&I.centroid.applyMatrix4(p);C.push(I)}h=0;for(F=s.length;h<F;h++){k=s[h];p=[];A=0;for(B=k.length;A<B;A++)p.push(new THREE.Vector2(k[A].x,k[A].y));d.push(p)}},randomPointInTriangle:function(){var d=
new THREE.Vector3;return function(h,k,p){var q=new THREE.Vector3,w=THREE.Math.random16(),s=THREE.Math.random16();1<w+s&&(w=1-w,s=1-s);var A=1-w-s;q.copy(h);q.multiplyScalar(w);d.copy(k);d.multiplyScalar(s);q.add(d);d.copy(p);d.multiplyScalar(A);q.add(d);return q}}(),randomPointInFace:function(d,h){return THREE.GeometryUtils.randomPointInTriangle(h.vertices[d.a],h.vertices[d.b],h.vertices[d.c])},randomPointsInGeometry:function(d,h){function k(d){function h(k,p){if(p<k)return k;var q=k+Math.floor((p-
k)/2);return C[q]>d?h(k,q-1):C[q]<d?h(q+1,p):q}return h(0,C.length-1)}var p,q,w=d.faces,s=d.vertices,A=w.length,B=0,C=[],D,F,H;for(q=0;q<A;q++)p=w[q],D=s[p.a],F=s[p.b],H=s[p.c],p._area=THREE.GeometryUtils.triangleArea(D,F,H),B+=p._area,C[q]=B;p=[];for(q=0;q<h;q++)s=THREE.Math.random16()*B,s=k(s),p[q]=THREE.GeometryUtils.randomPointInFace(w[s],d,!0);return p},triangleArea:function(){var d=new THREE.Vector3,h=new THREE.Vector3;return function(k,p,q){d.subVectors(p,k);h.subVectors(q,k);d.cross(h);return 0.5*
d.length()}}(),center:function(d){d.computeBoundingBox();var h=d.boundingBox,k=new THREE.Vector3;k.addVectors(h.min,h.max);k.multiplyScalar(-0.5);d.applyMatrix((new THREE.Matrix4).makeTranslation(k.x,k.y,k.z));d.computeBoundingBox();return k},triangulateQuads:function(d){var h,k,p,q,w=[],s=[];h=0;for(k=d.faceVertexUvs.length;h<k;h++)s[h]=[];h=0;for(k=d.faces.length;h<k;h++){w.push(d.faces[h]);p=0;for(q=d.faceVertexUvs.length;p<q;p++)s[p].push(d.faceVertexUvs[p][h])}d.faces=w;d.faceVertexUvs=s;d.computeCentroids();
d.computeFaceNormals();d.computeVertexNormals();d.hasTangents&&d.computeTangents()}};
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(d,h,k){var p=new THREE.ImageLoader;p.crossOrigin=this.crossOrigin;var q=new THREE.Texture(void 0,h),h=p.load(d,function(){q.needsUpdate=!0;k&&k(q)});q.image=h;q.sourceFile=d;return q},loadCompressedTexture:function(d,h,k,p){var q=new THREE.CompressedTexture;q.mapping=h;var w=new XMLHttpRequest;w.onload=function(){var d=THREE.ImageUtils.parseDDS(w.response,!0);q.format=d.format;q.mipmaps=d.mipmaps;q.image.width=d.width;q.image.height=d.height;
q.generateMipmaps=!1;q.needsUpdate=!0;k&&k(q)};w.onerror=p;w.open("GET",d,!0);w.responseType="arraybuffer";w.send(null);return q},loadTextureCube:function(d,h,k,p){var q=[];q.loadCount=0;var w=new THREE.Texture;w.image=q;void 0!==h&&(w.mapping=h);w.flipY=!1;for(var h=0,s=d.length;h<s;++h){var A=new Image;q[h]=A;A.onload=function(){q.loadCount+=1;6===q.loadCount&&(w.needsUpdate=!0,k&&k(w))};A.onerror=p;A.crossOrigin=this.crossOrigin;A.src=d[h]}return w},loadCompressedTextureCube:function(d,h,k,p){var q=
[];q.loadCount=0;var w=new THREE.CompressedTexture;w.image=q;void 0!==h&&(w.mapping=h);w.flipY=!1;w.generateMipmaps=!1;h=function(d,h){return function(){var p=THREE.ImageUtils.parseDDS(d.response,!0);h.format=p.format;h.mipmaps=p.mipmaps;h.width=p.width;h.height=p.height;q.loadCount+=1;6===q.loadCount&&(w.format=p.format,w.needsUpdate=!0,k&&k(w))}};if(d instanceof Array)for(var s=0,A=d.length;s<A;++s){var B={};q[s]=B;var C=new XMLHttpRequest;C.onload=h(C,B);C.onerror=p;B=d[s];C.open("GET",B,!0);C.responseType=
"arraybuffer";C.send(null)}else C=new XMLHttpRequest,C.onload=function(){var d=THREE.ImageUtils.parseDDS(C.response,!0);if(d.isCubemap){for(var h=d.mipmaps.length/d.mipmapCount,p=0;p<h;p++){q[p]={mipmaps:[]};for(var s=0;s<d.mipmapCount;s++)q[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+s]),q[p].format=d.format,q[p].width=d.width,q[p].height=d.height}w.format=d.format;w.needsUpdate=!0;k&&k(w)}},C.onerror=p,C.open("GET",d,!0),C.responseType="arraybuffer",C.send(null);return w},loadDDSTexture:function(d,
h,k,p){var q=[];q.loadCount=0;var w=new THREE.CompressedTexture;w.image=q;void 0!==h&&(w.mapping=h);w.flipY=!1;w.generateMipmaps=!1;var s=new XMLHttpRequest;s.onload=function(){var d=THREE.ImageUtils.parseDDS(s.response,!0);if(d.isCubemap)for(var h=d.mipmaps.length/d.mipmapCount,p=0;p<h;p++){q[p]={mipmaps:[]};for(var D=0;D<d.mipmapCount;D++)q[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+D]),q[p].format=d.format,q[p].width=d.width,q[p].height=d.height}else w.image.width=d.width,w.image.height=d.height,
w.mipmaps=d.mipmaps;w.format=d.format;w.needsUpdate=!0;k&&k(w)};s.onerror=p;s.open("GET",d,!0);s.responseType="arraybuffer";s.send(null);return w},parseDDS:function(d,h){function k(d){return d.charCodeAt(0)+(d.charCodeAt(1)<<8)+(d.charCodeAt(2)<<16)+(d.charCodeAt(3)<<24)}var p={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},q=k("DXT1"),w=k("DXT3"),s=k("DXT5"),A=new Int32Array(d,0,31);if(542327876!==A[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),p;if(!A[20]&
4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),p;var B=A[21],C=!1;switch(B){case q:q=8;p.format=THREE.RGB_S3TC_DXT1_Format;break;case w:q=16;p.format=THREE.RGBA_S3TC_DXT3_Format;break;case s:q=16;p.format=THREE.RGBA_S3TC_DXT5_Format;break;default:if(32==A[22]&&A[23]&16711680&&A[24]&65280&&A[25]&255&&A[26]&4278190080)C=!0,q=64,p.format=THREE.RGBAFormat;else return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(B&
255,B>>8&255,B>>16&255,B>>24&255)),p}p.mipmapCount=1;A[2]&131072&&!1!==h&&(p.mipmapCount=Math.max(1,A[7]));p.isCubemap=A[28]&512?!0:!1;p.width=A[4];p.height=A[3];for(var A=A[1]+4,w=p.width,s=p.height,B=p.isCubemap?6:1,D=0;D<B;D++){for(var F=0;F<p.mipmapCount;F++){if(C){var H;H=w;for(var I=s,M=4*H*I,N=new Uint8Array(d,A,M),M=new Uint8Array(M),L=0,Q=0,P=0;P<I;P++)for(var O=0;O<H;O++){var R=N[Q];Q++;var $=N[Q];Q++;var T=N[Q];Q++;var S=N[Q];Q++;M[L]=T;L++;M[L]=$;L++;M[L]=R;L++;M[L]=S;L++}H=M;I=H.length}else I=
Math.max(4,w)/4*Math.max(4,s)/4*q,H=new Uint8Array(d,A,I);p.mipmaps.push({data:H,width:w,height:s});A+=I;w=Math.max(0.5*w,1);s=Math.max(0.5*s,1)}w=p.width;s=p.height}return p},getNormalMap:function(d,h){var k=function(d){var h=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);return[d[0]/h,d[1]/h,d[2]/h]},h=h|1,p=d.width,q=d.height,w=document.createElement("canvas");w.width=p;w.height=q;var s=w.getContext("2d");s.drawImage(d,0,0);for(var A=s.getImageData(0,0,p,q).data,B=s.createImageData(p,q),C=B.data,D=0;D<
p;D++)for(var F=0;F<q;F++){var H=0>F-1?0:F-1,I=F+1>q-1?q-1:F+1,M=0>D-1?0:D-1,N=D+1>p-1?p-1:D+1,L=[],Q=[0,0,A[4*(F*p+D)]/255*h];L.push([-1,0,A[4*(F*p+M)]/255*h]);L.push([-1,-1,A[4*(H*p+M)]/255*h]);L.push([0,-1,A[4*(H*p+D)]/255*h]);L.push([1,-1,A[4*(H*p+N)]/255*h]);L.push([1,0,A[4*(F*p+N)]/255*h]);L.push([1,1,A[4*(I*p+N)]/255*h]);L.push([0,1,A[4*(I*p+D)]/255*h]);L.push([-1,1,A[4*(I*p+M)]/255*h]);H=[];M=L.length;for(I=0;I<M;I++){var N=L[I],P=L[(I+1)%M],N=[N[0]-Q[0],N[1]-Q[1],N[2]-Q[2]],P=[P[0]-Q[0],
P[1]-Q[1],P[2]-Q[2]];H.push(k([N[1]*P[2]-N[2]*P[1],N[2]*P[0]-N[0]*P[2],N[0]*P[1]-N[1]*P[0]]))}L=[0,0,0];for(I=0;I<H.length;I++)L[0]+=H[I][0],L[1]+=H[I][1],L[2]+=H[I][2];L[0]/=H.length;L[1]/=H.length;L[2]/=H.length;Q=4*(F*p+D);C[Q]=255*((L[0]+1)/2)|0;C[Q+1]=255*((L[1]+1)/2)|0;C[Q+2]=255*L[2]|0;C[Q+3]=255}s.putImageData(B,0,0);return w},generateDataTexture:function(d,h,k){for(var p=d*h,q=new Uint8Array(3*p),w=Math.floor(255*k.r),s=Math.floor(255*k.g),k=Math.floor(255*k.b),A=0;A<p;A++)q[3*A]=w,q[3*A+
1]=s,q[3*A+2]=k;d=new THREE.DataTexture(q,d,h,THREE.RGBFormat);d.needsUpdate=!0;return d}};THREE.SceneUtils={createMultiMaterialObject:function(d,h){for(var k=new THREE.Object3D,p=0,q=h.length;p<q;p++)k.add(new THREE.Mesh(d,h[p]));return k},detach:function(d,h,k){d.applyMatrix(h.matrixWorld);h.remove(d);k.add(d)},attach:function(d,h,k){var p=new THREE.Matrix4;p.getInverse(k.matrixWorld);d.applyMatrix(p);h.remove(d);k.add(d)}};
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(d){var h=d.familyName.toLowerCase();this.faces[h]=this.faces[h]||{};this.faces[h][d.cssFontWeight]=this.faces[h][d.cssFontWeight]||{};this.faces[h][d.cssFontWeight][d.cssFontStyle]=d;return this.faces[h][d.cssFontWeight][d.cssFontStyle]=d},drawText:function(d){for(var h=this.getFace(),k=this.size/h.resolution,p=
0,q=String(d).split(""),w=q.length,s=[],d=0;d<w;d++){var A=new THREE.Path,A=this.extractGlyphPoints(q[d],h,k,p,A),p=p+A.offset;s.push(A.path)}return{paths:s,offset:p/2}},extractGlyphPoints:function(d,h,k,p,q){var w=[],s,A,B,C,D,F,H,I,M,N,L,Q=h.glyphs[d]||h.glyphs["?"];if(Q){if(Q.o){h=Q._cachedOutline||(Q._cachedOutline=Q.o.split(" "));C=h.length;for(d=0;d<C;)switch(B=h[d++],B){case "m":B=h[d++]*k+p;D=h[d++]*k;q.moveTo(B,D);break;case "l":B=h[d++]*k+p;D=h[d++]*k;q.lineTo(B,D);break;case "q":B=h[d++]*
k+p;D=h[d++]*k;I=h[d++]*k+p;M=h[d++]*k;q.quadraticCurveTo(I,M,B,D);if(s=w[w.length-1]){F=s.x;H=s.y;s=1;for(A=this.divisions;s<=A;s++){var P=s/A;THREE.Shape.Utils.b2(P,F,I,B);THREE.Shape.Utils.b2(P,H,M,D)}}break;case "b":if(B=h[d++]*k+p,D=h[d++]*k,I=h[d++]*k+p,M=h[d++]*-k,N=h[d++]*k+p,L=h[d++]*-k,q.bezierCurveTo(B,D,I,M,N,L),s=w[w.length-1]){F=s.x;H=s.y;s=1;for(A=this.divisions;s<=A;s++)P=s/A,THREE.Shape.Utils.b3(P,F,I,N,B),THREE.Shape.Utils.b3(P,H,M,L,D)}}}return{offset:Q.ha*k,path:q}}}};
THREE.FontUtils.generateShapes=function(d,h){var h=h||{},k=void 0!==h.curveSegments?h.curveSegments:4,p=void 0!==h.font?h.font:"helvetiker",q=void 0!==h.weight?h.weight:"normal",w=void 0!==h.style?h.style:"normal";THREE.FontUtils.size=void 0!==h.size?h.size:100;THREE.FontUtils.divisions=k;THREE.FontUtils.face=p;THREE.FontUtils.weight=q;THREE.FontUtils.style=w;k=THREE.FontUtils.drawText(d).paths;p=[];q=0;for(w=k.length;q<w;q++)Array.prototype.push.apply(p,k[q].toShapes());return p};
(function(d){var h=function(d){for(var h=d.length,q=0,w=h-1,s=0;s<h;w=s++)q+=d[w].x*d[s].y-d[s].x*d[w].y;return 0.5*q};d.Triangulate=function(d,p){var q=d.length;if(3>q)return null;var w=[],s=[],A=[],B,C,D;if(0<h(d))for(C=0;C<q;C++)s[C]=C;else for(C=0;C<q;C++)s[C]=q-1-C;var F=2*q;for(C=q-1;2<q;){if(0>=F--){console.log("Warning, unable to triangulate polygon!");break}B=C;q<=B&&(B=0);C=B+1;q<=C&&(C=0);D=C+1;q<=D&&(D=0);var H;a:{var I=H=void 0,M=void 0,N=void 0,L=void 0,Q=void 0,P=void 0,O=void 0,R=
void 0,I=d[s[B]].x,M=d[s[B]].y,N=d[s[C]].x,L=d[s[C]].y,Q=d[s[D]].x,P=d[s[D]].y;if(1E-10>(N-I)*(P-M)-(L-M)*(Q-I))H=!1;else{var $=void 0,T=void 0,S=void 0,Y=void 0,X=void 0,ea=void 0,aa=void 0,Z=void 0,U=void 0,V=void 0,U=Z=aa=R=O=void 0,$=Q-N,T=P-L,S=I-Q,Y=M-P,X=N-I,ea=L-M;for(H=0;H<q;H++)if(!(H===B||H===C||H===D))if(O=d[s[H]].x,R=d[s[H]].y,aa=O-I,Z=R-M,U=O-N,V=R-L,O-=Q,R-=P,U=$*V-T*U,aa=X*Z-ea*aa,Z=S*R-Y*O,-1E-10<=U&&-1E-10<=Z&&-1E-10<=aa){H=!1;break a}H=!0}}if(H){w.push([d[s[B]],d[s[C]],d[s[D]]]);
A.push([s[B],s[C],s[D]]);B=C;for(D=C+1;D<q;B++,D++)s[B]=s[D];q--;F=2*q}}return p?A:w};d.Triangulate.area=h;return d})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(d){d=this.getUtoTmapping(d);return this.getPoint(d)};
THREE.Curve.prototype.getPoints=function(d){d||(d=5);var h,k=[];for(h=0;h<=d;h++)k.push(this.getPoint(h/d));return k};THREE.Curve.prototype.getSpacedPoints=function(d){d||(d=5);var h,k=[];for(h=0;h<=d;h++)k.push(this.getPointAt(h/d));return k};THREE.Curve.prototype.getLength=function(){var d=this.getLengths();return d[d.length-1]};
THREE.Curve.prototype.getLengths=function(d){d||(d=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==d+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var h=[],k,p=this.getPoint(0),q,w=0;h.push(0);for(q=1;q<=d;q++)k=this.getPoint(q/d),w+=k.distanceTo(p),h.push(w),p=k;return this.cacheArcLengths=h};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(d,h){var k=this.getLengths(),p=0,q=k.length,w;w=h?h:d*k[q-1];for(var s=0,A=q-1,B;s<=A;)if(p=Math.floor(s+(A-s)/2),B=k[p]-w,0>B)s=p+1;else if(0<B)A=p-1;else{A=p;break}p=A;if(k[p]==w)return p/(q-1);s=k[p];return k=(p+(w-s)/(k[p+1]-s))/(q-1)};THREE.Curve.prototype.getTangent=function(d){var h=d-1E-4,d=d+1E-4;0>h&&(h=0);1<d&&(d=1);h=this.getPoint(h);return this.getPoint(d).clone().sub(h).normalize()};
THREE.Curve.prototype.getTangentAt=function(d){d=this.getUtoTmapping(d);return this.getTangent(d)};
THREE.Curve.Utils={tangentQuadraticBezier:function(d,h,k,p){return 2*(1-d)*(k-h)+2*d*(p-k)},tangentCubicBezier:function(d,h,k,p,q){return-3*h*(1-d)*(1-d)+3*k*(1-d)*(1-d)-6*d*k*(1-d)+6*d*p*(1-d)-3*d*d*p+3*d*d*q},tangentSpline:function(d){return 6*d*d-6*d+(3*d*d-4*d+1)+(-6*d*d+6*d)+(3*d*d-2*d)},interpolate:function(d,h,k,p,q){var d=0.5*(k-d),p=0.5*(p-h),w=q*q;return(2*h-2*k+d+p)*q*w+(-3*h+3*k-2*d-p)*w+d*q+h}};
THREE.Curve.create=function(d,h){d.prototype=Object.create(THREE.Curve.prototype);d.prototype.getPoint=h;return d};THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(d){this.curves.push(d)};THREE.CurvePath.prototype.checkConnection=function(){};
THREE.CurvePath.prototype.closePath=function(){var d=this.curves[0].getPoint(0),h=this.curves[this.curves.length-1].getPoint(1);d.equals(h)||this.curves.push(new THREE.LineCurve(h,d))};THREE.CurvePath.prototype.getPoint=function(d){for(var h=d*this.getLength(),k=this.getCurveLengths(),d=0;d<k.length;){if(k[d]>=h)return h=k[d]-h,d=this.curves[d],h=1-h/d.getLength(),d.getPointAt(h);d++}return null};THREE.CurvePath.prototype.getLength=function(){var d=this.getCurveLengths();return d[d.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var d=[],h=0,k,p=this.curves.length;for(k=0;k<p;k++)h+=this.curves[k].getLength(),d.push(h);return this.cacheLengths=d};
THREE.CurvePath.prototype.getBoundingBox=function(){var d=this.getPoints(),h,k,p,q,w,s;h=k=Number.NEGATIVE_INFINITY;q=w=Number.POSITIVE_INFINITY;var A,B,C,D,F=d[0]instanceof THREE.Vector3;D=F?new THREE.Vector3:new THREE.Vector2;B=0;for(C=d.length;B<C;B++)A=d[B],A.x>h?h=A.x:A.x<q&&(q=A.x),A.y>k?k=A.y:A.y<w&&(w=A.y),F&&(A.z>p?p=A.z:A.z<s&&(s=A.z)),D.add(A);d={minX:q,minY:w,maxX:h,maxY:k,centroid:D.divideScalar(C)};F&&(d.maxZ=p,d.minZ=s);return d};
THREE.CurvePath.prototype.createPointsGeometry=function(d){d=this.getPoints(d,!0);return this.createGeometry(d)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(d){d=this.getSpacedPoints(d,!0);return this.createGeometry(d)};THREE.CurvePath.prototype.createGeometry=function(d){for(var h=new THREE.Geometry,k=0;k<d.length;k++)h.vertices.push(new THREE.Vector3(d[k].x,d[k].y,d[k].z||0));return h};THREE.CurvePath.prototype.addWrapPath=function(d){this.bends.push(d)};
THREE.CurvePath.prototype.getTransformedPoints=function(d,h){var k=this.getPoints(d),p,q;h||(h=this.bends);p=0;for(q=h.length;p<q;p++)k=this.getWrapPoints(k,h[p]);return k};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(d,h){var k=this.getSpacedPoints(d),p,q;h||(h=this.bends);p=0;for(q=h.length;p<q;p++)k=this.getWrapPoints(k,h[p]);return k};
THREE.CurvePath.prototype.getWrapPoints=function(d,h){var k=this.getBoundingBox(),p,q,w,s,A,B;p=0;for(q=d.length;p<q;p++)w=d[p],s=w.x,A=w.y,B=s/k.maxX,B=h.getUtoTmapping(B,s),s=h.getPoint(B),A=h.getNormalVector(B).multiplyScalar(A),w.x=s.x+A.x,w.y=s.y+A.y;return d};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(d){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||d)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),
this.matrixWorldNeedsUpdate=!1,d=!0;for(var h=0,k=this.children.length;h<k;h++)this.children[h].updateMatrixWorld(d)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(d){THREE.CurvePath.call(this);this.actions=[];d&&this.fromPoints(d)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(d){this.moveTo(d[0].x,d[0].y);for(var h=1,k=d.length;h<k;h++)this.lineTo(d[h].x,d[h].y)};
THREE.Path.prototype.moveTo=function(d,h){var k=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:k})};THREE.Path.prototype.lineTo=function(d,h){var k=Array.prototype.slice.call(arguments),p=this.actions[this.actions.length-1].args,p=new THREE.LineCurve(new THREE.Vector2(p[p.length-2],p[p.length-1]),new THREE.Vector2(d,h));this.curves.push(p);this.actions.push({action:THREE.PathActions.LINE_TO,args:k})};
THREE.Path.prototype.quadraticCurveTo=function(d,h,k,p){var q=Array.prototype.slice.call(arguments),w=this.actions[this.actions.length-1].args,w=new THREE.QuadraticBezierCurve(new THREE.Vector2(w[w.length-2],w[w.length-1]),new THREE.Vector2(d,h),new THREE.Vector2(k,p));this.curves.push(w);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:q})};
THREE.Path.prototype.bezierCurveTo=function(d,h,k,p,q,w){var s=Array.prototype.slice.call(arguments),A=this.actions[this.actions.length-1].args,A=new THREE.CubicBezierCurve(new THREE.Vector2(A[A.length-2],A[A.length-1]),new THREE.Vector2(d,h),new THREE.Vector2(k,p),new THREE.Vector2(q,w));this.curves.push(A);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:s})};
THREE.Path.prototype.splineThru=function(d){var h=Array.prototype.slice.call(arguments),k=this.actions[this.actions.length-1].args,k=[new THREE.Vector2(k[k.length-2],k[k.length-1])];Array.prototype.push.apply(k,d);k=new THREE.SplineCurve(k);this.curves.push(k);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:h})};THREE.Path.prototype.arc=function(d,h,k,p,q,w){var s=this.actions[this.actions.length-1].args;this.absarc(d+s[s.length-2],h+s[s.length-1],k,p,q,w)};
THREE.Path.prototype.absarc=function(d,h,k,p,q,w){this.absellipse(d,h,k,k,p,q,w)};THREE.Path.prototype.ellipse=function(d,h,k,p,q,w,s){var A=this.actions[this.actions.length-1].args;this.absellipse(d+A[A.length-2],h+A[A.length-1],k,p,q,w,s)};THREE.Path.prototype.absellipse=function(d,h,k,p,q,w,s){var A=Array.prototype.slice.call(arguments),B=new THREE.EllipseCurve(d,h,k,p,q,w,s);this.curves.push(B);B=B.getPoint(1);A.push(B.x);A.push(B.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:A})};
THREE.Path.prototype.getSpacedPoints=function(d){d||(d=40);for(var h=[],k=0;k<d;k++)h.push(this.getPoint(k/d));return h};
THREE.Path.prototype.getPoints=function(d,h){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(d,h);var d=d||12,k=[],p,q,w,s,A,B,C,D,F,H,I,M,N;p=0;for(q=this.actions.length;p<q;p++)switch(w=this.actions[p],s=w.action,w=w.args,s){case THREE.PathActions.MOVE_TO:k.push(new THREE.Vector2(w[0],w[1]));break;case THREE.PathActions.LINE_TO:k.push(new THREE.Vector2(w[0],w[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:A=w[2];B=w[3];F=w[0];H=w[1];0<k.length?(s=k[k.length-1],I=s.x,
M=s.y):(s=this.actions[p-1].args,I=s[s.length-2],M=s[s.length-1]);for(w=1;w<=d;w++)N=w/d,s=THREE.Shape.Utils.b2(N,I,F,A),N=THREE.Shape.Utils.b2(N,M,H,B),k.push(new THREE.Vector2(s,N));break;case THREE.PathActions.BEZIER_CURVE_TO:A=w[4];B=w[5];F=w[0];H=w[1];C=w[2];D=w[3];0<k.length?(s=k[k.length-1],I=s.x,M=s.y):(s=this.actions[p-1].args,I=s[s.length-2],M=s[s.length-1]);for(w=1;w<=d;w++)N=w/d,s=THREE.Shape.Utils.b3(N,I,F,C,A),N=THREE.Shape.Utils.b3(N,M,H,D,B),k.push(new THREE.Vector2(s,N));break;case THREE.PathActions.CSPLINE_THRU:s=
this.actions[p-1].args;N=[new THREE.Vector2(s[s.length-2],s[s.length-1])];s=d*w[0].length;N=N.concat(w[0]);N=new THREE.SplineCurve(N);for(w=1;w<=s;w++)k.push(N.getPointAt(w/s));break;case THREE.PathActions.ARC:A=w[0];B=w[1];H=w[2];C=w[3];s=w[4];F=!!w[5];I=s-C;M=2*d;for(w=1;w<=M;w++)N=w/M,F||(N=1-N),N=C+N*I,s=A+H*Math.cos(N),N=B+H*Math.sin(N),k.push(new THREE.Vector2(s,N));break;case THREE.PathActions.ELLIPSE:A=w[0];B=w[1];H=w[2];D=w[3];C=w[4];s=w[5];F=!!w[6];I=s-C;M=2*d;for(w=1;w<=M;w++)N=w/M,F||
(N=1-N),N=C+N*I,s=A+H*Math.cos(N),N=B+D*Math.sin(N),k.push(new THREE.Vector2(s,N))}p=k[k.length-1];1E-10>Math.abs(p.x-k[0].x)&&1E-10>Math.abs(p.y-k[0].y)&&k.splice(k.length-1,1);h&&k.push(k[0]);return k};
THREE.Path.prototype.toShapes=function(d){var h,k,p,q,w=[],s=new THREE.Path;h=0;for(k=this.actions.length;h<k;h++)p=this.actions[h],q=p.args,p=p.action,p==THREE.PathActions.MOVE_TO&&0!=s.actions.length&&(w.push(s),s=new THREE.Path),s[p].apply(s,q);0!=s.actions.length&&w.push(s);if(0==w.length)return[];var A;q=[];if(1==w.length)return p=w[0],A=new THREE.Shape,A.actions=p.actions,A.curves=p.curves,q.push(A),q;h=!THREE.Shape.Utils.isClockWise(w[0].getPoints());if(d?!h:h){A=new THREE.Shape;h=0;for(k=
w.length;h<k;h++)p=w[h],s=THREE.Shape.Utils.isClockWise(p.getPoints()),(s=d?!s:s)?(A.actions=p.actions,A.curves=p.curves,q.push(A),A=new THREE.Shape):A.holes.push(p)}else{A=void 0;h=0;for(k=w.length;h<k;h++)p=w[h],s=THREE.Shape.Utils.isClockWise(p.getPoints()),(s=d?!s:s)?(A&&q.push(A),A=new THREE.Shape,A.actions=p.actions,A.curves=p.curves):A.holes.push(p);q.push(A)}return q};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(d){return new THREE.ExtrudeGeometry(this,d)};THREE.Shape.prototype.makeGeometry=function(d){return new THREE.ShapeGeometry(this,d)};THREE.Shape.prototype.getPointsHoles=function(d){var h,k=this.holes.length,p=[];for(h=0;h<k;h++)p[h]=this.holes[h].getTransformedPoints(d,this.bends);return p};THREE.Shape.prototype.getSpacedPointsHoles=function(d){var h,k=this.holes.length,p=[];for(h=0;h<k;h++)p[h]=this.holes[h].getTransformedSpacedPoints(d,this.bends);return p};
THREE.Shape.prototype.extractAllPoints=function(d){return{shape:this.getTransformedPoints(d),holes:this.getPointsHoles(d)}};THREE.Shape.prototype.extractPoints=function(d){return this.useSpacedPoints?this.extractAllSpacedPoints(d):this.extractAllPoints(d)};THREE.Shape.prototype.extractAllSpacedPoints=function(d){return{shape:this.getTransformedSpacedPoints(d),holes:this.getSpacedPointsHoles(d)}};
THREE.Shape.Utils={removeHoles:function(d,h){var k=d.concat(),p=k.concat(),q,w,s,A,B,C,D,F,H,I,M=[];for(B=0;B<h.length;B++){C=h[B];Array.prototype.push.apply(p,C);w=Number.POSITIVE_INFINITY;for(q=0;q<C.length;q++){H=C[q];I=[];for(F=0;F<k.length;F++)D=k[F],D=H.distanceToSquared(D),I.push(D),D<w&&(w=D,s=q,A=F)}q=0<=A-1?A-1:k.length-1;w=0<=s-1?s-1:C.length-1;var N=[C[s],k[A],k[q]];F=THREE.FontUtils.Triangulate.area(N);var L=[C[s],C[w],k[A]];H=THREE.FontUtils.Triangulate.area(L);I=A;D=s;A+=1;s+=-1;0>
A&&(A+=k.length);A%=k.length;0>s&&(s+=C.length);s%=C.length;q=0<=A-1?A-1:k.length-1;w=0<=s-1?s-1:C.length-1;N=[C[s],k[A],k[q]];N=THREE.FontUtils.Triangulate.area(N);L=[C[s],C[w],k[A]];L=THREE.FontUtils.Triangulate.area(L);F+H>N+L&&(A=I,s=D,0>A&&(A+=k.length),A%=k.length,0>s&&(s+=C.length),s%=C.length,q=0<=A-1?A-1:k.length-1,w=0<=s-1?s-1:C.length-1);F=k.slice(0,A);H=k.slice(A);I=C.slice(s);D=C.slice(0,s);w=[C[s],C[w],k[A]];M.push([C[s],k[A],k[q]]);M.push(w);k=F.concat(I).concat(D).concat(H)}return{shape:k,
isolatedPts:M,allpoints:p}},triangulateShape:function(d,h){var k=THREE.Shape.Utils.removeHoles(d,h),p=k.allpoints,q=k.isolatedPts,k=THREE.FontUtils.Triangulate(k.shape,!1),w,s,A,B,C={};w=0;for(s=p.length;w<s;w++)B=p[w].x+":"+p[w].y,void 0!==C[B]&&console.log("Duplicate point",B),C[B]=w;w=0;for(s=k.length;w<s;w++){A=k[w];for(p=0;3>p;p++)B=A[p].x+":"+A[p].y,B=C[B],void 0!==B&&(A[p]=B)}w=0;for(s=q.length;w<s;w++){A=q[w];for(p=0;3>p;p++)B=A[p].x+":"+A[p].y,B=C[B],void 0!==B&&(A[p]=B)}return k.concat(q)},
isClockWise:function(d){return 0>THREE.FontUtils.Triangulate.area(d)},b2p0:function(d,h){var k=1-d;return k*k*h},b2p1:function(d,h){return 2*(1-d)*d*h},b2p2:function(d,h){return d*d*h},b2:function(d,h,k,p){return this.b2p0(d,h)+this.b2p1(d,k)+this.b2p2(d,p)},b3p0:function(d,h){var k=1-d;return k*k*k*h},b3p1:function(d,h){var k=1-d;return 3*k*k*d*h},b3p2:function(d,h){return 3*(1-d)*d*d*h},b3p3:function(d,h){return d*d*d*h},b3:function(d,h,k,p,q){return this.b3p0(d,h)+this.b3p1(d,k)+this.b3p2(d,p)+
this.b3p3(d,q)}};THREE.LineCurve=function(d,h){this.v1=d;this.v2=h};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(d){var h=this.v2.clone().sub(this.v1);h.multiplyScalar(d).add(this.v1);return h};THREE.LineCurve.prototype.getPointAt=function(d){return this.getPoint(d)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(d,h,k){this.v0=d;this.v1=h;this.v2=k};
THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(d){var h;h=THREE.Shape.Utils.b2(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Shape.Utils.b2(d,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(h,d)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(d){var h;h=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.y,this.v1.y,this.v2.y);h=new THREE.Vector2(h,d);h.normalize();return h};THREE.CubicBezierCurve=function(d,h,k,p){this.v0=d;this.v1=h;this.v2=k;this.v3=p};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(d){var h;h=THREE.Shape.Utils.b3(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Shape.Utils.b3(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(h,d)};THREE.CubicBezierCurve.prototype.getTangent=function(d){var h;h=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);h=new THREE.Vector2(h,d);h.normalize();return h};
THREE.SplineCurve=function(d){this.points=void 0==d?[]:d};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(d){var h=new THREE.Vector2,k=[],p=this.points,q;q=(p.length-1)*d;d=Math.floor(q);q-=d;k[0]=0==d?d:d-1;k[1]=d;k[2]=d>p.length-2?p.length-1:d+1;k[3]=d>p.length-3?p.length-1:d+2;h.x=THREE.Curve.Utils.interpolate(p[k[0]].x,p[k[1]].x,p[k[2]].x,p[k[3]].x,q);h.y=THREE.Curve.Utils.interpolate(p[k[0]].y,p[k[1]].y,p[k[2]].y,p[k[3]].y,q);return h};
THREE.EllipseCurve=function(d,h,k,p,q,w,s){this.aX=d;this.aY=h;this.xRadius=k;this.yRadius=p;this.aStartAngle=q;this.aEndAngle=w;this.aClockwise=s};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.EllipseCurve.prototype.getPoint=function(d){var h;h=this.aEndAngle-this.aStartAngle;0>h&&(h+=2*Math.PI);h>2*Math.PI&&(h-=2*Math.PI);h=!0===this.aClockwise?this.aEndAngle+(1-d)*(2*Math.PI-h):this.aStartAngle+d*h;d=this.aX+this.xRadius*Math.cos(h);h=this.aY+this.yRadius*Math.sin(h);return new THREE.Vector2(d,h)};THREE.ArcCurve=function(d,h,k,p,q,w){THREE.EllipseCurve.call(this,d,h,k,k,p,q,w)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.LineCurve3=THREE.Curve.create(function(d,h){this.v1=d;this.v2=h},function(d){var h=new THREE.Vector3;h.subVectors(this.v2,this.v1);h.multiplyScalar(d);h.add(this.v1);return h});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(d,h,k){this.v0=d;this.v1=h;this.v2=k},function(d){var h,k;h=THREE.Shape.Utils.b2(d,this.v0.x,this.v1.x,this.v2.x);k=THREE.Shape.Utils.b2(d,this.v0.y,this.v1.y,this.v2.y);d=THREE.Shape.Utils.b2(d,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(h,k,d)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(d,h,k,p){this.v0=d;this.v1=h;this.v2=k;this.v3=p},function(d){var h,k;h=THREE.Shape.Utils.b3(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);k=THREE.Shape.Utils.b3(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);d=THREE.Shape.Utils.b3(d,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(h,k,d)});
THREE.SplineCurve3=THREE.Curve.create(function(d){this.points=void 0==d?[]:d},function(d){var h=new THREE.Vector3,k=[],p=this.points,q,d=(p.length-1)*d;q=Math.floor(d);d-=q;k[0]=0==q?q:q-1;k[1]=q;k[2]=q>p.length-2?p.length-1:q+1;k[3]=q>p.length-3?p.length-1:q+2;q=p[k[0]];var w=p[k[1]],s=p[k[2]],k=p[k[3]];h.x=THREE.Curve.Utils.interpolate(q.x,w.x,s.x,k.x,d);h.y=THREE.Curve.Utils.interpolate(q.y,w.y,s.y,k.y,d);h.z=THREE.Curve.Utils.interpolate(q.z,w.z,s.z,k.z,d);return h});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(d){this.points=void 0==d?[]:d},function(d){var h=new THREE.Vector3,k=[],p=this.points,q;q=(p.length-0)*d;d=Math.floor(q);q-=d;d+=0<d?0:(Math.floor(Math.abs(d)/p.length)+1)*p.length;k[0]=(d-1)%p.length;k[1]=d%p.length;k[2]=(d+1)%p.length;k[3]=(d+2)%p.length;h.x=THREE.Curve.Utils.interpolate(p[k[0]].x,p[k[1]].x,p[k[2]].x,p[k[3]].x,q);h.y=THREE.Curve.Utils.interpolate(p[k[0]].y,p[k[1]].y,p[k[2]].y,p[k[3]].y,q);h.z=THREE.Curve.Utils.interpolate(p[k[0]].z,
p[k[1]].z,p[k[2]].z,p[k[3]].z,q);return h});
THREE.AnimationHandler=function(){var d=[],h={},k={update:function(h){for(var k=0;k<d.length;k++)d[k].update(h)},addToUpdate:function(h){-1===d.indexOf(h)&&d.push(h)},removeFromUpdate:function(h){h=d.indexOf(h);-1!==h&&d.splice(h,1)},add:function(d){void 0!==h[d.name]&&console.log("THREE.AnimationHandler.add: Warning! "+d.name+" already exists in library. Overwriting.");h[d.name]=d;if(!0!==d.initialized){for(var k=0;k<d.hierarchy.length;k++){for(var p=0;p<d.hierarchy[k].keys.length;p++)if(0>d.hierarchy[k].keys[p].time&&
(d.hierarchy[k].keys[p].time=0),void 0!==d.hierarchy[k].keys[p].rot&&!(d.hierarchy[k].keys[p].rot instanceof THREE.Quaternion)){var A=d.hierarchy[k].keys[p].rot;d.hierarchy[k].keys[p].rot=new THREE.Quaternion(A[0],A[1],A[2],A[3])}if(d.hierarchy[k].keys.length&&void 0!==d.hierarchy[k].keys[0].morphTargets){A={};for(p=0;p<d.hierarchy[k].keys.length;p++)for(var B=0;B<d.hierarchy[k].keys[p].morphTargets.length;B++){var C=d.hierarchy[k].keys[p].morphTargets[B];A[C]=-1}d.hierarchy[k].usedMorphTargets=A;
for(p=0;p<d.hierarchy[k].keys.length;p++){var D={};for(C in A){for(B=0;B<d.hierarchy[k].keys[p].morphTargets.length;B++)if(d.hierarchy[k].keys[p].morphTargets[B]===C){D[C]=d.hierarchy[k].keys[p].morphTargetsInfluences[B];break}B===d.hierarchy[k].keys[p].morphTargets.length&&(D[C]=0)}d.hierarchy[k].keys[p].morphTargetsInfluences=D}}for(p=1;p<d.hierarchy[k].keys.length;p++)d.hierarchy[k].keys[p].time===d.hierarchy[k].keys[p-1].time&&(d.hierarchy[k].keys.splice(p,1),p--);for(p=0;p<d.hierarchy[k].keys.length;p++)d.hierarchy[k].keys[p].index=
p}p=parseInt(d.length*d.fps,10);d.JIT={};d.JIT.hierarchy=[];for(k=0;k<d.hierarchy.length;k++)d.JIT.hierarchy.push(Array(p));d.initialized=!0}},get:function(d){if("string"===typeof d){if(h[d])return h[d];console.log("THREE.AnimationHandler.get: Couldn't find animation "+d);return null}},parse:function(d){var h=[];if(d instanceof THREE.SkinnedMesh)for(var k=0;k<d.bones.length;k++)h.push(d.bones[k]);else p(d,h);return h}},p=function(d,h){h.push(d);for(var k=0;k<d.children.length;k++)p(d.children[k],
h)};k.LINEAR=0;k.CATMULLROM=1;k.CATMULLROM_FORWARD=2;return k}();THREE.Animation=function(d,h,k){this.root=d;this.data=THREE.AnimationHandler.get(h);this.hierarchy=THREE.AnimationHandler.parse(d);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==k?k:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(d,h){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==d?d:!0;this.currentTime=void 0!==h?h:0;var k,p=this.hierarchy.length,q;for(k=0;k<p;k++){q=this.hierarchy[k];q.matrixAutoUpdate=!0;void 0===q.animationCache&&(q.animationCache={},q.animationCache.prevKey={pos:0,rot:0,scl:0},q.animationCache.nextKey={pos:0,rot:0,scl:0},q.animationCache.originalMatrix=q instanceof THREE.Bone?q.skinMatrix:q.matrix);var w=q.animationCache.prevKey;q=q.animationCache.nextKey;
w.pos=this.data.hierarchy[k].keys[0];w.rot=this.data.hierarchy[k].keys[0];w.scl=this.data.hierarchy[k].keys[0];q.pos=this.getNextKeyWith("pos",k,1);q.rot=this.getNextKeyWith("rot",k,1);q.scl=this.getNextKeyWith("scl",k,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(d){if(!1!==this.isPlaying){var h=["pos","rot","scl"],k,p,q,w,s,A,B,C,D;D=this.currentTime+=d*this.timeScale;C=this.currentTime%=this.data.length;parseInt(Math.min(C*this.data.fps,this.data.length*this.data.fps),10);for(var F=0,H=this.hierarchy.length;F<H;F++){d=this.hierarchy[F];B=d.animationCache;for(var I=0;3>I;I++){k=h[I];s=B.prevKey[k];A=B.nextKey[k];if(A.time<=D){if(C<D)if(this.loop){s=this.data.hierarchy[F].keys[0];for(A=this.getNextKeyWith(k,F,1);A.time<
C;)s=A,A=this.getNextKeyWith(k,F,A.index+1)}else{this.stop();return}else{do s=A,A=this.getNextKeyWith(k,F,A.index+1);while(A.time<C)}B.prevKey[k]=s;B.nextKey[k]=A}d.matrixAutoUpdate=!0;d.matrixWorldNeedsUpdate=!0;p=(C-s.time)/(A.time-s.time);q=s[k];w=A[k];if(0>p||1<p)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+p+" on bone "+F),p=0>p?0:1;if("pos"===k)if(k=d.position,this.interpolationType===THREE.AnimationHandler.LINEAR)k.x=q[0]+(w[0]-q[0])*p,k.y=q[1]+(w[1]-q[1])*p,k.z=q[2]+
(w[2]-q[2])*p;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",F,s.index-1).pos,this.points[1]=q,this.points[2]=w,this.points[3]=this.getNextKeyWith("pos",F,A.index+1).pos,p=0.33*p+0.33,q=this.interpolateCatmullRom(this.points,p),k.x=q[0],k.y=q[1],k.z=q[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(p=this.interpolateCatmullRom(this.points,1.01*p),
this.target.set(p[0],p[1],p[2]),this.target.sub(k),this.target.y=0,this.target.normalize(),p=Math.atan2(this.target.x,this.target.z),d.rotation.set(0,p,0))}else"rot"===k?THREE.Quaternion.slerp(q,w,d.quaternion,p):"scl"===k&&(k=d.scale,k.x=q[0]+(w[0]-q[0])*p,k.y=q[1]+(w[1]-q[1])*p,k.z=q[2]+(w[2]-q[2])*p)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(d,h){var k=[],p=[],q,w,s,A,B,C;q=(d.length-1)*h;w=Math.floor(q);q-=w;k[0]=0===w?w:w-1;k[1]=w;k[2]=w>d.length-2?w:w+1;k[3]=w>d.length-3?w:w+2;w=d[k[0]];A=d[k[1]];B=d[k[2]];C=d[k[3]];k=q*q;s=q*k;p[0]=this.interpolate(w[0],A[0],B[0],C[0],q,k,s);p[1]=this.interpolate(w[1],A[1],B[1],C[1],q,k,s);p[2]=this.interpolate(w[2],A[2],B[2],C[2],q,k,s);return p};
THREE.Animation.prototype.interpolate=function(d,h,k,p,q,w,s){d=0.5*(k-d);p=0.5*(p-h);return(2*(h-k)+d+p)*s+(-3*(h-k)-2*d-p)*w+d*q+h};THREE.Animation.prototype.getNextKeyWith=function(d,h,k){for(var p=this.data.hierarchy[h].keys,k=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?k<p.length-1?k:p.length-1:k%p.length;k<p.length;k++)if(void 0!==p[k][d])return p[k];return this.data.hierarchy[h].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(d,h,k){for(var p=this.data.hierarchy[h].keys,k=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<k?k:0:0<=k?k:k+p.length;0<=k;k--)if(void 0!==p[k][d])return p[k];return this.data.hierarchy[h].keys[p.length-1]};
THREE.KeyFrameAnimation=function(d,h,k){this.root=d;this.data=THREE.AnimationHandler.get(h);this.hierarchy=THREE.AnimationHandler.parse(d);this.currentTime=0;this.timeScale=0.0010;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==k?k:!0;d=0;for(h=this.hierarchy.length;d<h;d++){var k=this.data.hierarchy[d].sids,p=this.hierarchy[d];if(this.data.hierarchy[d].keys.length&&k){for(var q=0;q<k.length;q++){var w=k[q],s=this.getNextKeyWith(w,d,0);s&&s.apply(w)}p.matrixAutoUpdate=!1;this.data.hierarchy[d].node.updateMatrix();
p.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(d,h){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==d?d:!0;this.currentTime=void 0!==h?h:0;this.startTimeMs=h;this.startTime=1E7;this.endTime=-this.startTime;var k,p=this.hierarchy.length,q,w;for(k=0;k<p;k++)q=this.hierarchy[k],w=this.data.hierarchy[k],void 0===w.animationCache&&(w.animationCache={},w.animationCache.prevKey=null,w.animationCache.nextKey=null,w.animationCache.originalMatrix=q instanceof THREE.Bone?q.skinMatrix:q.matrix),q=this.data.hierarchy[k].keys,
q.length&&(w.animationCache.prevKey=q[0],w.animationCache.nextKey=q[1],this.startTime=Math.min(q[0].time,this.startTime),this.endTime=Math.max(q[q.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var d=0;d<this.data.hierarchy.length;d++){var h=this.hierarchy[d],k=this.data.hierarchy[d];if(void 0!==k.animationCache){var p=k.animationCache.originalMatrix;h instanceof THREE.Bone?(p.copy(h.skinMatrix),h.skinMatrix=p):(p.copy(h.matrix),h.matrix=p);delete k.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(d){if(this.isPlaying){var h,k,p,q,w=this.data.JIT.hierarchy,s,A,B;A=this.currentTime+=d*this.timeScale;s=this.currentTime%=this.data.length;s<this.startTimeMs&&(s=this.currentTime=this.startTimeMs+s);q=parseInt(Math.min(s*this.data.fps,this.data.length*this.data.fps),10);if((B=s<A)&&!this.loop){for(var d=0,C=this.hierarchy.length;d<C;d++){var D=this.data.hierarchy[d].keys,w=this.data.hierarchy[d].sids;p=D.length-1;q=this.hierarchy[d];if(D.length){for(D=
0;D<w.length;D++)s=w[D],(A=this.getPrevKeyWith(s,d,p))&&A.apply(s);this.data.hierarchy[d].node.updateMatrix();q.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(s<this.startTime)){d=0;for(C=this.hierarchy.length;d<C;d++){p=this.hierarchy[d];h=this.data.hierarchy[d];var D=h.keys,F=h.animationCache;if(this.JITCompile&&void 0!==w[d][q])p instanceof THREE.Bone?(p.skinMatrix=w[d][q],p.matrixWorldNeedsUpdate=!1):(p.matrix=w[d][q],p.matrixWorldNeedsUpdate=!0);else if(D.length){this.JITCompile&&F&&(p instanceof
THREE.Bone?p.skinMatrix=F.originalMatrix:p.matrix=F.originalMatrix);h=F.prevKey;k=F.nextKey;if(h&&k){if(k.time<=A){if(B&&this.loop){h=D[0];for(k=D[1];k.time<s;)h=k,k=D[h.index+1]}else if(!B)for(var H=D.length-1;k.time<s&&k.index!==H;)h=k,k=D[h.index+1];F.prevKey=h;F.nextKey=k}k.time>=s?h.interpolate(k,s):h.interpolate(k,k.time)}this.data.hierarchy[d].node.updateMatrix();p.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===w[0][q]){this.hierarchy[0].updateMatrixWorld(!0);for(d=0;d<this.hierarchy.length;d++)w[d][q]=
this.hierarchy[d]instanceof THREE.Bone?this.hierarchy[d].skinMatrix.clone():this.hierarchy[d].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(d,h,k){h=this.data.hierarchy[h].keys;for(k%=h.length;k<h.length;k++)if(h[k].hasTarget(d))return h[k];return h[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(d,h,k){h=this.data.hierarchy[h].keys;for(k=0<=k?k:k+h.length;0<=k;k--)if(h[k].hasTarget(d))return h[k];return h[h.length-1]};
THREE.CubeCamera=function(d,h,k){THREE.Object3D.call(this);var p=new THREE.PerspectiveCamera(90,1,d,h);p.up.set(0,-1,0);p.lookAt(new THREE.Vector3(1,0,0));this.add(p);var q=new THREE.PerspectiveCamera(90,1,d,h);q.up.set(0,-1,0);q.lookAt(new THREE.Vector3(-1,0,0));this.add(q);var w=new THREE.PerspectiveCamera(90,1,d,h);w.up.set(0,0,1);w.lookAt(new THREE.Vector3(0,1,0));this.add(w);var s=new THREE.PerspectiveCamera(90,1,d,h);s.up.set(0,0,-1);s.lookAt(new THREE.Vector3(0,-1,0));this.add(s);var A=new THREE.PerspectiveCamera(90,
1,d,h);A.up.set(0,-1,0);A.lookAt(new THREE.Vector3(0,0,1));this.add(A);var B=new THREE.PerspectiveCamera(90,1,d,h);B.up.set(0,-1,0);B.lookAt(new THREE.Vector3(0,0,-1));this.add(B);this.renderTarget=new THREE.WebGLRenderTargetCube(k,k,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(d,h){var k=this.renderTarget,H=k.generateMipmaps;k.generateMipmaps=!1;k.activeCubeFace=0;d.render(h,p,k);k.activeCubeFace=1;d.render(h,q,k);k.activeCubeFace=
2;d.render(h,w,k);k.activeCubeFace=3;d.render(h,s,k);k.activeCubeFace=4;d.render(h,A,k);k.generateMipmaps=H;k.activeCubeFace=5;d.render(h,B,k)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(d,h,k,p,q,w,s){THREE.Camera.call(this);this.fov=k;this.left=-d/2;this.right=d/2;this.top=h/2;this.bottom=-h/2;this.cameraO=new THREE.OrthographicCamera(d/-2,d/2,h/2,h/-2,w,s);this.cameraP=new THREE.PerspectiveCamera(k,d/h,p,q);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var d=this.cameraP.aspect,h=(this.cameraP.near+this.cameraP.far)/2,h=Math.tan(this.fov/2)*h,d=2*h*d/2,h=h/this.zoom,d=d/this.zoom;this.cameraO.left=-d;this.cameraO.right=d;this.cameraO.top=h;this.cameraO.bottom=-h;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(d,h){this.cameraP.aspect=d/h;this.left=-d/2;this.right=d/2;this.top=h/2;this.bottom=-h/2};THREE.CombinedCamera.prototype.setFov=function(d){this.fov=d;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(d,h){void 0===h&&(h=24);var k=2*THREE.Math.radToDeg(Math.atan(h/(2*d)));this.setFov(k);return k};THREE.CombinedCamera.prototype.setZoom=function(d){this.zoom=d;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CircleGeometry=function(d,h,k,p){THREE.Geometry.call(this);this.radius=d=d||50;this.segments=h=void 0!==h?Math.max(3,h):8;this.thetaStart=k=void 0!==k?k:0;this.thetaLength=p=void 0!==p?p:2*Math.PI;var q,w=[];q=new THREE.Vector3;var s=new THREE.Vector2(0.5,0.5);this.vertices.push(q);w.push(s);for(q=0;q<=h;q++){var A=new THREE.Vector3,B=k+q/h*p;A.x=d*Math.cos(B);A.y=d*Math.sin(B);this.vertices.push(A);w.push(new THREE.Vector2((A.x/d+1)/2,(A.y/d+1)/2))}k=new THREE.Vector3(0,0,1);for(q=1;q<=h;q++)this.faces.push(new THREE.Face3(q,
q+1,0,[k.clone(),k.clone(),k.clone()])),this.faceVertexUvs[0].push([w[q].clone(),w[q+1].clone(),s.clone()]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,d)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(d,h,k,p,q,w){function s(d,h,k,p,q,s,w,N){var L,Q=A.widthSegments,P=A.heightSegments,O=q/2,R=s/2,$=A.vertices.length;if("x"===d&&"y"===h||"y"===d&&"x"===h)L="z";else if("x"===d&&"z"===h||"z"===d&&"x"===h)L="y",P=A.depthSegments;else if("z"===d&&"y"===h||"y"===d&&"z"===h)L="x",Q=A.depthSegments;var T=Q+1,S=P+1,Y=q/Q,X=s/P,ea=new THREE.Vector3;ea[L]=0<w?1:-1;for(q=0;q<S;q++)for(s=0;s<T;s++){var aa=new THREE.Vector3;aa[d]=(s*Y-O)*k;aa[h]=(q*X-R)*p;aa[L]=w;A.vertices.push(aa)}for(q=
0;q<P;q++)for(s=0;s<Q;s++)R=s+T*q,d=s+T*(q+1),h=s+1+T*(q+1),k=s+1+T*q,p=new THREE.Vector2(s/Q,1-q/P),w=new THREE.Vector2(s/Q,1-(q+1)/P),L=new THREE.Vector2((s+1)/Q,1-(q+1)/P),O=new THREE.Vector2((s+1)/Q,1-q/P),R=new THREE.Face3(R+$,d+$,k+$),R.normal.copy(ea),R.vertexNormals.push(ea.clone(),ea.clone(),ea.clone()),R.materialIndex=N,A.faces.push(R),A.faceVertexUvs[0].push([p,w,O]),R=new THREE.Face3(d+$,h+$,k+$),R.normal.copy(ea),R.vertexNormals.push(ea.clone(),ea.clone(),ea.clone()),R.materialIndex=
N,A.faces.push(R),A.faceVertexUvs[0].push([w.clone(),L,O.clone()])}THREE.Geometry.call(this);var A=this;this.width=d;this.height=h;this.depth=k;this.widthSegments=p||1;this.heightSegments=q||1;this.depthSegments=w||1;d=this.width/2;h=this.height/2;k=this.depth/2;s("z","y",-1,-1,this.depth,this.height,d,0);s("z","y",1,-1,this.depth,this.height,-d,1);s("x","z",1,1,this.width,this.depth,h,2);s("x","z",1,-1,this.width,this.depth,-h,3);s("x","y",1,-1,this.width,this.height,k,4);s("x","y",-1,-1,this.width,
this.height,-k,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(d,h,k,p,q,w){THREE.Geometry.call(this);this.radiusTop=d=void 0!==d?d:20;this.radiusBottom=h=void 0!==h?h:20;this.height=k=void 0!==k?k:100;this.radialSegments=p=p||8;this.heightSegments=q=q||1;this.openEnded=w=void 0!==w?w:!1;var s=k/2,A,B,C=[],D=[];for(B=0;B<=q;B++){var F=[],H=[],I=B/q,M=I*(h-d)+d;for(A=0;A<=p;A++){var N=A/p,L=new THREE.Vector3;L.x=M*Math.sin(2*N*Math.PI);L.y=-I*k+s;L.z=M*Math.cos(2*N*Math.PI);this.vertices.push(L);F.push(this.vertices.length-1);H.push(new THREE.Vector2(N,
1-I))}C.push(F);D.push(H)}k=(h-d)/k;for(A=0;A<p;A++){0!==d?(F=this.vertices[C[0][A]].clone(),H=this.vertices[C[0][A+1]].clone()):(F=this.vertices[C[1][A]].clone(),H=this.vertices[C[1][A+1]].clone());F.setY(Math.sqrt(F.x*F.x+F.z*F.z)*k).normalize();H.setY(Math.sqrt(H.x*H.x+H.z*H.z)*k).normalize();for(B=0;B<q;B++){var I=C[B][A],M=C[B+1][A],N=C[B+1][A+1],L=C[B][A+1],Q=F.clone(),P=F.clone(),O=H.clone(),R=H.clone(),$=D[B][A].clone(),T=D[B+1][A].clone(),S=D[B+1][A+1].clone(),Y=D[B][A+1].clone();this.faces.push(new THREE.Face3(I,
M,L,[Q,P,R]));this.faceVertexUvs[0].push([$,T,Y]);this.faces.push(new THREE.Face3(M,N,L,[P.clone(),O,R.clone()]));this.faceVertexUvs[0].push([T.clone(),S,Y.clone()])}}if(!1===w&&0<d){this.vertices.push(new THREE.Vector3(0,s,0));for(A=0;A<p;A++)I=C[0][A],M=C[0][A+1],N=this.vertices.length-1,Q=new THREE.Vector3(0,1,0),P=new THREE.Vector3(0,1,0),O=new THREE.Vector3(0,1,0),$=D[0][A].clone(),T=D[0][A+1].clone(),S=new THREE.Vector2(T.x,0),this.faces.push(new THREE.Face3(I,M,N,[Q,P,O])),this.faceVertexUvs[0].push([$,
T,S])}if(!1===w&&0<h){this.vertices.push(new THREE.Vector3(0,-s,0));for(A=0;A<p;A++)I=C[B][A+1],M=C[B][A],N=this.vertices.length-1,Q=new THREE.Vector3(0,-1,0),P=new THREE.Vector3(0,-1,0),O=new THREE.Vector3(0,-1,0),$=D[B][A+1].clone(),T=D[B][A].clone(),S=new THREE.Vector2(T.x,1),this.faces.push(new THREE.Face3(I,M,N,[Q,P,O])),this.faceVertexUvs[0].push([$,T,S])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(d,h){"undefined"!==typeof d&&(THREE.Geometry.call(this),d=d instanceof Array?d:[d],this.shapebb=d[d.length-1].getBoundingBox(),this.addShapeList(d,h),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(d,h){for(var k=d.length,p=0;p<k;p++)this.addShape(d[p],h)};
THREE.ExtrudeGeometry.prototype.addShape=function(d,h){function k(d,h,k){h||console.log("die");return h.clone().multiplyScalar(k).add(d)}function p(d,h,k){var p=THREE.ExtrudeGeometry.__v1,q=THREE.ExtrudeGeometry.__v2,s=THREE.ExtrudeGeometry.__v3,w=THREE.ExtrudeGeometry.__v4,A=THREE.ExtrudeGeometry.__v5,B=THREE.ExtrudeGeometry.__v6;p.set(d.x-h.x,d.y-h.y);q.set(d.x-k.x,d.y-k.y);p=p.normalize();q=q.normalize();s.set(-p.y,p.x);w.set(q.y,-q.x);A.copy(d).add(s);B.copy(d).add(w);if(A.equals(B))return w.clone();
A.copy(h).add(s);B.copy(k).add(w);s=p.dot(w);w=B.sub(A).dot(w);0===s&&(console.log("Either infinite or no solutions!"),0===w?console.log("Its finite solutions."):console.log("Too bad, no solutions."));w/=s;return 0>w?(h=Math.atan2(h.y-d.y,h.x-d.x),d=Math.atan2(k.y-d.y,k.x-d.x),h>d&&(d+=2*Math.PI),k=(h+d)/2,d=-Math.cos(k),k=-Math.sin(k),new THREE.Vector2(d,k)):p.multiplyScalar(w).add(A).sub(d).clone()}function q(k,p){var q,s;for(ba=k.length;0<=--ba;){q=ba;s=ba-1;0>s&&(s=k.length-1);for(var w=0,A=I+
2*D,w=0;w<A;w++){var B=ja*w,C=ja*(w+1),H=p+q+B,B=p+s+B,F=p+s+C,C=p+q+C,M=k,N=w,L=A,S=q,Q=s,H=H+Z,B=B+Z,F=F+Z,C=C+Z;aa.faces.push(new THREE.Face3(H,B,C,null,null,P));aa.faces.push(new THREE.Face3(B,F,C,null,null,P));H=O.generateSideWallUV(aa,d,M,h,H,B,F,C,N,L,S,Q);aa.faceVertexUvs[0].push([H[0],H[1],H[3]]);aa.faceVertexUvs[0].push([H[1],H[2],H[3]])}}}function w(d,h,k){aa.vertices.push(new THREE.Vector3(d,h,k))}function s(k,p,q,s){k+=Z;p+=Z;q+=Z;aa.faces.push(new THREE.Face3(k,p,q,null,null,Q));k=s?
O.generateBottomUV(aa,d,h,k,p,q):O.generateTopUV(aa,d,h,k,p,q);aa.faceVertexUvs[0].push(k)}var A=void 0!==h.amount?h.amount:100,B=void 0!==h.bevelThickness?h.bevelThickness:6,C=void 0!==h.bevelSize?h.bevelSize:B-2,D=void 0!==h.bevelSegments?h.bevelSegments:3,F=void 0!==h.bevelEnabled?h.bevelEnabled:!0,H=void 0!==h.curveSegments?h.curveSegments:12,I=void 0!==h.steps?h.steps:1,M=h.extrudePath,N,L=!1,Q=h.material,P=h.extrudeMaterial,O=void 0!==h.UVGenerator?h.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,
R,$,T,S;M&&(N=M.getSpacedPoints(I),L=!0,F=!1,R=void 0!==h.frames?h.frames:new THREE.TubeGeometry.FrenetFrames(M,I,!1),$=new THREE.Vector3,T=new THREE.Vector3,S=new THREE.Vector3);F||(C=B=D=0);var Y,X,ea,aa=this,Z=this.vertices.length,H=d.extractPoints(H),U=H.shape,H=H.holes;if(M=!THREE.Shape.Utils.isClockWise(U)){U=U.reverse();X=0;for(ea=H.length;X<ea;X++)Y=H[X],THREE.Shape.Utils.isClockWise(Y)&&(H[X]=Y.reverse());M=!1}var V=THREE.Shape.Utils.triangulateShape(U,H),M=U;X=0;for(ea=H.length;X<ea;X++)Y=
H[X],U=U.concat(Y);var ga,ca,ia,Ma,ja=U.length,La=V.length,Va=[],ba=0,ra=M.length;ga=ra-1;for(ca=ba+1;ba<ra;ba++,ga++,ca++)ga===ra&&(ga=0),ca===ra&&(ca=0),Va[ba]=p(M[ba],M[ga],M[ca]);var oa=[],ka,Ua=Va.concat();X=0;for(ea=H.length;X<ea;X++){Y=H[X];ka=[];ba=0;ra=Y.length;ga=ra-1;for(ca=ba+1;ba<ra;ba++,ga++,ca++)ga===ra&&(ga=0),ca===ra&&(ca=0),ka[ba]=p(Y[ba],Y[ga],Y[ca]);oa.push(ka);Ua=Ua.concat(ka)}for(ga=0;ga<D;ga++){Y=ga/D;ia=B*(1-Y);ca=C*Math.sin(Y*Math.PI/2);ba=0;for(ra=M.length;ba<ra;ba++)Ma=
k(M[ba],Va[ba],ca),w(Ma.x,Ma.y,-ia);X=0;for(ea=H.length;X<ea;X++){Y=H[X];ka=oa[X];ba=0;for(ra=Y.length;ba<ra;ba++)Ma=k(Y[ba],ka[ba],ca),w(Ma.x,Ma.y,-ia)}}ca=C;for(ba=0;ba<ja;ba++)Ma=F?k(U[ba],Ua[ba],ca):U[ba],L?(T.copy(R.normals[0]).multiplyScalar(Ma.x),$.copy(R.binormals[0]).multiplyScalar(Ma.y),S.copy(N[0]).add(T).add($),w(S.x,S.y,S.z)):w(Ma.x,Ma.y,0);for(Y=1;Y<=I;Y++)for(ba=0;ba<ja;ba++)Ma=F?k(U[ba],Ua[ba],ca):U[ba],L?(T.copy(R.normals[Y]).multiplyScalar(Ma.x),$.copy(R.binormals[Y]).multiplyScalar(Ma.y),
S.copy(N[Y]).add(T).add($),w(S.x,S.y,S.z)):w(Ma.x,Ma.y,A/I*Y);for(ga=D-1;0<=ga;ga--){Y=ga/D;ia=B*(1-Y);ca=C*Math.sin(Y*Math.PI/2);ba=0;for(ra=M.length;ba<ra;ba++)Ma=k(M[ba],Va[ba],ca),w(Ma.x,Ma.y,A+ia);X=0;for(ea=H.length;X<ea;X++){Y=H[X];ka=oa[X];ba=0;for(ra=Y.length;ba<ra;ba++)Ma=k(Y[ba],ka[ba],ca),L?w(Ma.x,Ma.y+N[I-1].y,N[I-1].x+ia):w(Ma.x,Ma.y,A+ia)}}if(F){B=0*ja;for(ba=0;ba<La;ba++)A=V[ba],s(A[2]+B,A[1]+B,A[0]+B,!0);B=ja*(I+2*D);for(ba=0;ba<La;ba++)A=V[ba],s(A[0]+B,A[1]+B,A[2]+B,!1)}else{for(ba=
0;ba<La;ba++)A=V[ba],s(A[2],A[1],A[0],!0);for(ba=0;ba<La;ba++)A=V[ba],s(A[0]+ja*I,A[1]+ja*I,A[2]+ja*I,!1)}A=0;q(M,A);A+=M.length;X=0;for(ea=H.length;X<ea;X++)Y=H[X],q(Y,A),A+=Y.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(d,h,k,p,q,w){h=d.vertices[q].x;q=d.vertices[q].y;k=d.vertices[w].x;w=d.vertices[w].y;return[new THREE.Vector2(d.vertices[p].x,d.vertices[p].y),new THREE.Vector2(h,q),new THREE.Vector2(k,w)]},generateBottomUV:function(d,h,k,p,q,w){return this.generateTopUV(d,h,k,p,q,w)},generateSideWallUV:function(d,h,k,p,q,w,s,A){var h=d.vertices[q].x,k=d.vertices[q].y,q=d.vertices[q].z,p=d.vertices[w].x,B=d.vertices[w].y,w=d.vertices[w].z,C=d.vertices[s].x,
D=d.vertices[s].y,s=d.vertices[s].z,F=d.vertices[A].x,H=d.vertices[A].y,d=d.vertices[A].z;return 0.01>Math.abs(k-B)?[new THREE.Vector2(h,1-q),new THREE.Vector2(p,1-w),new THREE.Vector2(C,1-s),new THREE.Vector2(F,1-d)]:[new THREE.Vector2(k,1-q),new THREE.Vector2(B,1-w),new THREE.Vector2(D,1-s),new THREE.Vector2(H,1-d)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;
THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(d,h){THREE.Geometry.call(this);!1===d instanceof Array&&(d=[d]);this.shapebb=d[d.length-1].getBoundingBox();this.addShapeList(d,h);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(d,h){for(var k=0,p=d.length;k<p;k++)this.addShape(d[k],h);return this};
THREE.ShapeGeometry.prototype.addShape=function(d,h){void 0===h&&(h={});var k=h.material,p=void 0===h.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:h.UVGenerator,q,w,s,A=this.vertices.length;q=d.extractPoints(void 0!==h.curveSegments?h.curveSegments:12);var B=q.shape,C=q.holes;if(!THREE.Shape.Utils.isClockWise(B)){B=B.reverse();q=0;for(w=C.length;q<w;q++)s=C[q],THREE.Shape.Utils.isClockWise(s)&&(C[q]=s.reverse())}var D=THREE.Shape.Utils.triangulateShape(B,C);q=0;for(w=C.length;q<w;q++)s=C[q],
B=B.concat(s);C=B.length;w=D.length;for(q=0;q<C;q++)s=B[q],this.vertices.push(new THREE.Vector3(s.x,s.y,0));for(q=0;q<w;q++)C=D[q],B=C[0]+A,s=C[1]+A,C=C[2]+A,this.faces.push(new THREE.Face3(B,s,C,null,null,k)),this.faceVertexUvs[0].push(p.generateBottomUV(this,d,h,B,s,C))};
THREE.LatheGeometry=function(d,h,k,p){THREE.Geometry.call(this);for(var h=h||12,k=k||0,p=p||2*Math.PI,q=1/(d.length-1),w=1/h,s=0,A=h;s<=A;s++)for(var B=k+s*w*p,C=Math.cos(B),D=Math.sin(B),B=0,F=d.length;B<F;B++){var H=d[B],I=new THREE.Vector3;I.x=C*H.x-D*H.y;I.y=D*H.x+C*H.y;I.z=H.z;this.vertices.push(I)}k=d.length;s=0;for(A=h;s<A;s++){B=0;for(F=d.length-1;B<F;B++){var h=D=B+k*s,p=D+k,C=D+1+k,D=D+1,H=s*w,I=B*q,M=H+w,N=I+q;this.faces.push(new THREE.Face3(h,p,D));this.faceVertexUvs[0].push([new THREE.Vector2(H,
I),new THREE.Vector2(M,I),new THREE.Vector2(H,N)]);this.faces.push(new THREE.Face3(p,C,D));this.faceVertexUvs[0].push([new THREE.Vector2(M,I),new THREE.Vector2(M,N),new THREE.Vector2(H,N)])}}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(d,h,k,p){THREE.Geometry.call(this);this.width=d;this.height=h;this.widthSegments=k||1;this.heightSegments=p||1;for(var q=d/2,w=h/2,k=this.widthSegments,p=this.heightSegments,s=k+1,A=p+1,B=this.width/k,C=this.height/p,D=new THREE.Vector3(0,0,1),d=0;d<A;d++)for(h=0;h<s;h++)this.vertices.push(new THREE.Vector3(h*B-q,-(d*C-w),0));for(d=0;d<p;d++)for(h=0;h<k;h++){var F=h+s*d,q=h+s*(d+1),w=h+1+s*(d+1),A=h+1+s*d,B=new THREE.Vector2(h/k,1-d/p),C=new THREE.Vector2(h/k,1-(d+1)/
p),H=new THREE.Vector2((h+1)/k,1-(d+1)/p),I=new THREE.Vector2((h+1)/k,1-d/p),F=new THREE.Face3(F,q,A);F.normal.copy(D);F.vertexNormals.push(D.clone(),D.clone(),D.clone());this.faces.push(F);this.faceVertexUvs[0].push([B,C,I]);F=new THREE.Face3(q,w,A);F.normal.copy(D);F.vertexNormals.push(D.clone(),D.clone(),D.clone());this.faces.push(F);this.faceVertexUvs[0].push([C.clone(),H,I.clone()])}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.RingGeometry=function(d,h,k,p,q,w){THREE.Geometry.call(this);for(var d=d||0,h=h||50,q=void 0!==q?q:0,w=void 0!==w?w:2*Math.PI,k=void 0!==k?Math.max(3,k):8,p=void 0!==p?Math.max(3,p):8,s,A=[],B=d,C=(h-d)/p,d=0;d<=p;d++){for(s=0;s<=k;s++){var D=new THREE.Vector3,F=q+s/k*w;D.x=B*Math.cos(F);D.y=B*Math.sin(F);this.vertices.push(D);A.push(new THREE.Vector2((D.x/h+1)/2,(D.y/h+1)/2))}B+=C}h=new THREE.Vector3(0,0,1);for(d=0;d<p;d++){q=d*k;for(s=0;s<=k;s++)F=s+q,w=F+d,C=F+k+d,D=F+k+1+d,this.faces.push(new THREE.Face3(w,
C,D,[h.clone(),h.clone(),h.clone()])),this.faceVertexUvs[0].push([A[w].clone(),A[C].clone(),A[D].clone()]),w=F+d,C=F+k+1+d,D=F+1+d,this.faces.push(new THREE.Face3(w,C,D,[h.clone(),h.clone(),h.clone()])),this.faceVertexUvs[0].push([A[w].clone(),A[C].clone(),A[D].clone()])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,B)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(d,h,k,p,q,w,s){THREE.Geometry.call(this);this.radius=d=d||50;this.widthSegments=h=Math.max(3,Math.floor(h)||8);this.heightSegments=k=Math.max(2,Math.floor(k)||6);this.phiStart=p=void 0!==p?p:0;this.phiLength=q=void 0!==q?q:2*Math.PI;this.thetaStart=w=void 0!==w?w:0;this.thetaLength=s=void 0!==s?s:Math.PI;var A,B,C=[],D=[];for(B=0;B<=k;B++){var F=[],H=[];for(A=0;A<=h;A++){var I=A/h,M=B/k,N=new THREE.Vector3;N.x=-d*Math.cos(p+I*q)*Math.sin(w+M*s);N.y=d*Math.cos(w+M*s);
N.z=d*Math.sin(p+I*q)*Math.sin(w+M*s);this.vertices.push(N);F.push(this.vertices.length-1);H.push(new THREE.Vector2(I,1-M))}C.push(F);D.push(H)}for(B=0;B<this.heightSegments;B++)for(A=0;A<this.widthSegments;A++){var h=C[B][A+1],k=C[B][A],p=C[B+1][A],q=C[B+1][A+1],w=this.vertices[h].clone().normalize(),s=this.vertices[k].clone().normalize(),F=this.vertices[p].clone().normalize(),H=this.vertices[q].clone().normalize(),I=D[B][A+1].clone(),M=D[B][A].clone(),N=D[B+1][A].clone(),L=D[B+1][A+1].clone();Math.abs(this.vertices[h].y)===
this.radius?(I.x=(I.x+M.x)/2,this.faces.push(new THREE.Face3(h,p,q,[w,F,H])),this.faceVertexUvs[0].push([I,N,L])):Math.abs(this.vertices[p].y)===this.radius?(N.x=(N.x+L.x)/2,this.faces.push(new THREE.Face3(h,k,p,[w,s,F])),this.faceVertexUvs[0].push([I,M,N])):(this.faces.push(new THREE.Face3(h,k,q,[w,s,H])),this.faceVertexUvs[0].push([I,M,L]),this.faces.push(new THREE.Face3(k,p,q,[s.clone(),F,H.clone()])),this.faceVertexUvs[0].push([M.clone(),N,L.clone()]))}this.computeCentroids();this.computeFaceNormals();
this.boundingSphere=new THREE.Sphere(new THREE.Vector3,d)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(d,h){var h=h||{},k=THREE.FontUtils.generateShapes(d,h);h.amount=void 0!==h.height?h.height:50;void 0===h.bevelThickness&&(h.bevelThickness=10);void 0===h.bevelSize&&(h.bevelSize=8);void 0===h.bevelEnabled&&(h.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,k,h)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(d,h,k,p,q){THREE.Geometry.call(this);this.radius=d||100;this.tube=h||40;this.radialSegments=k||8;this.tubularSegments=p||6;this.arc=q||2*Math.PI;q=new THREE.Vector3;d=[];h=[];for(k=0;k<=this.radialSegments;k++)for(p=0;p<=this.tubularSegments;p++){var w=p/this.tubularSegments*this.arc,s=2*k/this.radialSegments*Math.PI;q.x=this.radius*Math.cos(w);q.y=this.radius*Math.sin(w);var A=new THREE.Vector3;A.x=(this.radius+this.tube*Math.cos(s))*Math.cos(w);A.y=(this.radius+this.tube*
Math.cos(s))*Math.sin(w);A.z=this.tube*Math.sin(s);this.vertices.push(A);d.push(new THREE.Vector2(p/this.tubularSegments,k/this.radialSegments));h.push(A.clone().sub(q).normalize())}for(k=1;k<=this.radialSegments;k++)for(p=1;p<=this.tubularSegments;p++){var q=(this.tubularSegments+1)*k+p-1,w=(this.tubularSegments+1)*(k-1)+p-1,s=(this.tubularSegments+1)*(k-1)+p,A=(this.tubularSegments+1)*k+p,B=new THREE.Face3(q,w,A,[h[q],h[w],h[A]]);B.normal.add(h[q]);B.normal.add(h[w]);B.normal.add(h[A]);B.normal.normalize();
this.faces.push(B);this.faceVertexUvs[0].push([d[q].clone(),d[w].clone(),d[A].clone()]);B=new THREE.Face3(w,s,A,[h[w],h[s],h[A]]);B.normal.add(h[w]);B.normal.add(h[s]);B.normal.add(h[A]);B.normal.normalize();this.faces.push(B);this.faceVertexUvs[0].push([d[w].clone(),d[s].clone(),d[A].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(d,h,k,p,q,w,s){function A(d,h,k,p,q){var s=Math.cos(d),w=Math.sin(d),d=h/k*d,h=Math.cos(d),s=0.5*(p*(2+h))*s,w=0.5*p*(2+h)*w,p=0.5*q*p*Math.sin(d);return new THREE.Vector3(s,w,p)}THREE.Geometry.call(this);this.radius=d||100;this.tube=h||40;this.radialSegments=k||64;this.tubularSegments=p||8;this.p=q||2;this.q=w||3;this.heightScale=s||1;this.grid=Array(this.radialSegments);k=new THREE.Vector3;p=new THREE.Vector3;q=new THREE.Vector3;for(d=0;d<this.radialSegments;++d){this.grid[d]=
Array(this.tubularSegments);h=2*(d/this.radialSegments)*this.p*Math.PI;w=A(h,this.q,this.p,this.radius,this.heightScale);h=A(h+0.01,this.q,this.p,this.radius,this.heightScale);k.subVectors(h,w);p.addVectors(h,w);q.crossVectors(k,p);p.crossVectors(q,k);q.normalize();p.normalize();for(h=0;h<this.tubularSegments;++h){var B=2*(h/this.tubularSegments)*Math.PI,s=-this.tube*Math.cos(B),B=this.tube*Math.sin(B),C=new THREE.Vector3;C.x=w.x+s*p.x+B*q.x;C.y=w.y+s*p.y+B*q.y;C.z=w.z+s*p.z+B*q.z;this.grid[d][h]=
this.vertices.push(C)-1}}for(d=0;d<this.radialSegments;++d)for(h=0;h<this.tubularSegments;++h){var q=(d+1)%this.radialSegments,w=(h+1)%this.tubularSegments,k=this.grid[d][h],p=this.grid[q][h],q=this.grid[q][w],w=this.grid[d][w],s=new THREE.Vector2(d/this.radialSegments,h/this.tubularSegments),B=new THREE.Vector2((d+1)/this.radialSegments,h/this.tubularSegments),C=new THREE.Vector2((d+1)/this.radialSegments,(h+1)/this.tubularSegments),D=new THREE.Vector2(d/this.radialSegments,(h+1)/this.tubularSegments);
this.faces.push(new THREE.Face3(k,p,w));this.faceVertexUvs[0].push([s,B,D]);this.faces.push(new THREE.Face3(p,q,w));this.faceVertexUvs[0].push([B.clone(),C,D.clone()])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(d,h,k,p,q){THREE.Geometry.call(this);this.path=d;this.segments=h||64;this.radius=k||1;this.radialSegments=p||8;this.closed=q||!1;this.grid=[];var w,s,p=this.segments+1,A,B,C,q=new THREE.Vector3,D,F,h=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);D=h.normals;F=h.binormals;this.tangents=h.tangents;this.normals=D;this.binormals=F;for(h=0;h<p;h++){this.grid[h]=[];k=h/(p-1);C=d.getPointAt(k);w=D[h];s=F[h];for(k=0;k<this.radialSegments;k++)A=2*(k/this.radialSegments)*
Math.PI,B=-this.radius*Math.cos(A),A=this.radius*Math.sin(A),q.copy(C),q.x+=B*w.x+A*s.x,q.y+=B*w.y+A*s.y,q.z+=B*w.z+A*s.z,this.grid[h][k]=this.vertices.push(new THREE.Vector3(q.x,q.y,q.z))-1}for(h=0;h<this.segments;h++)for(k=0;k<this.radialSegments;k++)q=this.closed?(h+1)%this.segments:h+1,D=(k+1)%this.radialSegments,d=this.grid[h][k],p=this.grid[q][k],q=this.grid[q][D],D=this.grid[h][D],F=new THREE.Vector2(h/this.segments,k/this.radialSegments),w=new THREE.Vector2((h+1)/this.segments,k/this.radialSegments),
s=new THREE.Vector2((h+1)/this.segments,(k+1)/this.radialSegments),B=new THREE.Vector2(h/this.segments,(k+1)/this.radialSegments),this.faces.push(new THREE.Face3(d,p,D)),this.faceVertexUvs[0].push([F,w,B]),this.faces.push(new THREE.Face3(p,q,D)),this.faceVertexUvs[0].push([w.clone(),s,B.clone()]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(d,h,k){new THREE.Vector3;var p=new THREE.Vector3;new THREE.Vector3;var q=[],w=[],s=[],A=new THREE.Vector3,B=new THREE.Matrix4,h=h+1,C,D,F;this.tangents=q;this.normals=w;this.binormals=s;for(C=0;C<h;C++)D=C/(h-1),q[C]=d.getTangentAt(D),q[C].normalize();w[0]=new THREE.Vector3;s[0]=new THREE.Vector3;d=Number.MAX_VALUE;C=Math.abs(q[0].x);D=Math.abs(q[0].y);F=Math.abs(q[0].z);C<=d&&(d=C,p.set(1,0,0));D<=d&&(d=D,p.set(0,1,0));F<=d&&p.set(0,0,1);A.crossVectors(q[0],
p).normalize();w[0].crossVectors(q[0],A);s[0].crossVectors(q[0],w[0]);for(C=1;C<h;C++)w[C]=w[C-1].clone(),s[C]=s[C-1].clone(),A.crossVectors(q[C-1],q[C]),1E-4<A.length()&&(A.normalize(),p=Math.acos(THREE.Math.clamp(q[C-1].dot(q[C]),-1,1)),w[C].applyMatrix4(B.makeRotationAxis(A,p))),s[C].crossVectors(q[C],w[C]);if(k){p=Math.acos(THREE.Math.clamp(w[0].dot(w[h-1]),-1,1));p/=h-1;0<q[0].dot(A.crossVectors(w[0],w[h-1]))&&(p=-p);for(C=1;C<h;C++)w[C].applyMatrix4(B.makeRotationAxis(q[C],p*C)),s[C].crossVectors(q[C],
w[C])}};
THREE.PolyhedronGeometry=function(d,h,k,p){function q(d){var h=d.normalize().clone();h.index=A.vertices.push(h)-1;var k=Math.atan2(d.z,-d.x)/2/Math.PI+0.5,d=Math.atan2(-d.y,Math.sqrt(d.x*d.x+d.z*d.z))/Math.PI+0.5;h.uv=new THREE.Vector2(k,1-d);return h}function w(d,h,k){var p=new THREE.Face3(d.index,h.index,k.index,[d.clone(),h.clone(),k.clone()]);p.centroid.add(d).add(h).add(k).divideScalar(3);A.faces.push(p);p=Math.atan2(p.centroid.z,-p.centroid.x);A.faceVertexUvs[0].push([s(d.uv,d,p),s(h.uv,h,p),
s(k.uv,k,p)])}function s(d,h,k){0>k&&1===d.x&&(d=new THREE.Vector2(d.x-1,d.y));0===h.x&&0===h.z&&(d=new THREE.Vector2(k/2/Math.PI+0.5,d.y));return d.clone()}THREE.Geometry.call(this);for(var k=k||1,p=p||0,A=this,B=0,C=d.length;B<C;B++)q(new THREE.Vector3(d[B][0],d[B][1],d[B][2]));for(var D=this.vertices,d=[],B=0,C=h.length;B<C;B++){var F=D[h[B][0]],H=D[h[B][1]],I=D[h[B][2]];d[B]=new THREE.Face3(F.index,H.index,I.index,[F.clone(),H.clone(),I.clone()])}B=0;for(C=d.length;B<C;B++){H=d[B];D=p;h=Math.pow(2,
D);Math.pow(4,D);for(var D=q(A.vertices[H.a]),F=q(A.vertices[H.b]),M=q(A.vertices[H.c]),H=[],I=0;I<=h;I++){H[I]=[];for(var N=q(D.clone().lerp(M,I/h)),L=q(F.clone().lerp(M,I/h)),Q=h-I,P=0;P<=Q;P++)H[I][P]=0==P&&I==h?N:q(N.clone().lerp(L,P/Q))}for(I=0;I<h;I++)for(P=0;P<2*(h-I)-1;P++)D=Math.floor(P/2),0==P%2?w(H[I][D+1],H[I+1][D],H[I][D]):w(H[I][D+1],H[I+1][D+1],H[I+1][D])}B=0;for(C=this.faceVertexUvs[0].length;B<C;B++)p=this.faceVertexUvs[0][B],d=p[0].x,h=p[1].x,D=p[2].x,F=Math.max(d,Math.max(h,D)),
H=Math.min(d,Math.min(h,D)),0.9<F&&0.1>H&&(0.2>d&&(p[0].x+=1),0.2>h&&(p[1].x+=1),0.2>D&&(p[2].x+=1));B=0;for(C=this.vertices.length;B<C;B++)this.vertices[B].multiplyScalar(k);this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,k)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(d,h){this.radius=d;this.detail=h;var k=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,k,0],[1,k,0],[-1,-k,0],[1,-k,0],[0,-1,k],[0,1,k],[0,-1,-k],[0,1,-k],[k,0,-1],[k,0,1],[-k,0,-1],[-k,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],d,h)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(d,h){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],d,h)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(d,h){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],d,h)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(d,h,k){THREE.Geometry.call(this);var p=this.vertices,q=this.faces,w=this.faceVertexUvs[0],s,A,B,C,D=h+1;for(s=0;s<=k;s++){C=s/k;for(A=0;A<=h;A++)B=A/h,B=d(B,C),p.push(B)}var F,H,I,M;for(s=0;s<k;s++)for(A=0;A<h;A++)d=s*D+A,p=s*D+A+1,C=(s+1)*D+A+1,B=(s+1)*D+A,F=new THREE.Vector2(A/h,s/k),H=new THREE.Vector2((A+1)/h,s/k),I=new THREE.Vector2((A+1)/h,(s+1)/k),M=new THREE.Vector2(A/h,(s+1)/k),q.push(new THREE.Face3(d,p,B)),w.push([F,H,M]),q.push(new THREE.Face3(p,C,B)),
w.push([H.clone(),I,M.clone()]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(d){var d=d||1,h=new THREE.Geometry;h.vertices.push(new THREE.Vector3,new THREE.Vector3(d,0,0),new THREE.Vector3,new THREE.Vector3(0,d,0),new THREE.Vector3,new THREE.Vector3(0,0,d));h.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,h,d,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.ArrowHelper=function(d,h,k,p){THREE.Object3D.call(this);void 0===p&&(p=16776960);void 0===k&&(k=1);this.position=h;h=new THREE.Geometry;h.vertices.push(new THREE.Vector3(0,0,0));h.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(h,new THREE.LineBasicMaterial({color:p}));this.line.matrixAutoUpdate=!1;this.add(this.line);h=new THREE.CylinderGeometry(0,0.05,0.25,5,1);h.applyMatrix((new THREE.Matrix4).makeTranslation(0,0.875,0));this.cone=new THREE.Mesh(h,new THREE.MeshBasicMaterial({color:p}));
this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(d);this.setLength(k)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var d=new THREE.Vector3,h;return function(k){0.99999<k.y?this.quaternion.set(0,0,0,1):-0.99999>k.y?this.quaternion.set(1,0,0,0):(d.set(k.z,0,-k.x).normalize(),h=Math.acos(k.y),this.quaternion.setFromAxisAngle(d,h))}}();THREE.ArrowHelper.prototype.setLength=function(d){this.scale.set(d,d,d)};
THREE.ArrowHelper.prototype.setColor=function(d){this.line.material.color.setHex(d);this.cone.material.color.setHex(d)};
THREE.BoxHelper=function(d){var h=[new THREE.Vector3(1,1,1),new THREE.Vector3(-1,1,1),new THREE.Vector3(-1,-1,1),new THREE.Vector3(1,-1,1),new THREE.Vector3(1,1,-1),new THREE.Vector3(-1,1,-1),new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,-1,-1)];this.vertices=h;var k=new THREE.Geometry;k.vertices.push(h[0],h[1],h[1],h[2],h[2],h[3],h[3],h[0],h[4],h[5],h[5],h[6],h[6],h[7],h[7],h[4],h[0],h[4],h[1],h[5],h[2],h[6],h[3],h[7]);THREE.Line.call(this,k,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces);
void 0!==d&&this.update(d)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);
THREE.BoxHelper.prototype.update=function(d){var h=d.geometry;null===h.boundingBox&&h.computeBoundingBox();var k=h.boundingBox.min,h=h.boundingBox.max,p=this.vertices;p[0].set(h.x,h.y,h.z);p[1].set(k.x,h.y,h.z);p[2].set(k.x,k.y,h.z);p[3].set(h.x,k.y,h.z);p[4].set(h.x,h.y,k.z);p[5].set(k.x,h.y,k.z);p[6].set(k.x,k.y,k.z);p[7].set(h.x,k.y,k.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=!0;this.matrixAutoUpdate=!1;this.matrixWorld=d.matrixWorld};
THREE.BoundingBoxHelper=function(d,h){var k=h||8947848;this.object=d;this.box=new THREE.Box3;THREE.Mesh.call(this,new THREE.CubeGeometry(1,1,1),new THREE.MeshBasicMaterial({color:k,wireframe:!0}))};THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object);this.box.size(this.scale);this.box.center(this.position)};
THREE.CameraHelper=function(d){function h(d,h,p){k(d,p);k(h,p)}function k(d,h){p.vertices.push(new THREE.Vector3);p.colors.push(new THREE.Color(h));void 0===w[d]&&(w[d]=[]);w[d].push(p.vertices.length-1)}var p=new THREE.Geometry,q=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),w={};h("n1","n2",16755200);h("n2","n4",16755200);h("n4","n3",16755200);h("n3","n1",16755200);h("f1","f2",16755200);h("f2","f4",16755200);h("f4","f3",16755200);h("f3","f1",16755200);h("n1","f1",16755200);
h("n2","f2",16755200);h("n3","f3",16755200);h("n4","f4",16755200);h("p","n1",16711680);h("p","n2",16711680);h("p","n3",16711680);h("p","n4",16711680);h("u1","u2",43775);h("u2","u3",43775);h("u3","u1",43775);h("c","t",16777215);h("p","c",3355443);h("cn1","cn2",3355443);h("cn3","cn4",3355443);h("cf1","cf2",3355443);h("cf3","cf4",3355443);THREE.Line.call(this,p,q,THREE.LinePieces);this.camera=d;this.matrixWorld=d.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=w;this.update()};
THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){var d=new THREE.Vector3,h=new THREE.Camera,k=new THREE.Projector;return function(){function p(p,s,A,B){d.set(s,A,B);k.unprojectVector(d,h);p=q.pointMap[p];if(void 0!==p){s=0;for(A=p.length;s<A;s++)q.geometry.vertices[p[s]].copy(d)}}var q=this;h.projectionMatrix.copy(this.camera.projectionMatrix);p("c",0,0,-1);p("t",0,0,1);p("n1",-1,-1,-1);p("n2",1,-1,-1);p("n3",-1,1,-1);p("n4",1,1,-1);p("f1",-1,-1,1);p("f2",1,-1,1);p("f3",-1,1,1);p("f4",1,1,1);p("u1",
0.7,1.1,-1);p("u2",-0.7,1.1,-1);p("u3",0,2,-1);p("cf1",-1,0,1);p("cf2",1,0,1);p("cf3",0,-1,1);p("cf4",0,1,1);p("cn1",-1,0,-1);p("cn2",1,0,-1);p("cn3",0,-1,-1);p("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();
THREE.DirectionalLightHelper=function(d,h){THREE.Object3D.call(this);this.light=d;this.light.updateMatrixWorld();this.matrixWorld=d.matrixWorld;this.matrixAutoUpdate=!1;var h=h||1,k=new THREE.PlaneGeometry(h,h),p=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});p.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightPlane=new THREE.Mesh(k,p);this.add(this.lightPlane);k=new THREE.Geometry;k.vertices.push(new THREE.Vector3);k.vertices.push(new THREE.Vector3);p=new THREE.LineBasicMaterial({fog:!1});
p.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(k,p);this.add(this.targetLine);this.update()};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()};
THREE.DirectionalLightHelper.prototype.update=function(){var d=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3;return function(){d.getPositionFromMatrix(this.light.matrixWorld);h.getPositionFromMatrix(this.light.target.matrixWorld);k.subVectors(h,d);this.lightPlane.lookAt(k);this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.vertices[1].copy(k);this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.lightPlane.material.color)}}();
THREE.FaceNormalsHelper=function(d,h,k,p){this.object=d;this.size=h||1;for(var d=k||16776960,p=p||1,h=new THREE.Geometry,k=0,q=this.object.geometry.faces.length;k<q;k++)h.vertices.push(new THREE.Vector3),h.vertices.push(new THREE.Vector3);THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:d,linewidth:p}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.FaceNormalsHelper.prototype.update=function(){var d=new THREE.Vector3;return function(){this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var h=this.geometry.vertices,k=this.object.geometry.faces,p=this.object.matrixWorld,q=0,w=k.length;q<w;q++){var s=k[q];d.copy(s.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);var A=2*q;h[A].copy(s.centroid).applyMatrix4(p);h[A+1].addVectors(h[A],d)}this.geometry.verticesNeedUpdate=
!0;return this}}();THREE.GridHelper=function(d,h){var k=new THREE.Geometry,p=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924);this.color2=new THREE.Color(8947848);for(var q=-d;q<=d;q+=h){k.vertices.push(new THREE.Vector3(-d,0,q),new THREE.Vector3(d,0,q),new THREE.Vector3(q,0,-d),new THREE.Vector3(q,0,d));var w=0===q?this.color1:this.color2;k.colors.push(w,w,w,w)}THREE.Line.call(this,k,p,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);
THREE.GridHelper.prototype.setColors=function(d,h){this.color1.set(d);this.color2.set(h);this.geometry.colorsNeedUpdate=!0};
THREE.HemisphereLightHelper=function(d,h){THREE.Object3D.call(this);this.light=d;this.light.updateMatrixWorld();this.matrixWorld=d.matrixWorld;this.matrixAutoUpdate=!1;this.colors=[new THREE.Color,new THREE.Color];var k=new THREE.SphereGeometry(h,4,2);k.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var p=0;8>p;p++)k.faces[p].color=this.colors[4>p?0:1];p=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(k,p);this.add(this.lightSphere);
this.update()};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose();this.lightSphere.material.dispose()};
THREE.HemisphereLightHelper.prototype.update=function(){var d=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity);this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity);this.lightSphere.lookAt(d.getPositionFromMatrix(this.light.matrixWorld).negate());this.lightSphere.geometry.colorsNeedUpdate=!0}}();
THREE.PointLightHelper=function(d,h){this.light=d;this.light.updateMatrixWorld();var k=new THREE.SphereGeometry(h,4,2),p=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});p.color.copy(this.light.color).multiplyScalar(this.light.intensity);THREE.Mesh.call(this,k,p);this.matrixWorld=this.light.matrixWorld;this.matrixAutoUpdate=!1};THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype);THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose()};
THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};
THREE.SpotLightHelper=function(d){THREE.Object3D.call(this);this.light=d;this.light.updateMatrixWorld();this.matrixWorld=d.matrixWorld;this.matrixAutoUpdate=!1;d=new THREE.CylinderGeometry(0,1,1,8,1,!0);d.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));d.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var h=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(d,h);this.add(this.cone);this.update()};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose()};THREE.SpotLightHelper.prototype.update=function(){var d=new THREE.Vector3,h=new THREE.Vector3;return function(){var k=this.light.distance?this.light.distance:1E4,p=k*Math.tan(this.light.angle);this.cone.scale.set(p,p,k);d.getPositionFromMatrix(this.light.matrixWorld);h.getPositionFromMatrix(this.light.target.matrixWorld);this.cone.lookAt(h.sub(d));this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();
THREE.VertexNormalsHelper=function(d,h,k,p){this.object=d;this.size=h||1;for(var h=k||16711680,p=p||1,k=new THREE.Geometry,d=d.geometry.faces,q=0,w=d.length;q<w;q++)for(var s=0,A=d[q].vertexNormals.length;s<A;s++)k.vertices.push(new THREE.Vector3),k.vertices.push(new THREE.Vector3);THREE.Line.call(this,k,new THREE.LineBasicMaterial({color:h,linewidth:p}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.normalMatrix=new THREE.Matrix3;this.update()};THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.VertexNormalsHelper.prototype.update=function(){var d=new THREE.Vector3;return function(){var h=["a","b","c","d"];this.object.updateMatrixWorld(!0);this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var k=this.geometry.vertices,p=this.object.geometry.vertices,q=this.object.geometry.faces,w=this.object.matrixWorld,s=0,A=0,B=q.length;A<B;A++)for(var C=q[A],D=0,F=C.vertexNormals.length;D<F;D++){var H=C.vertexNormals[D];k[s].copy(p[C[h[D]]]).applyMatrix4(w);d.copy(H).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size);
d.add(k[s]);s+=1;k[s].copy(d);s+=1}this.geometry.verticesNeedUpdate=!0;return this}}();THREE.VertexTangentsHelper=function(d,h,k,p){this.object=d;this.size=h||1;for(var h=k||255,p=p||1,k=new THREE.Geometry,d=d.geometry.faces,q=0,w=d.length;q<w;q++)for(var s=0,A=d[q].vertexTangents.length;s<A;s++)k.vertices.push(new THREE.Vector3),k.vertices.push(new THREE.Vector3);THREE.Line.call(this,k,new THREE.LineBasicMaterial({color:h,linewidth:p}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.update()};
THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype);
THREE.VertexTangentsHelper.prototype.update=function(){var d=new THREE.Vector3;return function(){var h=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var k=this.geometry.vertices,p=this.object.geometry.vertices,q=this.object.geometry.faces,w=this.object.matrixWorld,s=0,A=0,B=q.length;A<B;A++)for(var C=q[A],D=0,F=C.vertexTangents.length;D<F;D++){var H=C.vertexTangents[D];k[s].copy(p[C[h[D]]]).applyMatrix4(w);d.copy(H).transformDirection(w).multiplyScalar(this.size);d.add(k[s]);s+=1;k[s].copy(d);
s+=1}this.geometry.verticesNeedUpdate=!0;return this}}();
THREE.WireframeHelper=function(d){for(var h=[0,0],k={},p=function(d,h){return d-h},q=["a","b","c","d"],w=new THREE.Geometry,s=d.geometry.vertices,A=d.geometry.faces,B=0,C=A.length;B<C;B++)for(var D=A[B],F=0;3>F;F++){h[0]=D[q[F]];h[1]=D[q[(F+1)%3]];h.sort(p);var H=h.toString();void 0===k[H]&&(w.vertices.push(s[h[0]]),w.vertices.push(s[h[1]]),k[H]=!0)}THREE.Line.call(this,w,new THREE.LineBasicMaterial({color:16777215}),THREE.LinePieces);this.matrixAutoUpdate=!1;this.matrixWorld=d.matrixWorld};
THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype);THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(d,h,k,p,q){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==d&&this.add(d,h,k,p,q)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(d,h,k,p,q,w){void 0===h&&(h=-1);void 0===k&&(k=0);void 0===w&&(w=1);void 0===q&&(q=new THREE.Color(16777215));void 0===p&&(p=THREE.NormalBlending);k=Math.min(k,Math.max(0,k));this.lensFlares.push({texture:d,size:h,distance:k,x:0,y:0,z:0,scale:1,rotation:1,opacity:w,color:q,blending:p})};
THREE.LensFlare.prototype.updateLensFlares=function(){var d,h=this.lensFlares.length,k,p=2*-this.positionScreen.x,q=2*-this.positionScreen.y;for(d=0;d<h;d++)k=this.lensFlares[d],k.x=this.positionScreen.x+p*k.distance,k.y=this.positionScreen.y+q*k.distance,k.wantedRotation=0.25*k.x*Math.PI,k.rotation+=0.25*(k.wantedRotation-k.rotation)};
THREE.MorphBlendMesh=function(d,h){THREE.Mesh.call(this,d,h);this.animationsMap={};this.animationsList=[];var k=this.geometry.morphTargets.length;this.createAnimation("__default",0,k-1,k/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(d,h,k,p){h={startFrame:h,endFrame:k,length:k-h+1,fps:p,duration:(k-h)/p,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[d]=h;this.animationsList.push(h)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(d){for(var h=/([a-z]+)(\d+)/,k,p={},q=this.geometry,w=0,s=q.morphTargets.length;w<s;w++){var A=q.morphTargets[w].name.match(h);if(A&&1<A.length){var B=A[1];p[B]||(p[B]={start:Infinity,end:-Infinity});A=p[B];w<A.start&&(A.start=w);w>A.end&&(A.end=w);k||(k=B)}}for(B in p)A=p[B],this.createAnimation(B,A.start,A.end,d);this.firstAnimation=k};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(d){if(d=this.animationsMap[d])d.direction=1,d.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(d){if(d=this.animationsMap[d])d.direction=-1,d.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(d,h){var k=this.animationsMap[d];k&&(k.fps=h,k.duration=(k.end-k.start)/k.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(d,h){var k=this.animationsMap[d];k&&(k.duration=h,k.fps=(k.end-k.start)/k.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(d,h){var k=this.animationsMap[d];k&&(k.weight=h)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(d,h){var k=this.animationsMap[d];k&&(k.time=h)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(d){var h=0;if(d=this.animationsMap[d])h=d.time;return h};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(d){var h=-1;if(d=this.animationsMap[d])h=d.duration;return h};THREE.MorphBlendMesh.prototype.playAnimation=function(d){var h=this.animationsMap[d];h?(h.time=0,h.active=!0):console.warn("animation["+d+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(d){if(d=this.animationsMap[d])d.active=!1};
THREE.MorphBlendMesh.prototype.update=function(d){for(var h=0,k=this.animationsList.length;h<k;h++){var p=this.animationsList[h];if(p.active){var q=p.duration/p.length;p.time+=p.direction*d;if(p.mirroredLoop){if(p.time>p.duration||0>p.time)p.direction*=-1,p.time>p.duration&&(p.time=p.duration,p.directionBackwards=!0),0>p.time&&(p.time=0,p.directionBackwards=!1)}else p.time%=p.duration,0>p.time&&(p.time+=p.duration);var w=p.startFrame+THREE.Math.clamp(Math.floor(p.time/q),0,p.length-1),s=p.weight;
w!==p.currentFrame&&(this.morphTargetInfluences[p.lastFrame]=0,this.morphTargetInfluences[p.currentFrame]=1*s,this.morphTargetInfluences[w]=0,p.lastFrame=p.currentFrame,p.currentFrame=w);q=p.time%q/q;p.directionBackwards&&(q=1-q);this.morphTargetInfluences[p.currentFrame]=q*s;this.morphTargetInfluences[p.lastFrame]=(1-q)*s}}};
THREE.LensFlarePlugin=function(){function d(d,k){var p=h.createProgram(),q=h.createShader(h.FRAGMENT_SHADER),s=h.createShader(h.VERTEX_SHADER),w="precision "+k+" float;\n";h.shaderSource(q,w+d.fragmentShader);h.shaderSource(s,w+d.vertexShader);h.compileShader(q);h.compileShader(s);h.attachShader(p,q);h.attachShader(p,s);h.linkProgram(p);return p}var h,k,p,q,w,s,A,B,C,D,F,H,I;this.init=function(M){h=M.context;k=M;p=M.getPrecision();q=new Float32Array(16);w=new Uint16Array(6);M=0;q[M++]=-1;q[M++]=-1;
q[M++]=0;q[M++]=0;q[M++]=1;q[M++]=-1;q[M++]=1;q[M++]=0;q[M++]=1;q[M++]=1;q[M++]=1;q[M++]=1;q[M++]=-1;q[M++]=1;q[M++]=0;q[M++]=1;M=0;w[M++]=0;w[M++]=1;w[M++]=2;w[M++]=0;w[M++]=2;w[M++]=3;s=h.createBuffer();A=h.createBuffer();h.bindBuffer(h.ARRAY_BUFFER,s);h.bufferData(h.ARRAY_BUFFER,q,h.STATIC_DRAW);h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,A);h.bufferData(h.ELEMENT_ARRAY_BUFFER,w,h.STATIC_DRAW);B=h.createTexture();C=h.createTexture();h.bindTexture(h.TEXTURE_2D,B);h.texImage2D(h.TEXTURE_2D,0,h.RGB,16,16,
0,h.RGB,h.UNSIGNED_BYTE,null);h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE);h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE);h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.NEAREST);h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.NEAREST);h.bindTexture(h.TEXTURE_2D,C);h.texImage2D(h.TEXTURE_2D,0,h.RGBA,16,16,0,h.RGBA,h.UNSIGNED_BYTE,null);h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_S,h.CLAMP_TO_EDGE);h.texParameteri(h.TEXTURE_2D,h.TEXTURE_WRAP_T,h.CLAMP_TO_EDGE);
h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MAG_FILTER,h.NEAREST);h.texParameteri(h.TEXTURE_2D,h.TEXTURE_MIN_FILTER,h.NEAREST);0>=h.getParameter(h.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(D=!1,F=d(THREE.ShaderFlares.lensFlare,p)):(D=!0,F=d(THREE.ShaderFlares.lensFlareVertexTexture,p));H={};I={};H.vertex=h.getAttribLocation(F,"position");H.uv=h.getAttribLocation(F,"uv");I.renderType=h.getUniformLocation(F,"renderType");I.map=h.getUniformLocation(F,"map");I.occlusionMap=h.getUniformLocation(F,"occlusionMap");I.opacity=
h.getUniformLocation(F,"opacity");I.color=h.getUniformLocation(F,"color");I.scale=h.getUniformLocation(F,"scale");I.rotation=h.getUniformLocation(F,"rotation");I.screenPosition=h.getUniformLocation(F,"screenPosition")};this.render=function(d,p,q,w){var d=d.__webglFlares,P=d.length;if(P){var O=new THREE.Vector3,R=w/q,$=0.5*q,T=0.5*w,S=16/w,Y=new THREE.Vector2(S*R,S),X=new THREE.Vector3(1,1,0),ea=new THREE.Vector2(1,1),aa=I,S=H;h.useProgram(F);h.enableVertexAttribArray(H.vertex);h.enableVertexAttribArray(H.uv);
h.uniform1i(aa.occlusionMap,0);h.uniform1i(aa.map,1);h.bindBuffer(h.ARRAY_BUFFER,s);h.vertexAttribPointer(S.vertex,2,h.FLOAT,!1,16,0);h.vertexAttribPointer(S.uv,2,h.FLOAT,!1,16,8);h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,A);h.disable(h.CULL_FACE);h.depthMask(!1);var Z,U,V,ga,ca;for(Z=0;Z<P;Z++)if(S=16/w,Y.set(S*R,S),ga=d[Z],O.set(ga.matrixWorld.elements[12],ga.matrixWorld.elements[13],ga.matrixWorld.elements[14]),O.applyMatrix4(p.matrixWorldInverse),O.applyProjection(p.projectionMatrix),X.copy(O),ea.x=
X.x*$+$,ea.y=X.y*T+T,D||0<ea.x&&ea.x<q&&0<ea.y&&ea.y<w){h.activeTexture(h.TEXTURE1);h.bindTexture(h.TEXTURE_2D,B);h.copyTexImage2D(h.TEXTURE_2D,0,h.RGB,ea.x-8,ea.y-8,16,16,0);h.uniform1i(aa.renderType,0);h.uniform2f(aa.scale,Y.x,Y.y);h.uniform3f(aa.screenPosition,X.x,X.y,X.z);h.disable(h.BLEND);h.enable(h.DEPTH_TEST);h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0);h.activeTexture(h.TEXTURE0);h.bindTexture(h.TEXTURE_2D,C);h.copyTexImage2D(h.TEXTURE_2D,0,h.RGBA,ea.x-8,ea.y-8,16,16,0);h.uniform1i(aa.renderType,
1);h.disable(h.DEPTH_TEST);h.activeTexture(h.TEXTURE1);h.bindTexture(h.TEXTURE_2D,B);h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0);ga.positionScreen.copy(X);ga.customUpdateCallback?ga.customUpdateCallback(ga):ga.updateLensFlares();h.uniform1i(aa.renderType,2);h.enable(h.BLEND);U=0;for(V=ga.lensFlares.length;U<V;U++)ca=ga.lensFlares[U],0.0010<ca.opacity&&0.0010<ca.scale&&(X.x=ca.x,X.y=ca.y,X.z=ca.z,S=ca.size*ca.scale/w,Y.x=S*R,Y.y=S,h.uniform3f(aa.screenPosition,X.x,X.y,X.z),h.uniform2f(aa.scale,
Y.x,Y.y),h.uniform1f(aa.rotation,ca.rotation),h.uniform1f(aa.opacity,ca.opacity),h.uniform3f(aa.color,ca.color.r,ca.color.g,ca.color.b),k.setBlending(ca.blending,ca.blendEquation,ca.blendSrc,ca.blendDst),k.setTexture(ca.texture,1),h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0))}h.enable(h.CULL_FACE);h.enable(h.DEPTH_TEST);h.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var d,h,k,p,q,w,s=new THREE.Frustum,A=new THREE.Matrix4,B=new THREE.Vector3,C=new THREE.Vector3,D=new THREE.Vector3;this.init=function(s){d=s.context;h=s;var s=THREE.ShaderLib.depthRGBA,A=THREE.UniformsUtils.clone(s.uniforms);k=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:A});p=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:A,morphTargets:!0});q=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,
vertexShader:s.vertexShader,uniforms:A,skinning:!0});w=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:A,morphTargets:!0,skinning:!0});k._shadowPass=!0;p._shadowPass=!0;q._shadowPass=!0;w._shadowPass=!0};this.render=function(d,k){h.shadowMapEnabled&&h.shadowMapAutoUpdate&&this.update(d,k)};this.update=function(F,H){var I,M,N,L,Q,P,O,R,$,T=[];L=0;d.clearColor(1,1,1,1);d.disable(d.BLEND);d.enable(d.CULL_FACE);d.frontFace(d.CCW);h.shadowMapCullFace===THREE.CullFaceFront?
d.cullFace(d.FRONT):d.cullFace(d.BACK);h.setDepthTest(!0);I=0;for(M=F.__lights.length;I<M;I++)if(N=F.__lights[I],N.castShadow)if(N instanceof THREE.DirectionalLight&&N.shadowCascade)for(Q=0;Q<N.shadowCascadeCount;Q++){var S;if(N.shadowCascadeArray[Q])S=N.shadowCascadeArray[Q];else{$=N;O=Q;S=new THREE.DirectionalLight;S.isVirtual=!0;S.onlyShadow=!0;S.castShadow=!0;S.shadowCameraNear=$.shadowCameraNear;S.shadowCameraFar=$.shadowCameraFar;S.shadowCameraLeft=$.shadowCameraLeft;S.shadowCameraRight=$.shadowCameraRight;
S.shadowCameraBottom=$.shadowCameraBottom;S.shadowCameraTop=$.shadowCameraTop;S.shadowCameraVisible=$.shadowCameraVisible;S.shadowDarkness=$.shadowDarkness;S.shadowBias=$.shadowCascadeBias[O];S.shadowMapWidth=$.shadowCascadeWidth[O];S.shadowMapHeight=$.shadowCascadeHeight[O];S.pointsWorld=[];S.pointsFrustum=[];R=S.pointsWorld;P=S.pointsFrustum;for(var Y=0;8>Y;Y++)R[Y]=new THREE.Vector3,P[Y]=new THREE.Vector3;R=$.shadowCascadeNearZ[O];$=$.shadowCascadeFarZ[O];P[0].set(-1,-1,R);P[1].set(1,-1,R);P[2].set(-1,
1,R);P[3].set(1,1,R);P[4].set(-1,-1,$);P[5].set(1,-1,$);P[6].set(-1,1,$);P[7].set(1,1,$);S.originalCamera=H;P=new THREE.Gyroscope;P.position=N.shadowCascadeOffset;P.add(S);P.add(S.target);H.add(P);N.shadowCascadeArray[Q]=S;console.log("Created virtualLight",S)}O=N;R=Q;$=O.shadowCascadeArray[R];$.position.copy(O.position);$.target.position.copy(O.target.position);$.lookAt($.target);$.shadowCameraVisible=O.shadowCameraVisible;$.shadowDarkness=O.shadowDarkness;$.shadowBias=O.shadowCascadeBias[R];P=O.shadowCascadeNearZ[R];
O=O.shadowCascadeFarZ[R];$=$.pointsFrustum;$[0].z=P;$[1].z=P;$[2].z=P;$[3].z=P;$[4].z=O;$[5].z=O;$[6].z=O;$[7].z=O;T[L]=S;L++}else T[L]=N,L++;I=0;for(M=T.length;I<M;I++){N=T[I];N.shadowMap||(Q=THREE.LinearFilter,h.shadowMapType===THREE.PCFSoftShadowMap&&(Q=THREE.NearestFilter),N.shadowMap=new THREE.WebGLRenderTarget(N.shadowMapWidth,N.shadowMapHeight,{minFilter:Q,magFilter:Q,format:THREE.RGBAFormat}),N.shadowMapSize=new THREE.Vector2(N.shadowMapWidth,N.shadowMapHeight),N.shadowMatrix=new THREE.Matrix4);
if(!N.shadowCamera){if(N instanceof THREE.SpotLight)N.shadowCamera=new THREE.PerspectiveCamera(N.shadowCameraFov,N.shadowMapWidth/N.shadowMapHeight,N.shadowCameraNear,N.shadowCameraFar);else if(N instanceof THREE.DirectionalLight)N.shadowCamera=new THREE.OrthographicCamera(N.shadowCameraLeft,N.shadowCameraRight,N.shadowCameraTop,N.shadowCameraBottom,N.shadowCameraNear,N.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}F.add(N.shadowCamera);!0===F.autoUpdate&&F.updateMatrixWorld()}N.shadowCameraVisible&&
!N.cameraHelper&&(N.cameraHelper=new THREE.CameraHelper(N.shadowCamera),N.shadowCamera.add(N.cameraHelper));if(N.isVirtual&&S.originalCamera==H){Q=H;L=N.shadowCamera;P=N.pointsFrustum;$=N.pointsWorld;B.set(Infinity,Infinity,Infinity);C.set(-Infinity,-Infinity,-Infinity);for(O=0;8>O;O++)R=$[O],R.copy(P[O]),THREE.ShadowMapPlugin.__projector.unprojectVector(R,Q),R.applyMatrix4(L.matrixWorldInverse),R.x<B.x&&(B.x=R.x),R.x>C.x&&(C.x=R.x),R.y<B.y&&(B.y=R.y),R.y>C.y&&(C.y=R.y),R.z<B.z&&(B.z=R.z),R.z>C.z&&
(C.z=R.z);L.left=B.x;L.right=C.x;L.top=C.y;L.bottom=B.y;L.updateProjectionMatrix()}L=N.shadowMap;P=N.shadowMatrix;Q=N.shadowCamera;Q.position.getPositionFromMatrix(N.matrixWorld);D.getPositionFromMatrix(N.target.matrixWorld);Q.lookAt(D);Q.updateMatrixWorld();Q.matrixWorldInverse.getInverse(Q.matrixWorld);N.cameraHelper&&(N.cameraHelper.visible=N.shadowCameraVisible);N.shadowCameraVisible&&N.cameraHelper.update();P.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);P.multiply(Q.projectionMatrix);P.multiply(Q.matrixWorldInverse);
A.multiplyMatrices(Q.projectionMatrix,Q.matrixWorldInverse);s.setFromMatrix(A);h.setRenderTarget(L);h.clear();$=F.__webglObjects;N=0;for(L=$.length;N<L;N++)if(O=$[N],P=O.object,O.render=!1,P.visible&&P.castShadow&&(!(P instanceof THREE.Mesh||P instanceof THREE.ParticleSystem)||!P.frustumCulled||s.intersectsObject(P)))P._modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,P.matrixWorld),O.render=!0;N=0;for(L=$.length;N<L;N++)O=$[N],O.render&&(P=O.object,O=O.buffer,Y=P.material instanceof THREE.MeshFaceMaterial?
P.material.materials[0]:P.material,R=0<P.geometry.morphTargets.length&&Y.morphTargets,Y=P instanceof THREE.SkinnedMesh&&Y.skinning,R=P.customDepthMaterial?P.customDepthMaterial:Y?R?w:q:R?p:k,O instanceof THREE.BufferGeometry?h.renderBufferDirect(Q,F.__lights,null,R,O,P):h.renderBuffer(Q,F.__lights,null,R,O,P));$=F.__webglObjectsImmediate;N=0;for(L=$.length;N<L;N++)O=$[N],P=O.object,P.visible&&P.castShadow&&(P._modelViewMatrix.multiplyMatrices(Q.matrixWorldInverse,P.matrixWorld),h.renderImmediateObject(Q,
F.__lights,null,k,P))}I=h.getClearColor();M=h.getClearAlpha();d.clearColor(I.r,I.g,I.b,M);d.enable(d.BLEND);h.shadowMapCullFace===THREE.CullFaceFront&&d.cullFace(d.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){var d,h,k,p,q,w,s,A,B,C,D,F,H,I,M,N,L,Q;function P(d,h){return d.z!==h.z?h.z-d.z:h.id-d.id}var O,R,$,T,S,Y,X,ea;this.init=function(P){O=P.context;R=P;T=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]);S=new Uint16Array([0,1,2,0,2,3]);Y=O.createBuffer();X=O.createBuffer();O.bindBuffer(O.ARRAY_BUFFER,Y);O.bufferData(O.ARRAY_BUFFER,T,O.STATIC_DRAW);O.bindBuffer(O.ELEMENT_ARRAY_BUFFER,X);O.bufferData(O.ELEMENT_ARRAY_BUFFER,S,O.STATIC_DRAW);var P=O.createProgram(),
Z=O.createShader(O.VERTEX_SHADER),U=O.createShader(O.FRAGMENT_SHADER);O.shaderSource(Z,["precision "+R.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nuniform vec2 halfViewport;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n"));
O.shaderSource(U,["precision "+R.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n"));
O.compileShader(Z);O.compileShader(U);O.attachShader(P,Z);O.attachShader(P,U);O.linkProgram(P);ea=P;L=O.getAttribLocation(ea,"position");Q=O.getAttribLocation(ea,"uv");d=O.getUniformLocation(ea,"uvOffset");h=O.getUniformLocation(ea,"uvScale");k=O.getUniformLocation(ea,"rotation");p=O.getUniformLocation(ea,"scale");q=O.getUniformLocation(ea,"halfViewport");w=O.getUniformLocation(ea,"color");s=O.getUniformLocation(ea,"map");A=O.getUniformLocation(ea,"opacity");B=O.getUniformLocation(ea,"modelViewMatrix");
C=O.getUniformLocation(ea,"projectionMatrix");D=O.getUniformLocation(ea,"fogType");F=O.getUniformLocation(ea,"fogDensity");H=O.getUniformLocation(ea,"fogNear");I=O.getUniformLocation(ea,"fogFar");M=O.getUniformLocation(ea,"fogColor");N=O.getUniformLocation(ea,"alphaTest");P=document.createElement("canvas");P.width=8;P.height=8;Z=P.getContext("2d");Z.fillStyle="#ffffff";Z.fillRect(0,0,P.width,P.height);$=new THREE.Texture(P);$.needsUpdate=!0};this.render=function(S,T,U,V){var ga=S.__webglSprites,ca=
ga.length;if(ca){U*=0.5;V*=0.5;O.useProgram(ea);O.enableVertexAttribArray(L);O.enableVertexAttribArray(Q);O.disable(O.CULL_FACE);O.enable(O.BLEND);O.bindBuffer(O.ARRAY_BUFFER,Y);O.vertexAttribPointer(L,2,O.FLOAT,!1,16,0);O.vertexAttribPointer(Q,2,O.FLOAT,!1,16,8);O.bindBuffer(O.ELEMENT_ARRAY_BUFFER,X);O.uniformMatrix4fv(C,!1,T.projectionMatrix.elements);O.activeTexture(O.TEXTURE0);O.uniform1i(s,0);var ia=0,Ma=0,ja=S.fog;ja?(O.uniform3f(M,ja.color.r,ja.color.g,ja.color.b),ja instanceof THREE.Fog?(O.uniform1f(H,
ja.near),O.uniform1f(I,ja.far),O.uniform1i(D,1),Ma=ia=1):ja instanceof THREE.FogExp2&&(O.uniform1f(F,ja.density),O.uniform1i(D,2),Ma=ia=2)):(O.uniform1i(D,0),Ma=ia=0);for(var La,Va=[],ja=0;ja<ca;ja++)La=ga[ja],!1!==La.visible&&(La._modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,La.matrixWorld),La.z=-La._modelViewMatrix.elements[14]);ga.sort(P);for(ja=0;ja<ca;ja++)La=ga[ja],!1!==La.visible&&(T=La.material,O.uniform1f(N,T.alphaTest),O.uniformMatrix4fv(B,!1,La._modelViewMatrix.elements),Va[0]=
La.scale.x,Va[1]=La.scale.y,La=S.fog&&T.fog?Ma:0,ia!==La&&(O.uniform1i(D,La),ia=La),O.uniform2f(h,T.uvScale.x,T.uvScale.y),O.uniform2f(d,T.uvOffset.x,T.uvOffset.y),O.uniform1f(A,T.opacity),O.uniform3f(w,T.color.r,T.color.g,T.color.b),O.uniform1f(k,T.rotation),O.uniform2fv(p,Va),O.uniform2f(q,U,V),R.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst),R.setDepthTest(T.depthTest),R.setDepthWrite(T.depthWrite),T.map&&T.map.image&&T.map.image.width?R.setTexture(T.map,0):R.setTexture($,0),O.drawElements(O.TRIANGLES,
6,O.UNSIGNED_SHORT,0));O.enable(O.CULL_FACE)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var d,h,k,p,q,w,s=new THREE.Frustum,A=new THREE.Matrix4;this.init=function(s){d=s.context;h=s;var s=THREE.ShaderLib.depthRGBA,A=THREE.UniformsUtils.clone(s.uniforms);k=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:A});p=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:A,morphTargets:!0});q=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,
vertexShader:s.vertexShader,uniforms:A,skinning:!0});w=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:A,morphTargets:!0,skinning:!0});k._shadowPass=!0;p._shadowPass=!0;q._shadowPass=!0;w._shadowPass=!0};this.render=function(d,h){this.enabled&&this.update(d,h)};this.update=function(B,C){var D,F,H,I,M,N;d.clearColor(1,1,1,1);d.disable(d.BLEND);h.setDepthTest(!0);!0===B.autoUpdate&&B.updateMatrixWorld();C.matrixWorldInverse.getInverse(C.matrixWorld);A.multiplyMatrices(C.projectionMatrix,
C.matrixWorldInverse);s.setFromMatrix(A);h.setRenderTarget(this.renderTarget);h.clear();N=B.__webglObjects;D=0;for(F=N.length;D<F;D++)if(H=N[D],M=H.object,H.render=!1,M.visible&&(!(M instanceof THREE.Mesh||M instanceof THREE.ParticleSystem)||!M.frustumCulled||s.intersectsObject(M)))M._modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,M.matrixWorld),H.render=!0;var L;D=0;for(F=N.length;D<F;D++)if(H=N[D],H.render&&(M=H.object,H=H.buffer,!(M instanceof THREE.ParticleSystem)||M.customDepthMaterial))(L=
M.material instanceof THREE.MeshFaceMaterial?M.material.materials[0]:M.material)&&h.setMaterialFaces(M.material),I=0<M.geometry.morphTargets.length&&L.morphTargets,L=M instanceof THREE.SkinnedMesh&&L.skinning,I=M.customDepthMaterial?M.customDepthMaterial:L?I?w:q:I?p:k,H instanceof THREE.BufferGeometry?h.renderBufferDirect(C,B.__lights,null,I,H,M):h.renderBuffer(C,B.__lights,null,I,H,M);N=B.__webglObjectsImmediate;D=0;for(F=N.length;D<F;D++)H=N[D],M=H.object,M.visible&&(M._modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,
M.matrixWorld),h.renderImmediateObject(C,B.__lights,null,k,M));D=h.getClearColor();F=h.getClearAlpha();d.clearColor(D.r,D.g,D.b,F);d.enable(d.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};(function(d){function h(d,h,k){var p,q,s,w;p=(d[k.signx].x+h.x-k.ray.origin.x)*k.ray_invx;q=(d[1-k.signx].x+h.x-k.ray.origin.x)*k.ray_invx;s=(d[k.signy].y+h.y-k.ray.origin.y)*k.ray_invy;w=(d[1-k.signy].y+h.y-k.ray.origin.y)*k.ray_invy;if(p>w||s>q)return!1;s>p&&(p=s);w<q&&(q=w);s=(d[k.signz].z+h.z-k.ray.origin.z)*k.ray_invz;d=(d[1-k.signz].z+h.z-k.ray.origin.z)*k.ray_invz;if(p>d||s>q)return!1;s>p&&(p=s);d<q&&(q=d);return p<k.far&&q>k.near}d.Raycaster=function(h,k,p,q){this.ray=new d.Ray(h,k);this.near=
p||0;this.far=q||Infinity;this.ray_invx=0==this.ray.direction.x?Infinity:1/this.ray.direction.x;this.ray_invy=0==this.ray.direction.y?Infinity:1/this.ray.direction.y;this.ray_invz=0==this.ray.direction.z?Infinity:1/this.ray.direction.z;this.signx=0>this.ray_invx?1:0;this.signy=0>this.ray_invy?1:0;this.signz=0>this.ray_invz?1:0};var k=new d.Sphere,p=new d.Ray;new d.Plane;new d.Vector3;var q=new d.Vector3,w=new d.Matrix4,s=function(d,h){return d.distance-h.distance},A=new d.Vector3,B=new d.Vector3,
C=new d.Vector3,D=function(s,F,M){if(s instanceof d.Sprite){q.getPositionFromMatrix(s.matrixWorld);var N=F.ray.distanceToPoint(q);if(N>s.scale.x)return M;M.push({distance:N,point:s.position,face:null,object:s})}else if(s instanceof d.LOD)q.getPositionFromMatrix(s.matrixWorld),N=F.ray.origin.distanceTo(q),D(s.getObjectForDistance(N),F,M);else if(s instanceof d.Mesh){if(!1==s.visible||void 0!==s.geometry.min&&!h([s.geometry.min,s.geometry.max],s.position,F)||void 0!==s.geometry.boundingBox&&s.geometry.boundingBox&&
void 0!==s.geometry.boundingBox.min&&!h([s.geometry.boundingBox.min,s.geometry.boundingBox.max],s.position,F))return M;var L=s.geometry;w.getInverse(s.matrixWorld);p.copy(F.ray).applyMatrix4(w);if(L instanceof d.BufferGeometry){var Q=s.material;if(void 0===Q||!1===L.dynamic)return M;var P,O,R=F.precision;if(void 0!==L.attributes.index)for(var $=L.offsets,T=L.attributes.index.array,S=L.attributes.position.array,Y=L.offsets.length,X=L.attributes.index.array.length/3,X=0;X<Y;++X)for(var N=$[X].start,
ea=$[X].index,L=N,aa=N+$[X].count;L<aa;L+=3)N=ea+T[L],P=ea+T[L+1],O=ea+T[L+2],A.set(S[3*N],S[3*N+1],S[3*N+2]),B.set(S[3*P],S[3*P+1],S[3*P+2]),C.set(S[3*O],S[3*O+1],S[3*O+2]),P=Q.side===d.BackSide?p.intersectTriangle(C,B,A,!0):p.intersectTriangle(A,B,C,Q.side!==d.DoubleSide),null!==P&&(P.applyMatrix4(s.matrixWorld),N=F.ray.origin.distanceTo(P),N<R||(N<F.near||N>F.far)||M.push({distance:N,point:P,face:null,faceIndex:null,object:s}));else{S=L.attributes.position.array;X=L.attributes.position.array.length;
for(L=0;L<X;L+=3)N=L,P=L+1,O=L+2,A.set(S[3*N],S[3*N+1],S[3*N+2]),B.set(S[3*P],S[3*P+1],S[3*P+2]),C.set(S[3*O],S[3*O+1],S[3*O+2]),P=Q.side===d.BackSide?p.intersectTriangle(C,B,A,!0):p.intersectTriangle(A,B,C,Q.side!==d.DoubleSide),null!==P&&(P.applyMatrix4(s.matrixWorld),N=F.ray.origin.distanceTo(P),N<R||(N<F.near||N>F.far)||M.push({distance:N,point:P,face:null,faceIndex:null,object:s}))}}else if(L instanceof d.Geometry){T=s.material instanceof d.MeshFaceMaterial;S=!0===T?s.material.materials:null;
R=F.precision;$=L.vertices;Y=0;for(X=L.faces.length;Y<X;Y++)if(ea=L.faces[Y],void 0===ea.bound_min||h([ea.bound_min,ea.bound_max],s.position,F))Q=!0===T?S[ea.materialIndex]:s.material,void 0!==Q&&(N=$[ea.a],P=$[ea.b],O=$[ea.c],P=Q.side===d.BackSide?p.intersectTriangle(O,P,N,!0):p.intersectTriangle(N,P,O,Q.side!==d.DoubleSide),null!==P&&(P.applyMatrix4(s.matrixWorld),N=F.ray.origin.distanceTo(P),N<R||(N<F.near||N>F.far)||M.push({distance:N,point:P,face:ea,faceIndex:Y,object:s})))}}else if(s instanceof
d.Line){R=F.linePrecision;Q=R*R;L=s.geometry;null===L.boundingSphere&&L.computeBoundingSphere();k.copy(L.boundingSphere);k.applyMatrix4(s.matrixWorld);if(!1===F.ray.isIntersectionSphere(k))return M;w.getInverse(s.matrixWorld);p.copy(F.ray).applyMatrix4(w);if(L instanceof d.Geometry){$=L.vertices;R=$.length;P=new d.Vector3;O=new d.Vector3;X=s.type===d.LineStrip?1:2;for(L=0;L<R-1;L+=X)p.distanceSqToSegment($[L],$[L+1],O,P)>Q||(N=p.origin.distanceTo(O),N<F.near||N>F.far||M.push({distance:N,point:P.clone().applyMatrix4(s.matrixWorld),
face:null,faceIndex:null,object:s}))}}},F=function(d,h,k){for(var d=d.getDescendants(),p=0,q=d.length;p<q;p++)D(d[p],h,k)};d.Raycaster.prototype.precision=1E-4;d.Raycaster.prototype.linePrecision=1;d.Raycaster.prototype.set=function(d,h){this.ray.set(d,h)};d.Raycaster.prototype.intersectObject=function(d,h){var k=[];!0===h&&F(d,this,k);D(d,this,k);k.sort(s);return k};d.Raycaster.prototype.intersectObjects=function(d,h){for(var k=[],p=0,q=d.length;p<q;p++)D(d[p],this,k),!0===h&&F(d[p],this,k);k.sort(s);
return k}})(THREE);THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP ) || defined (BASIC)\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\nvLightBack = vec3( 0.2, 0.2, 0.2 );\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nuniform int boneTextureWidth;\nuniform int boneTextureHeight;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, float( boneTextureWidth ) );\nfloat y = floor( j / float( boneTextureWidth ) );\nfloat dx = 1.0 / float( boneTextureWidth );\nfloat dy = 1.0 / float( boneTextureHeight );\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif",clipping_pars_fragment:"uniform int clipStatus;\nuniform int clipXDirection;\nuniform float clipXPosition;\nuniform int clipYDirection;\nuniform float clipYPosition;\nuniform int clipZDirection;\nuniform float clipZPosition;",
clipping_assign_world_pos:"customWorldPosition = worldPosition;",clipping_declare_world_pos:"varying vec4 customWorldPosition;",clipping_check_or_discard:"if(clipStatus==1){\nif(clipXDirection==0 && customWorldPosition[0] > clipXPosition) discard;\nelse if(clipXDirection==1 && customWorldPosition[0] < clipXPosition) discard;\nif(clipYDirection==0 && customWorldPosition[1] > clipYPosition) discard;\nelse if(clipYDirection==1 && customWorldPosition[1] < clipYPosition) discard;\nif(clipZDirection==0 && customWorldPosition[2] > clipZPosition) discard;\nelse if(clipZDirection==1 && customWorldPosition[2] < clipZPosition) discard;\n}",
clipping_fragcolor:"#ifdef DOUBLE_SIDED\n#ifdef gl_FrontFacing\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif"};
THREE.UniformsUtils={merge:function(d){var h,k,p,q={};for(h=0;h<d.length;h++)for(k in p=this.clone(d[h]),p)q[k]=p[k];return q},clone:function(d){var h,k,p,q={};for(h in d)for(k in q[h]={},d[h])p=d[h][k],q[h][k]=p instanceof THREE.Color||p instanceof THREE.Vector2||p instanceof THREE.Vector3||p instanceof THREE.Vector4||p instanceof THREE.Matrix4||p instanceof THREE.Texture?p.clone():p instanceof Array?p.slice():p;return q}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}},clipview:{clipStatus:{type:"i",value:0},clipXDirection:{type:"i",value:0},clipXPosition:{type:"f",value:0},clipYDirection:{type:"i",
value:0},clipYPosition:{type:"f",value:0},clipZDirection:{type:"i",value:0},clipZPosition:{type:"f",value:0}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap,THREE.UniformsLib.clipview]),vertexShader:["#define BASIC",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.clipping_declare_world_pos,
"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.clipping_assign_world_pos,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.clipping_declare_world_pos,THREE.ShaderChunk.clipping_pars_fragment,"uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {",THREE.ShaderChunk.clipping_check_or_discard,
"gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,
THREE.UniformsLib.clipview,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;",THREE.ShaderChunk.clipping_declare_world_pos,"#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.clipping_assign_world_pos,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.clipping_declare_world_pos,THREE.ShaderChunk.clipping_pars_fragment,"uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {",THREE.ShaderChunk.clipping_check_or_discard,"gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.clipping_fragcolor,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,
1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,
THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",
value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},
normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,
THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",
value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},
depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};var LZMA=LZMA||{};LZMA.OutWindow=function(){this._windowSize=0};LZMA.OutWindow.prototype.create=function(d){if(!this._buffer||this._windowSize!==d)this._buffer=[];this._windowSize=d;this._streamPos=this._pos=0};LZMA.OutWindow.prototype.flush=function(){var d=this._pos-this._streamPos;if(0!==d){for(;d--;)this._stream.writeByte(this._buffer[this._streamPos++]);this._pos>=this._windowSize&&(this._pos=0);this._streamPos=this._pos}};
LZMA.OutWindow.prototype.releaseStream=function(){this.flush();this._stream=null};LZMA.OutWindow.prototype.setStream=function(d){this.releaseStream();this._stream=d};LZMA.OutWindow.prototype.init=function(d){d||(this._pos=this._streamPos=0)};LZMA.OutWindow.prototype.copyBlock=function(d,h){var k=this._pos-d-1;for(0>k&&(k+=this._windowSize);h--;)k>=this._windowSize&&(k=0),this._buffer[this._pos++]=this._buffer[k++],this._pos>=this._windowSize&&this.flush()};
LZMA.OutWindow.prototype.putByte=function(d){this._buffer[this._pos++]=d;this._pos>=this._windowSize&&this.flush()};LZMA.OutWindow.prototype.getByte=function(d){d=this._pos-d-1;0>d&&(d+=this._windowSize);return this._buffer[d]};LZMA.RangeDecoder=function(){};LZMA.RangeDecoder.prototype.setStream=function(d){this._stream=d};LZMA.RangeDecoder.prototype.releaseStream=function(){this._stream=null};
LZMA.RangeDecoder.prototype.init=function(){var d=5;this._code=0;for(this._range=-1;d--;)this._code=this._code<<8|this._stream.readByte()};LZMA.RangeDecoder.prototype.decodeDirectBits=function(d){for(var h=0,k;d--;)this._range>>>=1,k=this._code-this._range>>>31,this._code-=this._range&k-1,h=h<<1|1-k,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return h};
LZMA.RangeDecoder.prototype.decodeBit=function(d,h){var k=d[h],p=(this._range>>>11)*k;if((this._code^2147483648)<(p^2147483648))return this._range=p,d[h]+=2048-k>>>5,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8),0;this._range-=p;this._code-=p;d[h]-=k>>>5;0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return 1};LZMA.initBitModels=function(d,h){for(;h--;)d[h]=1024};
LZMA.BitTreeDecoder=function(d){this._models=[];this._numBitLevels=d};LZMA.BitTreeDecoder.prototype.init=function(){LZMA.initBitModels(this._models,1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.decode=function(d){for(var h=1,k=this._numBitLevels;k--;)h=h<<1|d.decodeBit(this._models,h);return h-(1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.reverseDecode=function(d){for(var h=1,k=0,p=0,q;p<this._numBitLevels;++p)q=d.decodeBit(this._models,h),h=h<<1|q,k|=q<<p;return k};
LZMA.reverseDecode2=function(d,h,k,p){for(var q=1,w=0,s=0,A;s<p;++s)A=k.decodeBit(d,h+q),q=q<<1|A,w|=A<<s;return w};LZMA.LenDecoder=function(){this._choice=[];this._lowCoder=[];this._midCoder=[];this._highCoder=new LZMA.BitTreeDecoder(8);this._numPosStates=0};LZMA.LenDecoder.prototype.create=function(d){for(;this._numPosStates<d;++this._numPosStates)this._lowCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3),this._midCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3)};
LZMA.LenDecoder.prototype.init=function(){var d=this._numPosStates;for(LZMA.initBitModels(this._choice,2);d--;)this._lowCoder[d].init(),this._midCoder[d].init();this._highCoder.init()};LZMA.LenDecoder.prototype.decode=function(d,h){return 0===d.decodeBit(this._choice,0)?this._lowCoder[h].decode(d):0===d.decodeBit(this._choice,1)?8+this._midCoder[h].decode(d):16+this._highCoder.decode(d)};LZMA.Decoder2=function(){this._decoders=[]};
LZMA.Decoder2.prototype.init=function(){LZMA.initBitModels(this._decoders,768)};LZMA.Decoder2.prototype.decodeNormal=function(d){var h=1;do h=h<<1|d.decodeBit(this._decoders,h);while(256>h);return h&255};LZMA.Decoder2.prototype.decodeWithMatchByte=function(d,h){var k=1,p,q;do if(p=h>>7&1,h<<=1,q=d.decodeBit(this._decoders,(1+p<<8)+k),k=k<<1|q,p!==q){for(;256>k;)k=k<<1|d.decodeBit(this._decoders,k);break}while(256>k);return k&255};LZMA.LiteralDecoder=function(){};
LZMA.LiteralDecoder.prototype.create=function(d,h){var k;if(!this._coders||!(this._numPrevBits===h&&this._numPosBits===d)){this._numPosBits=d;this._posMask=(1<<d)-1;this._numPrevBits=h;this._coders=[];for(k=1<<this._numPrevBits+this._numPosBits;k--;)this._coders[k]=new LZMA.Decoder2}};LZMA.LiteralDecoder.prototype.init=function(){for(var d=1<<this._numPrevBits+this._numPosBits;d--;)this._coders[d].init()};
LZMA.LiteralDecoder.prototype.getDecoder=function(d,h){return this._coders[((d&this._posMask)<<this._numPrevBits)+((h&255)>>>8-this._numPrevBits)]};
LZMA.Decoder=function(){this._outWindow=new LZMA.OutWindow;this._rangeDecoder=new LZMA.RangeDecoder;this._isMatchDecoders=[];this._isRepDecoders=[];this._isRepG0Decoders=[];this._isRepG1Decoders=[];this._isRepG2Decoders=[];this._isRep0LongDecoders=[];this._posSlotDecoder=[];this._posDecoders=[];this._posAlignDecoder=new LZMA.BitTreeDecoder(4);this._lenDecoder=new LZMA.LenDecoder;this._repLenDecoder=new LZMA.LenDecoder;this._literalDecoder=new LZMA.LiteralDecoder;this._dictionarySizeCheck=this._dictionarySize=
-1;this._posSlotDecoder[0]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[1]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[2]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[3]=new LZMA.BitTreeDecoder(6)};LZMA.Decoder.prototype.setDictionarySize=function(d){if(0>d)return!1;this._dictionarySize!==d&&(this._dictionarySize=d,this._dictionarySizeCheck=Math.max(this._dictionarySize,1),this._outWindow.create(Math.max(this._dictionarySizeCheck,4096)));return!0};
LZMA.Decoder.prototype.setLcLpPb=function(d,h,k){var p=1<<k;if(8<d||4<h||4<k)return!1;this._literalDecoder.create(h,d);this._lenDecoder.create(p);this._repLenDecoder.create(p);this._posStateMask=p-1;return!0};
LZMA.Decoder.prototype.init=function(){var d=4;this._outWindow.init(!1);LZMA.initBitModels(this._isMatchDecoders,192);LZMA.initBitModels(this._isRep0LongDecoders,192);LZMA.initBitModels(this._isRepDecoders,12);LZMA.initBitModels(this._isRepG0Decoders,12);LZMA.initBitModels(this._isRepG1Decoders,12);LZMA.initBitModels(this._isRepG2Decoders,12);LZMA.initBitModels(this._posDecoders,114);for(this._literalDecoder.init();d--;)this._posSlotDecoder[d].init();this._lenDecoder.init();this._repLenDecoder.init();
this._posAlignDecoder.init();this._rangeDecoder.init()};
LZMA.Decoder.prototype.decode=function(d,h,k){var p=0,q=0,w=0,s=0,A=0,B=0,C=0;this._rangeDecoder.setStream(d);this._outWindow.setStream(h);for(this.init();0>k||B<k;)if(d=B&this._posStateMask,0===this._rangeDecoder.decodeBit(this._isMatchDecoders,(p<<4)+d))C=this._literalDecoder.getDecoder(B++,C),C=7<=p?C.decodeWithMatchByte(this._rangeDecoder,this._outWindow.getByte(q)):C.decodeNormal(this._rangeDecoder),this._outWindow.putByte(C),p=4>p?0:p-(10>p?3:6);else{if(1===this._rangeDecoder.decodeBit(this._isRepDecoders,
p))C=0,0===this._rangeDecoder.decodeBit(this._isRepG0Decoders,p)?0===this._rangeDecoder.decodeBit(this._isRep0LongDecoders,(p<<4)+d)&&(p=7>p?9:11,C=1):(0===this._rangeDecoder.decodeBit(this._isRepG1Decoders,p)?h=w:(0===this._rangeDecoder.decodeBit(this._isRepG2Decoders,p)?h=s:(h=A,A=s),s=w),w=q,q=h),0===C&&(C=2+this._repLenDecoder.decode(this._rangeDecoder,d),p=7>p?8:11);else if(A=s,s=w,w=q,C=2+this._lenDecoder.decode(this._rangeDecoder,d),p=7>p?7:10,d=this._posSlotDecoder[5>=C?C-2:3].decode(this._rangeDecoder),
4<=d)if(h=(d>>1)-1,q=(2|d&1)<<h,14>d)q+=LZMA.reverseDecode2(this._posDecoders,q-d-1,this._rangeDecoder,h);else{if(q+=this._rangeDecoder.decodeDirectBits(h-4)<<4,q+=this._posAlignDecoder.reverseDecode(this._rangeDecoder),0>q){if(-1===q)break;return!1}}else q=d;if(q>=B||q>=this._dictionarySizeCheck)return!1;this._outWindow.copyBlock(q,C);B+=C;C=this._outWindow.getByte(0)}this._outWindow.flush();this._outWindow.releaseStream();this._rangeDecoder.releaseStream();return!0};
LZMA.Decoder.prototype.setDecoderProperties=function(d){var h,k;if(5>d.size)return!1;h=d.readByte();k=h%9;h=~~(h/9);if(!this.setLcLpPb(k,h%5,~~(h/5)))return!1;h=d.readByte();h|=d.readByte()<<8;h|=d.readByte()<<16;h+=16777216*d.readByte();return this.setDictionarySize(h)};LZMA.decompress=function(d,h,k,p){var q=new LZMA.Decoder;if(!q.setDecoderProperties(d))throw"Incorrect stream properties";if(!q.decode(h,k,p))throw"Error in data stream";return!0};var CTM=CTM||{};CTM.CompressionMethod={RAW:5718354,MG1:3229517,MG2:3295053};CTM.Flags={NORMALS:1};CTM.File=function(d){this.load(d)};CTM.File.prototype.load=function(d){this.header=new CTM.FileHeader(d);this.body=new CTM.FileBody(this.header);this.getReader().read(d,this.body)};
CTM.File.prototype.getReader=function(){var d;switch(this.header.compressionMethod){case CTM.CompressionMethod.RAW:d=new CTM.ReaderRAW;break;case CTM.CompressionMethod.MG1:d=new CTM.ReaderMG1;break;case CTM.CompressionMethod.MG2:d=new CTM.ReaderMG2}return d};
CTM.FileHeader=function(d){d.readInt32();this.fileFormat=d.readInt32();this.compressionMethod=d.readInt32();this.vertexCount=d.readInt32();this.triangleCount=d.readInt32();this.uvMapCount=d.readInt32();this.attrMapCount=d.readInt32();this.flags=d.readInt32();this.comment=d.readString()};CTM.FileHeader.prototype.hasNormals=function(){return this.flags&CTM.Flags.NORMALS};
CTM.FileBody=function(d){var h=3*d.triangleCount,k=3*d.vertexCount,p=d.hasNormals()?3*d.vertexCount:0,q=2*d.vertexCount,w=4*d.vertexCount,s=0,A=new ArrayBuffer(4*(h+k+p+q*d.uvMapCount+w*d.attrMapCount));this.indices=new Uint32Array(A,0,h);this.vertices=new Float32Array(A,4*h,k);d.hasNormals()&&(this.normals=new Float32Array(A,4*(h+k),p));if(d.uvMapCount){this.uvMaps=[];for(s=0;s<d.uvMapCount;++s)this.uvMaps[s]={uv:new Float32Array(A,4*(h+k+p+s*q),q)}}if(d.attrMapCount){this.attrMaps=[];for(s=0;s<
d.attrMapCount;++s)this.attrMaps[s]={attr:new Float32Array(A,4*(h+k+p+q*d.uvMapCount+s*w),w)}}};
CTM.FileMG2Header=function(d){d.readInt32();this.vertexPrecision=d.readFloat32();this.normalPrecision=d.readFloat32();this.lowerBoundx=d.readFloat32();this.lowerBoundy=d.readFloat32();this.lowerBoundz=d.readFloat32();this.higherBoundx=d.readFloat32();this.higherBoundy=d.readFloat32();this.higherBoundz=d.readFloat32();this.divx=d.readInt32();this.divy=d.readInt32();this.divz=d.readInt32();this.sizex=(this.higherBoundx-this.lowerBoundx)/this.divx;this.sizey=(this.higherBoundy-this.lowerBoundy)/this.divy;
this.sizez=(this.higherBoundz-this.lowerBoundz)/this.divz};CTM.ReaderRAW=function(){};CTM.ReaderRAW.prototype.read=function(d,h){this.readIndices(d,h.indices);this.readVertices(d,h.vertices);h.normals&&this.readNormals(d,h.normals);h.uvMaps&&this.readUVMaps(d,h.uvMaps);h.attrMaps&&this.readAttrMaps(d,h.attrMaps)};CTM.ReaderRAW.prototype.readIndices=function(d,h){d.readInt32();d.readArrayInt32(h)};CTM.ReaderRAW.prototype.readVertices=function(d,h){d.readInt32();d.readArrayFloat32(h)};
CTM.ReaderRAW.prototype.readNormals=function(d,h){d.readInt32();d.readArrayFloat32(h)};CTM.ReaderRAW.prototype.readUVMaps=function(d,h){for(var k=0;k<h.length;++k)d.readInt32(),h[k].name=d.readString(),h[k].filename=d.readString(),d.readArrayFloat32(h[k].uv)};CTM.ReaderRAW.prototype.readAttrMaps=function(d,h){for(var k=0;k<h.length;++k)d.readInt32(),h[k].name=d.readString(),d.readArrayFloat32(h[k].attr)};CTM.ReaderMG1=function(){};
CTM.ReaderMG1.prototype.read=function(d,h){this.readIndices(d,h.indices);this.readVertices(d,h.vertices);h.normals&&this.readNormals(d,h.normals);h.uvMaps&&this.readUVMaps(d,h.uvMaps);h.attrMaps&&this.readAttrMaps(d,h.attrMaps)};CTM.ReaderMG1.prototype.readIndices=function(d,h){d.readInt32();d.readInt32();var k=new CTM.InterleavedStream(h,3);LZMA.decompress(d,d,k,k.data.length);CTM.restoreIndices(h,h.length)};
CTM.ReaderMG1.prototype.readVertices=function(d,h){d.readInt32();d.readInt32();var k=new CTM.InterleavedStream(h,1);LZMA.decompress(d,d,k,k.data.length)};CTM.ReaderMG1.prototype.readNormals=function(d,h){d.readInt32();d.readInt32();var k=new CTM.InterleavedStream(h,3);LZMA.decompress(d,d,k,k.data.length)};
CTM.ReaderMG1.prototype.readUVMaps=function(d,h){for(var k=0;k<h.length;++k){d.readInt32();h[k].name=d.readString();h[k].filename=d.readString();d.readInt32();var p=new CTM.InterleavedStream(h[k].uv,2);LZMA.decompress(d,d,p,p.data.length)}};CTM.ReaderMG1.prototype.readAttrMaps=function(d,h){for(var k=0;k<h.length;++k){d.readInt32();h[k].name=d.readString();d.readInt32();var p=new CTM.InterleavedStream(h[k].attr,4);LZMA.decompress(d,d,p,p.data.length)}};CTM.ReaderMG2=function(){};
CTM.ReaderMG2.prototype.read=function(d,h){this.MG2Header=new CTM.FileMG2Header(d);this.readVertices(d,h.vertices);this.readIndices(d,h.indices);h.normals&&this.readNormals(d,h);h.uvMaps&&this.readUVMaps(d,h.uvMaps);h.attrMaps&&this.readAttrMaps(d,h.attrMaps)};CTM.ReaderMG2.prototype.readVertices=function(d,h){d.readInt32();d.readInt32();var k=new CTM.InterleavedStream(h,3);LZMA.decompress(d,d,k,k.data.length);k=this.readGridIndices(d,h);CTM.restoreVertices(h,this.MG2Header,k,this.MG2Header.vertexPrecision)};
CTM.ReaderMG2.prototype.readGridIndices=function(d,h){d.readInt32();d.readInt32();var k=new Uint32Array(h.length/3),p=new CTM.InterleavedStream(k,1);LZMA.decompress(d,d,p,p.data.length);CTM.restoreGridIndices(k,k.length);return k};CTM.ReaderMG2.prototype.readIndices=function(d,h){d.readInt32();d.readInt32();var k=new CTM.InterleavedStream(h,3);LZMA.decompress(d,d,k,k.data.length);CTM.restoreIndices(h,h.length)};
CTM.ReaderMG2.prototype.readNormals=function(d,h){d.readInt32();d.readInt32();var k=new CTM.InterleavedStream(h.normals,3);LZMA.decompress(d,d,k,k.data.length);k=CTM.calcSmoothNormals(h.indices,h.vertices);CTM.restoreNormals(h.normals,k,this.MG2Header.normalPrecision)};
CTM.ReaderMG2.prototype.readUVMaps=function(d,h){for(var k=0;k<h.length;++k){d.readInt32();h[k].name=d.readString();h[k].filename=d.readString();var p=d.readFloat32();d.readInt32();var q=new CTM.InterleavedStream(h[k].uv,2);LZMA.decompress(d,d,q,q.data.length);CTM.restoreMap(h[k].uv,2,p)}};
CTM.ReaderMG2.prototype.readAttrMaps=function(d,h){for(var k=0;k<h.length;++k){d.readInt32();h[k].name=d.readString();var p=d.readFloat32();d.readInt32();var q=new CTM.InterleavedStream(h[k].attr,4);LZMA.decompress(d,d,q,q.data.length);CTM.restoreMap(h[k].attr,4,p)}};CTM.restoreIndices=function(d,h){var k=3;0<h&&(d[2]+=d[0],d[1]+=d[0]);for(;k<h;k+=3)d[k]+=d[k-3],d[k+1]=d[k]===d[k-3]?d[k+1]+d[k-2]:d[k+1]+d[k],d[k+2]+=d[k]};CTM.restoreGridIndices=function(d,h){for(var k=1;k<h;++k)d[k]+=d[k-1]};
CTM.restoreVertices=function(d,h,k,p){for(var q,w,s,A,B,C=new Uint32Array(d.buffer,d.byteOffset,d.length),D=h.divx,F=D*h.divy,H=2147483647,I=0,M=0,N=0,L=k.length;M<L;N+=3)s=q=k[M++],B=~~(s/F),s-=~~(B*F),A=~~(s/D),s-=~~(A*D),w=C[N],q===H&&(w+=I),d[N]=h.lowerBoundx+s*h.sizex+p*w,d[N+1]=h.lowerBoundy+A*h.sizey+p*C[N+1],d[N+2]=h.lowerBoundz+B*h.sizez+p*C[N+2],H=q,I=w};
CTM.restoreNormals=function(d,h,k){for(var p,q,w,s,A,B,C=new Uint32Array(d.buffer,d.byteOffset,d.length),D=0,F=d.length;D<F;D+=3)p=C[D]*k,q=C[D+1],0===q?(d[D]=h[D]*p,d[D+1]=h[D+1]*p,d[D+2]=h[D+2]*p):(w=4>=q?1.5707963267948966*(C[D+2]-2):1.5707963267948966*(4*C[D+2]/q-2),q*=1.5707963267948966*k,s=p*Math.sin(q),A=s*Math.cos(w),w=s*Math.sin(w),p*=Math.cos(q),s=h[D+1],q=h[D]-h[D+2],B=Math.sqrt(2*s*s+q*q),1E-20<B&&(q/=B,s/=B),d[D]=h[D]*p+(h[D+1]*s-h[D+2]*q)*w-s*A,d[D+1]=h[D+1]*p-(h[D+2]+h[D])*s*w+q*A,
d[D+2]=h[D+2]*p+(h[D]*q+h[D+1]*s)*w+s*A)};CTM.restoreMap=function(d,h,k){for(var p,q,w=new Uint32Array(d.buffer,d.byteOffset,d.length),s=0,A,B=d.length;s<h;++s){p=0;for(A=s;A<B;A+=h)q=w[A],p+=q&1?-(q+1>>1):q>>1,d[A]=p*k}};
CTM.calcSmoothNormals=function(d,h){var k=new Float32Array(h.length),p,q,w,s,A,B,C,D,F,H,I,M;I=0;for(M=d.length;I<M;)p=3*d[I++],q=3*d[I++],w=3*d[I++],B=h[q]-h[p],D=h[w]-h[p],C=h[q+1]-h[p+1],F=h[w+1]-h[p+1],A=h[q+2]-h[p+2],H=h[w+2]-h[p+2],s=C*H-A*F,A=A*D-B*H,B=B*F-C*D,C=Math.sqrt(s*s+A*A+B*B),1E-10<C&&(s/=C,A/=C,B/=C),k[p]+=s,k[p+1]+=A,k[p+2]+=B,k[q]+=s,k[q+1]+=A,k[q+2]+=B,k[w]+=s,k[w+1]+=A,k[w+2]+=B;I=0;for(M=k.length;I<M;I+=3)C=Math.sqrt(k[I]*k[I]+k[I+1]*k[I+1]+k[I+2]*k[I+2]),1E-10<C&&(k[I]/=C,k[I+
1]/=C,k[I+2]/=C);return k};CTM.isLittleEndian=function(){var d=new ArrayBuffer(2),h=new Uint8Array(d),d=new Uint16Array(d);h[0]=1;return 1===d[0]}();CTM.InterleavedStream=function(d,h){this.data=new Uint8Array(d.buffer,d.byteOffset,d.byteLength);this.offset=CTM.isLittleEndian?3:0;this.count=4*h;this.len=this.data.length};
CTM.InterleavedStream.prototype.writeByte=function(d){this.data[this.offset]=d;this.offset+=this.count;this.offset>=this.len&&(this.offset-=this.len-4,this.offset>=this.count&&(this.offset-=this.count+(CTM.isLittleEndian?1:-1)))};CTM.Stream=function(d){this.data=d;this.offset=0};CTM.Stream.prototype.TWO_POW_MINUS23=Math.pow(2,-23);CTM.Stream.prototype.TWO_POW_MINUS126=Math.pow(2,-126);CTM.Stream.prototype.readByte=function(){return this.data[this.offset++]&255};
CTM.Stream.prototype.readInt32=function(){var d=this.readByte(),d=d|this.readByte()<<8,d=d|this.readByte()<<16;return d|this.readByte()<<24};CTM.Stream.prototype.readFloat32=function(){var d=this.readByte(),d=d+(this.readByte()<<8),h=this.readByte(),k=this.readByte(),d=d+((h&127)<<16),h=(k&127)<<1|(h&128)>>>7,k=k&128?-1:1;return 255===h?0!==d?NaN:Infinity*k:0<h?k*(1+d*this.TWO_POW_MINUS23)*Math.pow(2,h-127):0!==d?k*d*this.TWO_POW_MINUS126:0*k};
CTM.Stream.prototype.readString=function(){var d=this.readInt32();this.offset+=d;return this.data.subarray(this.offset-d,d)};CTM.Stream.prototype.readArrayInt32=function(d){for(var h=0,k=d.length;h<k;)d[h++]=this.readInt32();return d};CTM.Stream.prototype.readArrayFloat32=function(d){for(var h=0,k=d.length;h<k;)d[h++]=this.readFloat32();return d};THREE.CTMLoader=function(d){THREE.Loader.call(this,d)};THREE.CTMLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.CTMLoader.prototype.loadParts=function(d,h,k){var p=this,q=new XMLHttpRequest,w=k.basePath?k.basePath:this.extractUrlBase(d);q.onreadystatechange=function(){if(4===q.readyState&&(200===q.status||0===q.status)){for(var d=JSON.parse(q.responseText),A=[],B=[],C=0,D=0;D<d.materials.length;D++)A[D]=THREE.Loader.prototype.createMaterial(d.materials[D],w);p.load(w+d.data,function(k){C+=1;B.push(k);C===d.offsets.length&&h(B,A)},{useWorker:k.useWorker,useBuffers:k.useBuffers,offsets:d.offsets})}};q.open("GET",
d,!0);q.setRequestHeader("Content-Type","text/plain");q.send(null)};
THREE.CTMLoader.prototype.load=function(d,h,k){var p=this,q=void 0!==k.offsets?k.offsets:[0],w=void 0!==k.useBuffers?k.useBuffers:!0,s=new XMLHttpRequest;s.onreadystatechange=function(){if(4===s.readyState)if(200===s.status||0===s.status){var A=new Uint8Array(s.response),B=Date.now();if(k.useWorker){var C=new Worker("js/loaders/ctm/CTMWorker.js");C.onmessage=function(d){for(var d=d.data,k=0;k<d.length;k++){var q=d[k],s=Date.now();w?p.createModelBuffers(q,h):p.createModelClassic(q,h);q=Date.now();
console.log("model load time [worker]: "+(q-s)+" ms, total: "+(q-B))}};C.postMessage({data:A,offsets:q})}else for(C=0;C<q.length;C++){var D=new CTM.Stream(A);D.offset=q[C];D=new CTM.File(D);w?p.createModelBuffers(D,h):p.createModelClassic(D,h)}}else console.error("Couldn't load ["+d+"] ["+s.status+"]");else 3!==s.readyState&&2===s.readyState&&s.getResponseHeader("Content-Length")};s.open("GET",d,!0);s.responseType="arraybuffer";s.send(null)};
THREE.CTMLoader.prototype.createModelBuffers=function(d,h){var k=function(){this.materials=[];THREE.BufferGeometry.call(this);Date.now();var h=d.body.indices,k=d.body.vertices,w=d.body.normals,s,A;void 0!==d.body.uvMaps&&0<d.body.uvMaps.length&&(s=d.body.uvMaps[0].uv);void 0!==d.body.attrMaps&&(0<d.body.attrMaps.length&&"Color"===d.body.attrMaps[0].name)&&(A=d.body.attrMaps[0].attr);for(var B=function(d,h){void 0===h[d]&&(h[d]=H,F[H]=d,H+=1);return h[d]},C=new Uint32Array(h.length),D={},F={},H=0,
I=0,M=Math.ceil(h.length/3E3),N=new Uint32Array(M),L=0;L<h.length;L+=3){var Q=h[L],P=h[L+1],O=h[L+2];B(Q,D);B(P,D);B(O,D);65535<Math.abs(D[Q]-D[P])||65535<Math.abs(D[P]-D[O])||65535<Math.abs(D[O]-D[Q])?(I>=M&&(console.warn("reached sprawled faces limit: "+I),M*=2,Q=new Uint32Array(M),Q.set(N),N=Q),N[I]=L,I+=1):(C[L]=D[Q],C[L+1]=D[P],C[L+2]=D[O])}M={};for(Q=0;Q<I;Q++){L=N[Q];for(D=0;3>D;D++)C[L+D]=B(h[L+D],M)}var L=new Float32Array(3*H),R,$,T;w&&(R=new Float32Array(3*H));s&&($=new Float32Array(2*H));
A&&(T=new Float32Array(4*H));for(h=0;h<H;h++)B=F[h],I=h,N=3*B,D=3*B+1,M=3*B+2,Q=3*I,P=3*I+1,O=3*I+2,L[Q]=k[N],L[P]=k[D],L[O]=k[M],w&&(R[Q]=w[N],R[P]=w[D],R[O]=w[M]),s&&($[2*I]=s[2*B],$[2*I+1]=s[2*B+1]),A&&(T[4*I]=A[4*B],T[4*I+1]=A[4*B+1],T[4*I+2]=A[4*B+2],T[4*I+3]=A[4*B+3]);h=C;k=L;w&&(w=R);s&&(s=$);A&&(A=T);this.offsets=[];C=h;R=0;T=k.length;B=0;$=T;for(L=0;L<C.length;){for(D=0;3>D;++D)I=C[L++],I<T&&(T=I),I>B&&(B=I);if(65535<B-T){L-=3;if(0<$)for(T=R;T<L;++T)C[T]-=$;this.offsets.push({start:R,count:L-
R,index:$});R=L;T=k.length;B=0}$=T}if(0<$)for(T=R;T<L;++T)C[T]-=$;this.offsets.push({start:R,count:L-R,index:$});C=new Uint16Array(h);R=this.attributes;R.index={itemSize:1,array:C,numItems:C.length};R.position={itemSize:3,array:k,numItems:k.length};void 0!==w&&(R.normal={itemSize:3,array:w,numItems:w.length});void 0!==s&&(R.uv={itemSize:2,array:s,numItems:s.length});void 0!==A&&(R.color={itemSize:4,array:A,numItems:A.length})};k.prototype=Object.create(THREE.BufferGeometry.prototype);k=new k;void 0===
k.attributes.normal&&k.computeVertexNormals();h(k)};
THREE.CTMLoader.prototype.createModelClassic=function(d,h){var k=function(){this.materials=[];THREE.Geometry.call(this);var h=[],k=[],w=[],s=d.body.vertices,A,B,C,D,F=s.length;for(D=0;D<F;D+=3)A=s[D],B=s[D+1],C=s[D+2],this.vertices.push(new THREE.Vector3(A,B,C));if(void 0!==d.body.normals){s=d.body.normals;F=s.length;for(D=0;D<F;D+=3)A=s[D],B=s[D+1],C=s[D+2],h.push(A,B,C)}if(void 0!==d.body.uvMaps&&0<d.body.uvMaps.length){s=d.body.uvMaps[0].uv;D=s.length;for(C=0;C<D;C+=2)A=s[C],B=s[C+1],k.push(A,
B)}if(void 0!==d.body.attrMaps&&0<d.body.attrMaps.length&&"Color"===d.body.attrMaps[0].name){s=d.body.attrMaps[0].attr;F=s.length;for(D=0;D<F;D+=4){A=s[D];B=s[D+1];C=s[D+2];var H=new THREE.Color;H.setRGB(A,B,C);w.push(H)}}s=0<h.length?!0:!1;A=0<k.length?!0:!1;B=0<w.length?!0:!1;C=d.body.indices;var I,M,N,L,Q,P,O,F=C.length;for(D=0;D<F;D+=3){I=C[D];M=C[D+1];H=C[D+2];if(s){N=I;P=M;O=H;var R=h[3*M],$=h[3*M+1],T=h[3*M+2];Q=h[3*H];var S=h[3*H+1],Y=h[3*H+2];L=new THREE.Vector3(h[3*I],h[3*I+1],h[3*I+2]);
R=new THREE.Vector3(R,$,T);Q=new THREE.Vector3(Q,S,Y);N=new THREE.Face3(N,P,O,[L,R,Q],null,0)}else N=new THREE.Face3(I,M,H,null,null,0);this.faces.push(N);B&&(N.vertexColors[0]=w[I],N.vertexColors[1]=w[M],N.vertexColors[2]=w[H]);A&&(N=k[2*I],I=k[2*I+1],L=k[2*M],Q=k[2*M+1],P=k[2*H],O=k[2*H+1],H=this.faceVertexUvs[0],M=L,L=Q,Q=[],Q.push(new THREE.Vector2(N,I)),Q.push(new THREE.Vector2(M,L)),Q.push(new THREE.Vector2(P,O)),H.push(Q))}this.computeCentroids();this.computeFaceNormals();this.computeBoundingBox()};
k.prototype=Object.create(THREE.Geometry.prototype);h(new k)};THREE.STLLoader=function(){};THREE.STLLoader.prototype={constructor:THREE.STLLoader};
THREE.STLLoader.prototype.load=function(d,h){var k=this,p=new XMLHttpRequest;p.addEventListener("load",function(p){200===p.target.status||0===p.target.status?(p=k.parse(p.target.response||p.target.responseText),k.dispatchEvent({type:"load",content:p}),h&&h(p)):k.dispatchEvent({type:"error",message:"Couldn't load URL ["+d+"]",response:p.target.responseText})},!1);p.addEventListener("progress",function(d){k.dispatchEvent({type:"progress",loaded:d.loaded,total:d.total})},!1);p.addEventListener("error",
function(){k.dispatchEvent({type:"error",message:"Couldn't load URL ["+d+"]"})},!1);p.overrideMimeType("text/plain; charset=x-user-defined");p.open("GET",d,!0);p.responseType="arraybuffer";p.send(null)};THREE.STLLoader.prototype.parse=function(d){var h=this.ensureBinary(d),k;k=new DataView(h);return 84+50*k.getUint32(80,!0)===k.byteLength?this.parseBinary(h):this.parseASCII(this.ensureString(d))};
THREE.STLLoader.prototype.parseBinary=function(d){var h,k,p,q,w,s,A;p=new DataView(d);k=p.getUint32(80,!0);h=new THREE.Geometry;for(d=0;d<k;d++){s=84+50*d;w=new THREE.Vector3(p.getFloat32(s,!0),p.getFloat32(s+4,!0),p.getFloat32(s+8,!0));for(q=1;3>=q;q++)A=s+12*q,h.vertices.push(new THREE.Vector3(p.getFloat32(A,!0),p.getFloat32(A+4,!0),p.getFloat32(A+8,!0)));q=h.vertices.length;h.faces.push(new THREE.Face3(q-3,q-2,q-1,w))}h.computeCentroids();h.computeBoundingSphere();return h};
THREE.STLLoader.prototype.parseASCII=function(d){var h,k,p,q,w,s;h=new THREE.Geometry;for(q=/facet([\s\S]*?)endfacet/g;null!=(k=q.exec(d));){s=k[0];for(w=/normal[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;null!=(k=w.exec(s));)p=new THREE.Vector3(parseFloat(k[1]),parseFloat(k[3]),parseFloat(k[5]));for(w=/vertex[\s]+([\-+]?[0-9]+\.?[0-9]*([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+[\s]+([\-+]?[0-9]*\.?[0-9]+([eE][\-+]?[0-9]+)?)+/g;null!=
(k=w.exec(s));)h.vertices.push(new THREE.Vector3(parseFloat(k[1]),parseFloat(k[3]),parseFloat(k[5])));k=h.vertices.length;h.faces.push(new THREE.Face3(k-3,k-2,k-1,p))}h.computeCentroids();h.computeBoundingBox();h.computeBoundingSphere();return h};THREE.STLLoader.prototype.ensureString=function(d){if("string"!==typeof d){for(var h=new Uint8Array(d),k="",p=0;p<d.byteLength;p++)k+=String.fromCharCode(h[p]);return k}return d};
THREE.STLLoader.prototype.ensureBinary=function(d){if("string"===typeof d){for(var h=new Uint8Array(d.length),k=0;k<d.length;k++)h[k]=d.charCodeAt(k)&255;return h.buffer||h}return d};THREE.EventDispatcher.prototype.apply(THREE.STLLoader.prototype);
"undefined"===typeof DataView&&(DataView=function(d,h,k){this.buffer=d;this.byteOffset=h||0;this.byteLength=k||d.byteLength||d.length;this._isString="string"===typeof d},DataView.prototype={_getCharCodes:function(d,h,k){for(var h=h||0,k=k||d.length,k=h+k,p=[];h<k;h++)p.push(d.charCodeAt(h)&255);return p},_getBytes:function(d,h,k){void 0===k&&(k=this._littleEndian);h=void 0===h?this.byteOffset:this.byteOffset+h;void 0===d&&(d=this.byteLength-h);if("number"!==typeof h)throw new TypeError("DataView byteOffset is not a number");
if(0>d||h+d>this.byteLength)throw Error("DataView length or (byteOffset+length) value is out of bounds");h=this.isString?this._getCharCodes(this.buffer,h,h+d):this.buffer.slice(h,h+d);!k&&1<d&&(h instanceof Array||(h=Array.prototype.slice.call(h)),h.reverse());return h},getFloat64:function(d,h){var k=this._getBytes(8,d,h),p=1-2*(k[7]>>7),q=((k[7]<<1&255)<<3|k[6]>>4)-1023,k=(k[6]&15)*Math.pow(2,48)+k[5]*Math.pow(2,40)+k[4]*Math.pow(2,32)+k[3]*Math.pow(2,24)+k[2]*Math.pow(2,16)+k[1]*Math.pow(2,8)+k[0];
return 1024===q?0!==k?NaN:Infinity*p:-1023===q?p*k*Math.pow(2,-1074):p*(1+k*Math.pow(2,-52))*Math.pow(2,q)},getFloat32:function(d,h){var k=this._getBytes(4,d,h),p=1-2*(k[3]>>7),q=(k[3]<<1&255|k[2]>>7)-127,k=(k[2]&127)<<16|k[1]<<8|k[0];return 128===q?0!==k?NaN:Infinity*p:-127===q?p*k*Math.pow(2,-149):p*(1+k*Math.pow(2,-23))*Math.pow(2,q)},getInt32:function(d,h){var k=this._getBytes(4,d,h);return k[3]<<24|k[2]<<16|k[1]<<8|k[0]},getUint32:function(d,h){return this.getInt32(d,h)>>>0},getInt16:function(d,
h){return this.getUint16(d,h)<<16>>16},getUint16:function(d,h){var k=this._getBytes(2,d,h);return k[1]<<8|k[0]},getInt8:function(d){return this.getUint8(d)<<24>>24},getUint8:function(d){return this._getBytes(1,d)[0]}});THREE.OBJLoader=function(d){this.manager=void 0!==d?d:THREE.DefaultLoadingManager};
THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(d,h){var k=this,p=new THREE.XHRLoader(k.manager);p.setCrossOrigin("anonymous");p.load(d,function(d){h(k.parse(d))})},parse:function(d){function h(d,h,k){return new THREE.Vector3(d,h,k)}function k(d,h){return new THREE.Vector2(d,h)}function p(d,h,k,p){return new THREE.Face3(d,h,k,p)}function q(d,h,k,q){void 0===q?B.faces.push(p(parseInt(d)-(F+1),parseInt(h)-(F+1),parseInt(k)-(F+1))):B.faces.push(p(parseInt(d)-(F+1),parseInt(h)-(F+
1),parseInt(k)-(F+1),[H[parseInt(q[0])-1].clone(),H[parseInt(q[1])-1].clone(),H[parseInt(q[2])-1].clone()]))}function w(d,h,k){B.faceVertexUvs[0].push([I[parseInt(d)-1].clone(),I[parseInt(h)-1].clone(),I[parseInt(k)-1].clone()])}function s(d,h,k){void 0===d[3]?(q(d[0],d[1],d[2],k),void 0!==h&&0<h.length&&w(h[0],h[1],h[2])):(void 0!==k&&0<k.length?(q(d[0],d[1],d[3],[k[0],k[1],k[3]]),q(d[1],d[2],d[3],[k[1],k[2],k[3]])):(q(d[0],d[1],d[3]),q(d[1],d[2],d[3])),void 0!==h&&0<h.length&&(w(h[0],h[1],h[3]),
w(h[1],h[2],h[3])))}var A=new THREE.Object3D,B,C,D,F=0;!1===/^o /gm.test(d)&&(B=new THREE.Geometry,C=new THREE.MeshLambertMaterial,D=new THREE.Mesh(B,C),A.add(D));for(var H=[],I=[],M=/v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,N=/vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,L=/vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,Q=/f( +\d+)( +\d+)( +\d+)( +\d+)?/,P=/f( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))?/,O=/f( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))?/,
R=/f( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))?/,$=d.split("\n"),d=0;d<$.length;d++){var T=$[d],T=T.trim();0===T.length||"#"===T.charAt(0)||(null!==(D=M.exec(T))?B.vertices.push(h(parseFloat(D[1]),parseFloat(D[2]),parseFloat(D[3]))):null!==(D=N.exec(T))?H.push(h(parseFloat(D[1]),parseFloat(D[2]),parseFloat(D[3]))):null!==(D=L.exec(T))?I.push(k(parseFloat(D[1]),parseFloat(D[2]))):null!==(D=Q.exec(T))?s([D[1],D[2],D[3],D[4]]):null!==(D=P.exec(T))?s([D[2],D[5],D[8],D[11]],
[D[3],D[6],D[9],D[12]]):null!==(D=O.exec(T))?s([D[2],D[6],D[10],D[14]],[D[3],D[7],D[11],D[15]],[D[4],D[8],D[12],D[16]]):null!==(D=R.exec(T))?s([D[2],D[5],D[8],D[11]],[],[D[3],D[6],D[9],D[12]]):/^o /.test(T)?(void 0!==B&&(F+=B.vertices.length),B=new THREE.Geometry,C=new THREE.MeshLambertMaterial,D=new THREE.Mesh(B,C),D.name=T.substring(2).trim(),A.add(D)):/^g /.test(T)||(/^usemtl /.test(T)?C.name=T.substring(7).trim():/^mtllib /.test(T)||/^s /.test(T)))}d=0;for(C=A.children.length;d<C;d++)B=A.children[d].geometry,
B.computeCentroids(),B.computeFaceNormals(),B.computeBoundingSphere(),B.computeBoundingBox();return A}};THREE.MTLLoader=function(d,h,k){this.baseUrl=d;this.options=h;this.crossOrigin=k;this.imageURLLookup=null};
THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,load:function(d,h){var k=this,p=new THREE.XHRLoader;p.setCrossOrigin("anonymous");p.load(d,function(d){h(k.parse(d))})},parse:function(d){for(var h=d.split("\n"),k={},p=/\s+/,d={},q=0;q<h.length;q++){var w=h[q],w=w.trim();if(!(0===w.length||"#"===w.charAt(0))){var s=w.indexOf(" "),A=0<=s?w.substring(0,s):w,A=A.toLowerCase(),w=0<=s?w.substring(s+1):"",w=w.trim();"newmtl"===A?(k={name:w},d[w]=k):k&&("ka"===A||"kd"===A||"ks"===A?(w=w.split(p,3),
k[A]=[parseFloat(w[0]),parseFloat(w[1]),parseFloat(w[2])]):k[A]=w)}}h=new THREE.MTLLoader.MaterialCreator(this.baseUrl,this.options);h.imageURLLookup=this.imageURLLookup;h.setMaterials(d);return h}};
THREE.MTLLoader.MaterialCreator=function(d,h){this.baseUrl=d;this.options=h;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping;this.imageURLLookup=null};
THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,setMaterials:function(d){this.materialsInfo=this.convert(d);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(d){if(!this.options)return d;var h={},k;for(k in d){var p=d[k],q={};h[k]=q;for(var w in p){var s=!0,A=p[w],B=w.toLowerCase();switch(B){case "kd":case "ka":case "ks":this.options&&this.options.normalizeRGB&&(A=[A[0]/255,A[1]/255,A[2]/255]);this.options&&this.options.ignoreZeroRGBs&&
0===A[0]&&(0===A[1]&&0===A[1])&&(s=!1);break;case "d":this.options&&this.options.invertTransparency&&(A=1-A)}s&&(q[B]=A)}}return h},preload:function(){for(var d in this.materialsInfo)this.create(d)},getIndex:function(d){return this.nameLookup[d]},getAsArray:function(){var d=0,h;for(h in this.materialsInfo)this.materialsArray[d]=this.create(h),this.nameLookup[h]=d,d++;return this.materialsArray},create:function(d){void 0===this.materials[d]&&this.createMaterial_(d);return this.materials[d]},createMaterial_:function(d){var h=
this.materialsInfo[d],k={name:d,side:this.side},p;for(p in h){var q=h[p];switch(p.toLowerCase()){case "kd":k.diffuse=(new THREE.Color).fromArray(q);break;case "ka":k.ambient=(new THREE.Color).fromArray(q);break;case "ks":k.specular=(new THREE.Color).fromArray(q);break;case "map_kd":var w=this.baseUrl+q;this.imageURLLookup&&(w=this.imageURLLookup(q));""!=w&&(k.map=this.loadTexture(w),k.map.wrapS=this.wrap,k.map.wrapT=this.wrap);break;case "ns":k.shininess=q;break;case "d":1>q&&(k.transparent=!0,k.opacity=
q)}}k.diffuse&&(k.ambient||(k.ambient=k.diffuse),k.color=k.diffuse);this.materials[d]=new THREE.MeshLambertMaterial(k);return this.materials[d]},loadTexture:function(d,h,k,p){if(/\.dds$/i.test(d))var q=THREE.ImageUtils.loadCompressedTexture(d,h,k,p);else p=new Image,q=new THREE.Texture(p,h),h=new THREE.ImageLoader,h.crossOrigin="anonymous",h.load(d,function(d){q.image=THREE.MTLLoader.ensurePowerOfTwo_(d);q.needsUpdate=!0;k&&k(q)});return q}};
THREE.MTLLoader.ensurePowerOfTwo_=function(d){if(!THREE.MTLLoader.isPowerOfTwo_(d.width)||!THREE.MTLLoader.isPowerOfTwo_(d.height)){var h=document.createElement("canvas");h.width=THREE.MTLLoader.nextHighestPowerOfTwo_(d.width);h.height=THREE.MTLLoader.nextHighestPowerOfTwo_(d.height);h.getContext("2d").drawImage(d,0,0,d.width,d.height,0,0,h.width,h.height);return h}return d};THREE.MTLLoader.isPowerOfTwo_=function(d){return 0===(d&d-1)};
THREE.MTLLoader.nextHighestPowerOfTwo_=function(d){--d;for(var h=1;32>h;h<<=1)d|=d>>h;return d+1};THREE.EventDispatcher.prototype.apply(THREE.MTLLoader.prototype);THREE.OBJMTLLoader=function(){};
THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(d,h,k){var p=this,q=new THREE.MTLLoader(d.substr(0,d.lastIndexOf("/")+1));this.imageURLlookup&&(q.imageURLLookup=this.imageURLlookup);q.load(h,function(h){h.preload();var q=new THREE.XHRLoader(p.manager);q.setCrossOrigin(this.crossOrigin);q.setCrossOrigin("anonymous");q.load(d,function(d){d=p.parse(d);d.traverse(function(d){if(d instanceof THREE.Mesh&&d.material.name){var k=h.create(d.material.name);k&&(d.material=k)}});k(d)})})},
parse:function(d,h){function k(d,h,k){return new THREE.Vector3(d,h,k)}function p(d,h){return new THREE.Vector2(d,h)}function q(d,h,k,p){return new THREE.Face3(d,h,k,p)}function w(d,h){0<N.length&&(H.vertices=N,H.mergeVertices(),H.computeCentroids(),H.computeFaceNormals(),H.computeBoundingBox(),H.computeBoundingSphere(),F.add(M),H=new THREE.Geometry,M=new THREE.Mesh(H,I));void 0!==d&&(M.name=d);void 0!==h&&(I=new THREE.MeshLambertMaterial,I.name=h,M.material=I)}function s(d,h,k,p){void 0===p?H.faces.push(q(parseInt(d)-
(C+1),parseInt(h)-(C+1),parseInt(k)-(C+1))):H.faces.push(q(parseInt(d)-(C+1),parseInt(h)-(C+1),parseInt(k)-(C+1),[L[parseInt(p[0])-1].clone(),L[parseInt(p[1])-1].clone(),L[parseInt(p[2])-1].clone()]))}function A(d,h,k){H.faceVertexUvs[0].push([Q[parseInt(d)-1].clone(),Q[parseInt(h)-1].clone(),Q[parseInt(k)-1].clone()])}function B(d,h,k){void 0===d[3]?(s(d[0],d[1],d[2],k),void 0!==h&&0<h.length&&A(h[0],h[1],h[2])):(void 0!==k&&0<k.length?(s(d[0],d[1],d[3],[k[0],k[1],k[3]]),s(d[1],d[2],d[3],[k[1],k[2],
k[3]])):(s(d[0],d[1],d[3]),s(d[1],d[2],d[3])),void 0!==h&&0<h.length&&(A(h[0],h[1],h[3]),A(h[1],h[2],h[3])))}for(var C=0,D=new THREE.Object3D,F=D,H=new THREE.Geometry,I=new THREE.MeshLambertMaterial,M=new THREE.Mesh(H,I),N=[],L=[],Q=[],P=/v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,O=/vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,R=/vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,$=/f( +\d+)( +\d+)( +\d+)( +\d+)?/,T=/f( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))?/,
S=/f( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))?/,Y=/f( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))?/,X=d.split("\n"),ea=0;ea<X.length;ea++){var aa=X[ea],aa=aa.trim(),Z;0===aa.length||"#"===aa.charAt(0)||(null!==(Z=P.exec(aa))?N.push(k(parseFloat(Z[1]),parseFloat(Z[2]),parseFloat(Z[3]))):null!==(Z=O.exec(aa))?L.push(k(parseFloat(Z[1]),parseFloat(Z[2]),parseFloat(Z[3]))):null!==(Z=R.exec(aa))?Q.push(p(parseFloat(Z[1]),parseFloat(Z[2]))):
null!==(Z=$.exec(aa))?B([Z[1],Z[2],Z[3],Z[4]]):null!==(Z=T.exec(aa))?B([Z[2],Z[5],Z[8],Z[11]],[Z[3],Z[6],Z[9],Z[12]]):null!==(Z=S.exec(aa))?B([Z[2],Z[6],Z[10],Z[14]],[Z[3],Z[7],Z[11],Z[15]],[Z[4],Z[8],Z[12],Z[16]]):null!==(Z=Y.exec(aa))?B([Z[2],Z[5],Z[8],Z[11]],[],[Z[3],Z[6],Z[9],Z[12]]):/^o /.test(aa)?(w(),C+=N.length,N=[],F=new THREE.Object3D,F.name=aa.substring(2).trim(),D.add(F)):/^g /.test(aa)?w(aa.substring(2).trim(),void 0):/^usemtl /.test(aa)?w(void 0,aa.substring(7).trim()):/^mtllib /.test(aa)?
h&&(aa=aa.substring(7),aa=aa.trim(),h(aa)):/^s /.test(aa)||console.log("THREE.OBJMTLLoader: Unhandled line "+aa))}w(void 0,void 0);return D}};THREE.EventDispatcher.prototype.apply(THREE.OBJMTLLoader.prototype);THREE.TrackballControls=function(d,h){function k(d){!1!==s.enabled&&(window.removeEventListener("keydown",k),D=C,C===A.NONE&&(d.keyCode===s.keys[A.ROTATE]&&!s.noRotate?C=A.ROTATE:d.keyCode===s.keys[A.ZOOM]&&!s.noZoom?C=A.ZOOM:d.keyCode===s.keys[A.PAN]&&!s.noPan&&(C=A.PAN)))}function p(d){!1!==s.enabled&&(d.preventDefault(),d.stopPropagation(),C===A.ROTATE&&!s.noRotate?I=s.getMouseProjectionOnBall(d.clientX,d.clientY):C===A.ZOOM&&!s.noZoom?N=s.getMouseOnScreen(d.clientX,d.clientY):C===A.PAN&&!s.noPan&&
(O=s.getMouseOnScreen(d.clientX,d.clientY)))}function q(d){!1!==s.enabled&&(d.preventDefault(),d.stopPropagation(),C=A.NONE,document.removeEventListener("mousemove",p),document.removeEventListener("mouseup",q),s.dispatchEvent(T))}function w(d){if(!1!==s.enabled){d.preventDefault();d.stopPropagation();var h=0;d.wheelDelta?h=d.wheelDelta/40:d.detail&&(h=-d.detail/3);M.y+=0.01*h;s.dispatchEvent($);s.dispatchEvent(T)}}var s=this,A={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM:4,TOUCH_PAN:5};
this.object=d;this.domElement=void 0!==h?h:document;this.enabled=!0;this.screen={left:0,top:0,width:0,height:0};this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noRoll=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var B=new THREE.Vector3,C=A.NONE,D=A.NONE,F=new THREE.Vector3,H=new THREE.Vector3,I=new THREE.Vector3,M=new THREE.Vector2,N=new THREE.Vector2,
L=0,Q=0,P=new THREE.Vector2,O=new THREE.Vector2;this.target0=this.target.clone();this.position0=this.object.position.clone();this.up0=this.object.up.clone();var R={type:"change"},$={type:"start"},T={type:"end"};this.handleResize=function(){this.domElement===document?(this.screen.left=0,this.screen.top=0,this.screen.width=window.innerWidth,this.screen.height=window.innerHeight):this.screen=this.domElement.getBoundingClientRect()};this.handleEvent=function(d){if("function"==typeof this[d.type])this[d.type](d)};
this.getMouseOnScreen=function(d,h){return new THREE.Vector2((d-s.screen.left)/s.screen.width,(h-s.screen.top)/s.screen.height)};this.getMouseProjectionOnBall=function(d,h){var k=new THREE.Vector3((d-0.5*s.screen.width-s.screen.left)/(0.5*s.screen.width),(0.5*s.screen.height+s.screen.top-h)/(0.5*s.screen.height),0),p=k.length();s.noRoll?k.z=p<Math.SQRT1_2?Math.sqrt(1-p*p):0.5/p:1<p?k.normalize():k.z=Math.sqrt(1-p*p);F.copy(s.object.position).sub(s.target);p=s.object.up.clone().setLength(k.y);p.add(s.object.up.clone().cross(F).setLength(k.x));
p.add(F.setLength(k.z));return p};this.rotateCamera=function(){var d=Math.acos(H.dot(I)/H.length()/I.length());if(d){var h=(new THREE.Vector3).crossVectors(H,I).normalize(),k=new THREE.Quaternion,d=d*s.rotateSpeed;k.setFromAxisAngle(h,-d);F.applyQuaternion(k);s.object.up.applyQuaternion(k);I.applyQuaternion(k);s.staticMoving?H.copy(I):(k.setFromAxisAngle(h,d*(s.dynamicDampingFactor-1)),H.applyQuaternion(k))}};this.zoomCamera=function(){if(C===A.TOUCH_ZOOM){var d=L/Q;L=Q;F.multiplyScalar(d)}else d=
1+(N.y-M.y)*s.zoomSpeed,1!==d&&0<d&&(F.multiplyScalar(d),s.staticMoving?M.copy(N):M.y+=(N.y-M.y)*this.dynamicDampingFactor)};this.panCamera=function(){var d=O.clone().sub(P);if(d.lengthSq()){d.multiplyScalar(F.length()*s.panSpeed);var h=F.clone().cross(s.object.up).setLength(d.x);h.add(s.object.up.clone().setLength(d.y));s.object.position.add(h);s.target.add(h);s.staticMoving?P=O:P.add(d.subVectors(O,P).multiplyScalar(s.dynamicDampingFactor))}};this.checkDistances=function(){if(!s.noZoom||!s.noPan)F.lengthSq()>
s.maxDistance*s.maxDistance&&s.object.position.addVectors(s.target,F.setLength(s.maxDistance)),F.lengthSq()<s.minDistance*s.minDistance&&s.object.position.addVectors(s.target,F.setLength(s.minDistance))};this.update=function(){F.subVectors(s.object.position,s.target);s.noRotate||s.rotateCamera();s.noZoom||s.zoomCamera();s.noPan||s.panCamera();s.object.position.addVectors(s.target,F);s.checkDistances();s.object.lookAt(s.target);0<B.distanceToSquared(s.object.position)&&(s.dispatchEvent(R),B.copy(s.object.position))};
this.reset=function(){D=C=A.NONE;s.target.copy(s.target0);s.object.position.copy(s.position0);s.object.up.copy(s.up0);F.subVectors(s.object.position,s.target);s.object.lookAt(s.target);s.dispatchEvent(R);B.copy(s.object.position)};this.domElement.addEventListener("contextmenu",function(d){d.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(d){!1!==s.enabled&&(d.preventDefault(),d.stopPropagation(),C===A.NONE&&(C=d.button),C===A.ROTATE&&!s.noRotate?(H=s.getMouseProjectionOnBall(d.clientX,
d.clientY),I.copy(H)):C===A.ZOOM&&!s.noZoom?(M=s.getMouseOnScreen(d.clientX,d.clientY),N.copy(M)):C===A.PAN&&!s.noPan&&(P=s.getMouseOnScreen(d.clientX,d.clientY),O.copy(P)),document.addEventListener("mousemove",p,!1),document.addEventListener("mouseup",q,!1),s.dispatchEvent($))},!1);this.domElement.addEventListener("mousewheel",w,!1);this.domElement.addEventListener("DOMMouseScroll",w,!1);this.domElement.addEventListener("touchstart",function(d){if(!1!==s.enabled){switch(d.touches.length){case 1:C=
A.TOUCH_ROTATE;H=I=s.getMouseProjectionOnBall(d.touches[0].pageX,d.touches[0].pageY);break;case 2:C=A.TOUCH_ZOOM;var h=d.touches[0].pageX-d.touches[1].pageX,d=d.touches[0].pageY-d.touches[1].pageY;Q=L=Math.sqrt(h*h+d*d);break;case 3:C=A.TOUCH_PAN;P=O=s.getMouseOnScreen(d.touches[0].pageX,d.touches[0].pageY);break;default:C=A.NONE}s.dispatchEvent($)}},!1);this.domElement.addEventListener("touchend",function(d){if(!1!==s.enabled){switch(d.touches.length){case 1:H=I=s.getMouseProjectionOnBall(d.touches[0].pageX,
d.touches[0].pageY);break;case 2:L=Q=0;break;case 3:P=O=s.getMouseOnScreen(d.touches[0].pageX,d.touches[0].pageY)}C=A.NONE;s.dispatchEvent(T)}},!1);this.domElement.addEventListener("touchmove",function(d){if(!1!==s.enabled)switch(d.preventDefault(),d.stopPropagation(),d.touches.length){case 1:I=s.getMouseProjectionOnBall(d.touches[0].pageX,d.touches[0].pageY);break;case 2:var h=d.touches[0].pageX-d.touches[1].pageX,d=d.touches[0].pageY-d.touches[1].pageY;Q=Math.sqrt(h*h+d*d);break;case 3:O=s.getMouseOnScreen(d.touches[0].pageX,
d.touches[0].pageY);break;default:C=A.NONE}},!1);window.addEventListener("keydown",k,!1);window.addEventListener("keyup",function(){!1!==s.enabled&&(C=D,window.addEventListener("keydown",k,!1))},!1);this.handleResize()};THREE.TrackballControls.prototype=Object.create(THREE.EventDispatcher.prototype);var TPX=TPX||{};function _intToFloatCoord(d){return d/1E4}function _intToFloatMaterial(d){return d/100}function _getNormalVal(d,h,k){var p=0,q=0,w=0,d=d/1E3,h=h/1E3,w=Math.sin(h);xy=Math.cos(h);p=xy*Math.cos(d);q=xy*Math.sin(d);k.x=p;k.y=q;k.z=w}function _checkDiffuseColor(d){for(var h=0;4>h;++h)0>d[h]&&(d[h]=0),1<d[h]&&(d[h]=1);1E-4>d[0]+d[1]+d[2]&&(d[0]=0.8,d[1]=0.8,d[2]=0.8,d[3]=1)}
function _readMassProperties(d,h){h.min=new THREE.Vector3;h.max=new THREE.Vector3;h.min.x=_intToFloatCoord(d.readInt32());h.min.y=_intToFloatCoord(d.readInt32());h.min.z=_intToFloatCoord(d.readInt32());h.max.x=_intToFloatCoord(d.readInt32());h.max.y=_intToFloatCoord(d.readInt32());h.max.z=_intToFloatCoord(d.readInt32());h.area=d.readInt32();h.volume=d.readInt32();h.massComputed=!1}TPX.File=function(){};TPX.File.prototype.load=function(d){this.header=new TPX.FileHeader(d)};
TPX.FileHeader=function(d){this.ver=d.readInt32();if(1E4<=this.ver)this.ver=0;else if(400>this.ver)this.ver=0;else{400<=this.ver?(_readMassProperties(d,this),this.unitToMM=_intToFloatCoord(d.readInt32())):(this.unitToMM=1,this.min=new THREE.Vector3,this.max=new THREE.Vector3,this.min.x=_intToFloatCoord(d.readInt32()),this.min.y=_intToFloatCoord(d.readInt32()),this.min.z=_intToFloatCoord(d.readInt32()),this.max.x=_intToFloatCoord(d.readInt32()),this.max.y=_intToFloatCoord(d.readInt32()),this.max.z=
_intToFloatCoord(d.readInt32()));if(200<=this.ver){this.colorTable=[];this.styleTable=[];this.materialTable=[];for(var h=d.readInt32(),k=0;k<h;++k)r=_intToFloatCoord(d.readInt32()),g=_intToFloatCoord(d.readInt32()),b=_intToFloatCoord(d.readInt32()),a=_intToFloatCoord(d.readInt32()),this.colorTable.push([r,g,b,a]);h=d.readInt32();for(k=0;k<h;++k)colInd=d.readInt32(),trans=d.readInt32(),bMat=d.readInt32(),this.styleTable.push([colInd,trans,bMat]);h=d.readInt32();for(k=0;k<h;++k)specular=d.readInt32(),
emissive=d.readInt32(),diffuse=d.readInt32(),ambient=d.readInt32(),shininess=_intToFloatCoord(d.readInt32()),specularAlpha=_intToFloatCoord(d.readInt32()),emissiveAlpha=_intToFloatCoord(d.readInt32()),diffuseAlpha=_intToFloatCoord(d.readInt32()),ambientAlpha=_intToFloatCoord(d.readInt32()),this.materialTable.push([specular,emissive,diffuse,ambient,shininess,specularAlpha,emissiveAlpha,diffuseAlpha,ambientAlpha])}400>this.ver&&(this.numModels=d.readInt32())}};
TPX.FileBody=function(d,h,k){if(200<=d){400<=d&&(_readMassProperties(k,h),h.styleIndex=decompStream.readInt32());for(var p=k.readInt32(),q=0;q<p;++q)x=k.readInt32(),y=k.readInt32(),z=k.readInt32(),h.vertices.push(new THREE.Vector3(_intToFloatCoord(x),_intToFloatCoord(y),_intToFloatCoord(z)));normals=[];for(var w=k.readInt32(),q=0;q<w;++q)x=k.readInt32(),y=k.readInt32(),z=k.readInt32(),normals.push([_intToFloatCoord(x),_intToFloatCoord(y),_intToFloatCoord(z)]);triangles=[];w=k.readInt32();for(q=0;q<
w;++q)t=k.readInt32(),triangles.push(t);faces=[];h.edges=[];w=k.readInt32();for(q=0;q<w;++q){var s=2,A=[],B=1;if(300<=d){s=k.readInt32();B=k.readInt32();for(tric=0;tric<B;++tric)A.push(k.readInt32())}else A.push(k.readInt32());this.styleIndex=k.readInt32();if((void 0==h.styleIndex||-1==h.styleIndex)&&1!=this.styleIndex)h.styleIndex=this.styleIndex;startingIndex=k.readInt32();faces.push([s,B,A,startingIndex]);numEdges=k.readInt32();A=0;B=!1;for(j=0;j<numEdges;++j){numEdgeVertices=k.readInt32();edgeIndices=
[];for(s=0;s<numEdgeVertices;++s)e=k.readInt32(),e>=3*p?(A++,B=!0):-1==e?B=!0:edgeIndices.push(e);B||h.edges.push(edgeIndices)}}tpDebug.print("  build faces");for(q=0;q<w;++q)if(f=faces[q],s=f[0],A=f[2],startingIndex=f[3],8==s){k=A[0];for(p=B=d=0;p<k;++p){var C=0;n=[];v=[];for(s=0;s<A[p+1];++s)C=startingIndex+2*B,n.push(triangles[C+2*s]/3),v.push(triangles[C+2*s+1]/3),++d;for(var s=!0,D,F=0;F<n.length-2;++F)s?(B=F,C=F+1,D=F+2,s=!1):(B=F,C=F+2,D=F+1,s=!0),scopeFace=new THREE.Face3(v[B],v[C],v[D]),
n1=n[B],n2=n[C],n3=n[D],scopeFace.vertexNormals=[new THREE.Vector3(normals[n1][0],normals[n1][1],normals[n1][2]),new THREE.Vector3(normals[n2][0],normals[n2][1],normals[n2][2]),new THREE.Vector3(normals[n3][0],normals[n3][1],normals[n3][2])],h.faces.push(scopeFace);B=d}}else if(10==s){for(j=0;j<A[0];++j)n1=triangles[startingIndex+6*j]/3,v1=triangles[startingIndex+6*j+1]/3,n2=triangles[startingIndex+6*j+2]/3,v2=triangles[startingIndex+6*j+3]/3,n3=triangles[startingIndex+6*j+4]/3,v3=triangles[startingIndex+
6*j+5]/3,scopeFace=new THREE.Face3(v1,v2,v3),scopeFace.vertexNormals=[new THREE.Vector3(normals[n1][0],normals[n1][1],normals[n1][2]),new THREE.Vector3(normals[n2][0],normals[n2][1],normals[n2][2]),new THREE.Vector3(normals[n3][0],normals[n3][1],normals[n3][2])],h.faces.push(scopeFace);k=A[1];for(p=B=d=0;p<k;++p){n=[];v=[];for(s=0;s<A[p+2];++s)C=startingIndex+6*A[0]+2*B,n.push(triangles[C+2*s]/3),v.push(triangles[C+2*s+1]/3),++d;s=!0;for(F=0;F<n.length-2;++F)s?(B=F,C=F+1,D=F+2,s=!1):(B=F,C=F+2,D=
F+1,s=!0),scopeFace=new THREE.Face3(v[B],v[C],v[D]),n1=n[B],n2=n[C],n3=n[D],scopeFace.vertexNormals=[new THREE.Vector3(normals[n1][0],normals[n1][1],normals[n1][2]),new THREE.Vector3(normals[n2][0],normals[n2][1],normals[n2][2]),new THREE.Vector3(normals[n3][0],normals[n3][1],normals[n3][2])],h.faces.push(scopeFace);B=d}}else if(32==s)for(j=0;j<A[0];++j)n1=triangles[startingIndex+4*j]/3,v1=triangles[startingIndex+4*j+1]/3,v2=triangles[startingIndex+4*j+2]/3,v3=triangles[startingIndex+4*j+3]/3,scopeFace=
new THREE.Face3(v1,v2,v3),scopeFace.vertexNormals=[new THREE.Vector3(normals[n1][0],normals[n1][1],normals[n1][2]),new THREE.Vector3(normals[n1][0],normals[n1][1],normals[n1][2]),new THREE.Vector3(normals[n1][0],normals[n1][1],normals[n1][2])],h.faces.push(scopeFace);else for(j=0;j<A[0];++j)n1=triangles[startingIndex+6*j]/3,v1=triangles[startingIndex+6*j+1]/3,n2=triangles[startingIndex+6*j+2]/3,v2=triangles[startingIndex+6*j+3]/3,n3=triangles[startingIndex+6*j+4]/3,v3=triangles[startingIndex+6*j+
5]/3,scopeFace=new THREE.Face3(v1,v2,v3),scopeFace.vertexNormals=[new THREE.Vector3(normals[n1][0],normals[n1][1],normals[n1][2]),new THREE.Vector3(normals[n2][0],normals[n2][1],normals[n2][2]),new THREE.Vector3(normals[n3][0],normals[n3][1],normals[n3][2])],h.faces.push(scopeFace)}else{this.modelID=k.readInt32();101>d&&(this.modelID=0);this.numVts=k.readInt32();this.numFcs=k.readInt32();this.numEds=k.readInt32();this.numNurbsCvs=k.readInt32();this.diffuse=[];this.ambient=[];this.emission=[];h.modelID=
this.modelID;for(var q=0;4>q;++q)this.diffuse.push(_intToFloatMaterial(k.readInt32()));_checkDiffuseColor(this.diffuse);for(q=0;4>q;++q)this.ambient.push(_intToFloatMaterial(k.readInt32()));for(q=0;4>q;++q)this.emission.push(_intToFloatMaterial(k.readInt32()));this.shininess=_intToFloatMaterial(k.readInt32());this.normals=new Float32Array(3*this.numVts);w=new THREE.Vector3;for(q=0;q<this.numVts;++q)x=k.readInt32(),y=k.readInt32(),z=k.readInt32(),h.vertices.push(new THREE.Vector3(_intToFloatCoord(x),
_intToFloatCoord(y),_intToFloatCoord(z))),a=k.readInt16(),b=k.readInt16(),_getNormalVal(a,b,w),this.normals[3*q]=w.x,this.normals[3*q+1]=w.y,this.normals[3*q+2]=w.z;for(q=0;q<this.numFcs;++q)v1=k.readInt32(),v2=k.readInt32(),v3=k.readInt32(),fc=new THREE.Face3(v1,v2,v3),h.faces.push(fc),fc.vertexNormals=[new THREE.Vector3(this.normals[3*v1],this.normals[3*v1+1],this.normals[3*v1+2]),new THREE.Vector3(this.normals[3*v2],this.normals[3*v2+1],this.normals[3*v2+2]),new THREE.Vector3(this.normals[3*v3],
this.normals[3*v3+1],this.normals[3*v3+2])]}A=new THREE.Vector3;k=new THREE.Vector3;w=h.faces.length;tpDebug.printInt("    calc face normal start:",w);for(q=0;q<w;q+=1)v1=h.vertices[h.faces[q].a],v2=h.vertices[h.faces[q].b],v3=h.vertices[h.faces[q].c],A.set(v2.x-v1.x,v2.y-v1.y,v2.z-v1.z),k.set(v3.x-v1.x,v3.y-v1.y,v3.z-v1.z),h.faces[q].normal=new THREE.Vector3,h.faces[q].normal.crossVectors(A,k).normalize(),d=v1.x<v2.x?v1.x:v2.x,d=d<v3.x?d:v3.x,p=v1.y<v2.y?v1.y:v2.y,p=p<v3.y?p:v3.y,s=v1.z<v2.z?v1.z:
v2.z,s=s<v3.z?s:v3.z,B=v1.x>v2.x?v1.x:v2.x,B=B>v3.x?B:v3.x,C=v1.y>v2.y?v1.y:v2.y,C=C>v3.y?C:v3.y,D=v1.z>v2.z?v1.z:v2.z,D=D>v3.z?D:v3.z,h.faces[q].bound_min={x:d,y:p,z:s},h.faces[q].bound_max={x:B,y:C,z:D};tpDebug.print("    calc face normal end")};THREE.TPXLoader=function(d){THREE.Loader.call(this,d)};
var decompStream={total:1,data:[],offset:0,writeByte:function(d){decompStream.data[decompStream.offset++]=d},readByte:function(){return decompStream.data[decompStream.offset++]&255},readInt16:function(){var d=decompStream.readByte(),d=d|decompStream.readByte()<<8;32768<=d&&(d|=-65536);return d},readInt32:function(){var d=decompStream.readByte(),d=d|decompStream.readByte()<<8,d=d|decompStream.readByte()<<16;return d|decompStream.readByte()<<24}},readTPXPartNew=function(d,h,k,p){if(0!=decompStream.readInt32()){var q=
[],w=new TPVIEWER.dispModel(h);w.children=[];h.children.push(w);l=decompStream.readInt32();for(var s=0;s<l;s++)h=decompStream.readByte(),q.push(h);w.name=String.fromCharCode.apply(String,q);_readMassProperties(decompStream,w);p.scale(w.min);p.scale(w.max);c=decompStream.readInt32();w.isContainer=1==c?!0:!1;w.styleIndex=decompStream.readInt32();w.numBreps=decompStream.readInt32();tpDebug.printInt("  Breps: ",w.numBreps);w.breps=[];for(ibrep=0;ibrep<w.numBreps;++ibrep)if(scope=new THREE.Geometry,scope.modelID=
d.currentModelId,THREE.Geometry.call(scope),scope.edges=[],body=new TPX.FileBody(k.ver,scope,decompStream),scope.vertices&&0!=scope.vertices.length&&scope.faces&&0!=scope.faces.length){tpDebug.printInt("  Vertices: ",scope.vertices.length);TPVIEWER.dispModel.prototype.tvertices+=scope.vertices.length;tpDebug.printInt("  Faces: ",scope.faces.length);TPVIEWER.dispModel.prototype.tfaces+=scope.faces.length;tpDebug.printInt("  Edges: ",scope.edges.length);TPVIEWER.dispModel.prototype.tedges+=scope.edges.length;
q=0;for(h=scope.vertices.length;q<h;q++)p.scale(scope.vertices[q]);q=0;for(h=scope.faces.length;q<h;q++)p.scale(scope.faces[q].bound_min),p.scale(scope.faces[q].bound_max);p.scale(scope.min);p.scale(scope.max);q=Math.sqrt(scope.min.x*scope.min.x+scope.min.y*scope.min.y+scope.min.z*scope.min.z);scope.boundingSphere={radius:q,center:new THREE.Vector3((scope.max.x+scope.min.x)/2,(scope.max.y+scope.min.y)/2,(scope.max.z+scope.min.z)/2)};diffuse=[0.6,0.6,0.6,1];ambient=[0,0,0,0];emission=[0,0,0,0];shininess=
0.5;styleIndex=-1==scope.styleIndex||65535==scope.styleIndex?!w.styleIndex||-1==w.styleIndex?0:w.styleIndex:scope.styleIndex;styleIndex>=k.styleTable.length&&(styleIndex=0);0>=k.styleTable.length||(1==k.styleTable[styleIndex][2]?(m=k.styleTable[styleIndex][0],0<=m&&m<k.materialTable.length&&(sp=k.materialTable[m][0]/3,em=k.materialTable[m][1]/3,di=k.materialTable[m][2]/3,am=k.materialTable[m][3]/3,shininess=k.materialTable[m][4],emission[0]=k.colorTable[em][0],emission[1]=k.colorTable[em][1],emission[2]=
k.colorTable[em][2],emission[3]=k.materialTable[m][6],diffuse[0]=k.colorTable[di][0],diffuse[1]=k.colorTable[di][1],diffuse[2]=k.colorTable[di][2],diffuse[3]=k.materialTable[m][7],ambient[0]=k.colorTable[am][0],ambient[1]=k.colorTable[am][1],ambient[2]=k.colorTable[am][2],ambient[3]=k.materialTable[m][8])):(c=k.styleTable[styleIndex][0]/3,tr=k.styleTable[styleIndex][1]/255,0<=c&&c<k.colorTable.length&&(diffuse[0]=k.colorTable[c][0],diffuse[1]=k.colorTable[c][1],diffuse[2]=k.colorTable[c][2],diffuse[3]=
tr)));d.diffuses.push(diffuse);d.emissions.push(emission);d.shinesses.push(shininess);d.ambients.push(ambient);scope.massComputed=!1;scope.parentPartNode=w;d.geometries.push(scope);w.breps.push(scope)}q=decompStream.readInt32();tpDebug.printInt("reading children : ",q);for(h=0;h<q;++h)if(!tpDebug.isDebug()||!(0>h||100<h))d.currentModelId++,tpDebug.timeStart("child "+h+" reading"),readTPXPartNew(d,w,k,p),tpDebug.timeEnd("child "+h+" reading")}};THREE.TPXLoader.prototype=new THREE.Loader;
THREE.TPXLoader.prototype.constructor=THREE.TPXLoader;THREE.TPXLoader.prototype.supr=THREE.Loader.prototype;
THREE.TPXLoader.prototype.createTPXModel=function(d){var h,k,p,q,w=k=0,s,A,B;B=-1;d=new CTM.Stream(d);h=new LZMA.Decoder;if(!h.setDecoderProperties(d))return null;for(s=0;8>s;++s)H=d.readByte(),k|=H<<8*s;if(!h.decode(d,decompStream,k))return null;decompStream.offset=0;decompStream.total=k;k=new TPX.FileHeader(decompStream);if(0==k.ver)return null;d=new TPVIEWER.dispModel;d.geometries=[];d.unitToMM=k.unitToMM;d.ambients=[];d.diffuses=[];d.emissions=[];d.shinesses=[];s=tpModelMaxLength;h=k.max.z-k.min.z;
w=k.max.x-k.min.x;w=Math.max(w,k.max.y-k.min.y);w=Math.max(w,h);w=s/w;d.scaleFactor=w;d.isContainer=!0;h=new TPVIEWER.scaler((k.min.x+k.max.x)/2,(k.min.y+k.max.y)/2,(k.min.z+k.max.z)/2,w);d.min=k.min.clone();h.scale(d.min);d.max=k.max.clone();h.scale(d.max);d.area=k.area;d.volume=k.volume;d.currentModelId=0;if(400<=k.ver){d.part=new TPVIEWER.dispModel(d);d.part.children=[];readTPXPartNew(d,d.part,k,h);tpDebug.printInt("Total vertices: ",TPVIEWER.dispModel.prototype.tvertices);tpDebug.printInt("Total faces: ",
TPVIEWER.dispModel.prototype.tfaces);tpDebug.printInt("Total edges: ",TPVIEWER.dispModel.prototype.tedges);var C=function(d){if(0==d.children.length)return d.volume;var h,k;h=d.volume=0;for(k=d.children.length;h<k;++h)d.volume+=C(d.children[h]);return d.volume},D=function(d){if(0==d.children.length)return d.area;var h,k;h=d.area=0;for(k=d.children.length;h<k;++h)d.area+=D(d.children[h]);return d.area};C(d.part.children[0]);D(d.part.children[0]);return d}for(s=0;s<k.numModels;++s){if(200<=k.ver){q=
[];w=decompStream.readInt32();for(B=0;B<w;B++)q.push(decompStream.readByte());String.fromCharCode.apply(String,q);B=decompStream.readInt32();w=decompStream.readInt32();d.currentModelId++}else w=1;for(A=0;A<w;++A)if(q=new THREE.Geometry,q.modelID=this.currentModelId,THREE.Geometry.call(q),q.edges=[],p=new TPX.FileBody(k.ver,q,decompStream),q.vertices&&0!=q.vertices.length&&q.faces&&0!=q.faces.length){var F;q.boundingBox={x:[q.vertices[0].x,q.vertices[0].x],y:[q.vertices[0].y,q.vertices[0].y],z:[q.vertices[0].z,
q.vertices[0].z]};for(var H=1,I=q.vertices.length;H<I;H++)F=q.vertices[H],F.x<q.boundingBox.x[0]?q.boundingBox.x[0]=F.x:F.x>q.boundingBox.x[1]&&(q.boundingBox.x[1]=F.x),F.y<q.boundingBox.y[0]?q.boundingBox.y[0]=F.y:F.y>q.boundingBox.y[1]&&(q.boundingBox.y[1]=F.y),F.z<q.boundingBox.z[0]?q.boundingBox.z[0]=F.z:F.z>q.boundingBox.z[1]&&(q.boundingBox.z[1]=F.z);H=0;for(I=q.vertices.length;H<I;H++)h.scale(q.vertices[H]);H=0;for(I=q.faces.length;H<I;H++)h.scale(q.faces[H].bound_min),h.scale(q.faces[H].bound_max);
for(H=0;2>H;++H)h.scale(q.boundingBox.x[H]);H=Math.sqrt(q.boundingBox.x[0]*q.boundingBox.x[0]+q.boundingBox.y[0]*q.boundingBox.y[0]+q.boundingBox.z[0]*q.boundingBox.z[0]);q.min=new THREE.Vector3(q.boundingBox.x[0],q.boundingBox.y[0],q.boundingBox.z[0]);q.max=new THREE.Vector3(q.boundingBox.x[1],q.boundingBox.y[1],q.boundingBox.z[1]);q.boundingSphere={radius:H,center:new THREE.Vector3((q.max.x+q.min.x)/2,(q.max.y+q.min.y)/2,(q.max.z+q.min.z)/2)};q.area=0;q.volume=0;q.massComputed=!0;var M,N,L,Q,P,
O,R;f=0;for(fl=q.faces.length;f<fl;f++)face=q.faces[f],H=q.vertices[face.a],F=q.vertices[face.b],I=q.vertices[face.c],M=I.x-F.x,N=I.y-F.y,L=I.z-F.z,Q=H.x-F.x,P=H.y-F.y,O=H.z-F.z,R=N*O-L*P,L=L*Q-M*O,M=M*P-N*Q,R=Math.sqrt(R*R+L*L+M*M),q.area+=R/2,R=I.x*F.y*H.z,M=F.x*I.y*H.z,N=I.x*H.y*F.z,Q=H.x*I.y*F.z,P=F.x*H.y*I.z,H=H.x*F.y*I.z,q.volume+=1/6*(-R+M+N-Q-P+H);q.volume=Math.abs(q.volume);200>k.ver?(d.diffuses.push(p.diffuse),d.emissions.push(p.emission),d.shinesses.push(p.shininess),d.ambients.push(p.ambient)):
(H=[0.6,0.6,0.6,1],F=[0,0,0,0],I=[0,0,0,0],R=0.5,-1==B&&(B=!p.styleIndex||-1==p.styleIndex?0:p.styleIndex),B>=k.styleTable.length&&(B=0),0>=k.styleTable.length||(1==k.styleTable[B][2]?(p=k.styleTable[B][0],0<=p&&p<k.materialTable.length&&(sp=k.materialTable[p][0]/3,em=k.materialTable[p][1]/3,di=k.materialTable[p][2]/3,am=k.materialTable[p][3]/3,R=k.materialTable[p][4],I[0]=k.colorTable[em][0],I[1]=k.colorTable[em][1],I[2]=k.colorTable[em][2],I[3]=k.materialTable[p][6],H[0]=k.colorTable[di][0],H[1]=
k.colorTable[di][1],H[2]=k.colorTable[di][2],H[3]=k.materialTable[p][7],F[0]=k.colorTable[am][0],F[1]=k.colorTable[am][1],F[2]=k.colorTable[am][2],F[3]=k.materialTable[p][8])):(p=k.styleTable[B][0]/3,M=k.styleTable[B][1]/255,0<=p&&p<k.colorTable.length&&(H[0]=k.colorTable[p][0],H[1]=k.colorTable[p][1],H[2]=k.colorTable[p][2],H[3]=M))),d.diffuses.push(H),d.emissions.push(I),d.shinesses.push(R),d.ambients.push(F));d.geometries.push(q)}}return d};var saveAs=saveAs||function(d){var h=d.document,k=d.URL||d.webkitURL||d,p=h.createElementNS("http://www.w3.org/1999/xhtml","a"),q="download"in p,w=d.webkitRequestFileSystem,s=d.requestFileSystem||w||d.mozRequestFileSystem,A=function(h){(d.setImmediate||d.setTimeout)(function(){throw h;},0)},B=0,C=[],D=function(d,h,k){for(var h=[].concat(h),p=h.length;p--;){var q=d["on"+h[p]];if("function"===typeof q)try{q.call(d,k||d)}catch(s){A(s)}}},F=function(k,A){var F=this,H=k.type,Q=!1,P,O,R=function(){var h=
(d.URL||d.webkitURL||d).createObjectURL(k);C.push(h);return h},$=function(){D(F,["writestart","progress","write","writeend"])},T=function(){if(Q||!P)P=R(k);O.location.href=P;F.readyState=F.DONE;$()},S=function(d){return function(){if(F.readyState!==F.DONE)return d.apply(this,arguments)}},Y={create:!0,exclusive:!1},X;F.readyState=F.INIT;A||(A="download");if(q&&(P=R(k),p.href=P,p.download=A,X=h.createEvent("MouseEvents"),X.initMouseEvent("click",!0,!1,d,0,0,0,0,0,!1,!1,!1,!1,0,null),p.dispatchEvent(X))){F.readyState=
F.DONE;$();return}d.chrome&&(H&&"application/octet-stream"!==H)&&(X=k.slice||k.webkitSlice,k=X.call(k,0,k.size,"application/octet-stream"),Q=!0);w&&"download"!==A&&(A+=".download");O="application/octet-stream"===H||w?d:d.open();s?(B+=k.size,s(d.TEMPORARY,B,S(function(d){d.root.getDirectory("saved",Y,S(function(d){var h=function(){d.getFile(A,Y,S(function(d){d.createWriter(S(function(h){h.onwriteend=function(h){O.location.href=d.toURL();C.push(d);F.readyState=F.DONE;D(F,"writeend",h)};h.onerror=function(){var d=
h.error;d.code!==d.ABORT_ERR&&T()};["writestart","progress","write","abort"].forEach(function(d){h["on"+d]=F["on"+d]});h.write(k);F.abort=function(){h.abort();F.readyState=F.DONE};F.readyState=F.WRITING}),T)}),T)};d.getFile(A,{create:!1},S(function(d){d.remove();h()}),S(function(d){d.code===d.NOT_FOUND_ERR?h():T()}))}),T)}),T)):T()},H=F.prototype;H.abort=function(){this.readyState=this.DONE;D(this,"abort")};H.readyState=H.INIT=0;H.WRITING=1;H.DONE=2;H.error=H.onwritestart=H.onprogress=H.onwrite=H.onabort=
H.onerror=H.onwriteend=null;d.addEventListener("unload",function(){for(var d=C.length;d--;){var h=C[d];"string"===typeof h?k.revokeObjectURL(h):h.remove()}C.length=0},!1);return function(d,h){return new F(d,h)}}(self);